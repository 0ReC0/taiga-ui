{"version":3,"sources":["./src/modules/components/input/examples/1/index.ts","./src/modules/components/input/examples/1/index.html","./src/modules/components/input/examples/2/index.ts","./src/modules/components/input/examples/2/index.html","./src/modules/components/input/examples/3/index.ts","./src/modules/components/input/examples/3/index.html","./src/modules/components/input/examples/4/index.ts","./src/modules/components/input/examples/4/index.html","./src/modules/components/input/examples/5/index.ts","./src/modules/components/input/examples/5/index.html","./src/modules/components/input/examples/6/index.ts","./src/modules/components/input/examples/6/index.html","./src/modules/components/input/examples/7/index.ts","./src/modules/components/input/examples/7/index.html","./src/modules/components/input/examples/8/index.ts","./src/modules/components/input/examples/8/index.html","./src/modules/components/input/examples/9/index.ts","./src/modules/components/input/examples/9/index.html","./src/modules/components/input/input.component.ts","./src/modules/components/input/input.template.html","./src/modules/components/input/input.module.ts"],"names":[],"mappings":"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","file":"components-input-input-module.js","sourcesContent":["import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-example-1`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputExample1 {\n    readonly testForm = new FormGroup({\n        testValue: new FormControl(`mail@mail.ru`),\n    });\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <tui-input formControlName=\"testValue\">\n        Type an email\n        <input\n            tuiTextfield\n            type=\"email\"\n        />\n    </tui-input>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-example-2`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputExample2 {\n    readonly testForm = new FormGroup({\n        testValue: new FormControl(`mail@mail.ru`),\n    });\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <p>\n        <tui-input\n            tuiTextfieldSize=\"s\"\n            formControlName=\"testValue\"\n        >\n            Type an email\n            <input\n                tuiTextfield\n                type=\"email\"\n            />\n        </tui-input>\n    </p>\n    <p>\n        <tui-input\n            tuiTextfieldSize=\"m\"\n            formControlName=\"testValue\"\n            [tuiTextfieldLabelOutside]=\"true\"\n        >\n            Type an email\n            <input\n                tuiTextfield\n                type=\"email\"\n            />\n        </tui-input>\n    </p>\n    <p>\n        <tui-input\n            formControlName=\"testValue\"\n            tuiHintContent=\"It will be used for sending documents\"\n            [tuiTextfieldCleaner]=\"true\"\n        >\n            Type an email&nbsp;\n            <span class=\"tui-required\"></span>\n            <input\n                tuiTextfield\n                placeholder=\"mail@mail.ru\"\n                type=\"email\"\n            />\n        </tui-input>\n    </p>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-example-3`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputExample3 {\n    readonly testForm = new FormGroup({\n        testValue1: new FormControl(``),\n        testValue2: new FormControl(``),\n    });\n\n    readonly textMaskOptions1 = {\n        guide: false,\n        mask: [/\\d/, /\\d/, /\\d/, /\\d/, ` `, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\n    };\n\n    readonly textMaskOptions2 = {\n        guide: false,\n        mask: [\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            `-`,\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            `-`,\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            `-`,\n            /\\d/,\n            /\\d/,\n        ],\n    };\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <tui-notification i18n>\n        Taiga UI input is compatible with\n        <a\n            tuiLink\n            href=\"https://www.npmjs.com/package/angular2-text-mask\"\n            target=\"_blank\"\n        >\n            angular2-text-mask\n        </a>\n    </tui-notification>\n    <p>\n        <tui-input\n            formControlName=\"testValue1\"\n            [textMask]=\"textMaskOptions1\"\n        >\n            Document number\n            <input\n                tuiTextfield\n                inputmode=\"numeric\"\n            />\n        </tui-input>\n    </p>\n    <p>\n        <tui-input\n            formControlName=\"testValue2\"\n            [textMask]=\"textMaskOptions2\"\n        >\n            Secret number\n            <input\n                tuiTextfield\n                inputmode=\"numeric\"\n            />\n        </tui-input>\n    </p>\n</form>\n<p>Value is stored in control with mask applied:</p>\n<pre>{{ testForm.value | json }}</pre>\n","import {Component, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiCurrency} from '@taiga-ui/addon-commerce';\nimport {TUI_DEFAULT_MATCHER, tuiReplayedValueChangesFrom} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {map} from 'rxjs/operators';\n\nimport {default as avatar} from '!!file-loader!../../../../../assets/images/avatar.jpg';\n\nclass User {\n    constructor(\n        readonly firstName: string,\n        readonly lastName: string,\n        readonly avatarUrl: string | null = null,\n        readonly accounts: Account[] = [],\n        readonly card: string = ``,\n    ) {}\n\n    toString(): string {\n        return `${this.firstName} ${this.lastName}`;\n    }\n}\n\nclass Account {\n    constructor(\n        readonly id: string,\n        readonly name: string,\n        readonly amount: number,\n        readonly currency: TuiCurrency,\n        readonly cardSvg: string,\n    ) {}\n\n    toString(): string {\n        return this.name;\n    }\n}\n\nconst accountsRoman = [\n    new Account(\n        `1`,\n        `RUB`,\n        24876.55,\n        TuiCurrency.Ruble,\n        `https://ng-web-apis.github.io/dist/assets/images/common.svg`,\n    ),\n    new Account(\n        `2`,\n        `USD`,\n        335,\n        TuiCurrency.Dollar,\n        `https://ng-web-apis.github.io/dist/assets/images/geolocation.svg`,\n    ),\n];\nconst accountsAlex = [\n    new Account(\n        `3`,\n        `EUR`,\n        10000,\n        TuiCurrency.Euro,\n        `https://ng-web-apis.github.io/dist/assets/images/intersection-observer.svg`,\n    ),\n    new Account(\n        `4`,\n        `PND`,\n        100,\n        TuiCurrency.Pound,\n        `https://ng-web-apis.github.io/dist/assets/images/payment-request.svg`,\n    ),\n];\nconst USERS = [\n    new User(`Roman`, `Sedov`, `http://marsibarsi.me/images/1x1small.jpg`, accountsRoman),\n    new User(`Alex`, `Inkin`, avatar, accountsAlex, `1234123412341234`),\n    new User(`Dmitriy`, `Demenskiy`),\n    new User(`Evgeniy`, `Mamaev`),\n    new User(`Ivan`, `Ishmametiev`),\n    new User(`Igor`, `Katsuba`),\n    new User(`Yulia`, `Tsareva`),\n];\n\n@Component({\n    selector: `tui-input-example-4`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputExample4 {\n    @ViewChild(`avatar`)\n    private readonly avatar: PolymorpheusContent = ``;\n\n    private readonly user = new FormControl(``);\n\n    readonly testForm = new FormGroup({\n        user: this.user,\n        account: new FormControl(``),\n        card: new FormControl(``),\n    });\n\n    lastUser: User | null = null;\n\n    readonly users$ = tuiReplayedValueChangesFrom<string>(this.user).pipe(\n        map(value => {\n            const filtered = USERS.filter(user => TUI_DEFAULT_MATCHER(user, value));\n\n            if (\n                filtered.length !== 1 ||\n                String(filtered[0]).toLowerCase() !== value.toLowerCase()\n            ) {\n                return filtered;\n            }\n\n            this.onSelected(filtered[0]);\n\n            return [];\n        }),\n    );\n\n    get card(): string | null {\n        const value = this.testForm.get(`card`)!.value;\n\n        if (value.length < 7) {\n            return null;\n        }\n\n        switch (value.charAt(0)) {\n            case `0`:\n            case `1`:\n            case `2`:\n                return `https://ng-web-apis.github.io/dist/assets/images/common.svg`;\n            case `3`:\n            case `4`:\n            case `5`:\n                return `https://ng-web-apis.github.io/dist/assets/images/geolocation.svg`;\n            case `6`:\n            case `7`:\n                return `https://ng-web-apis.github.io/dist/assets/images/intersection-observer.svg`;\n            case `8`:\n            case `9`:\n            default:\n                return `https://ng-web-apis.github.io/dist/assets/images/payment-request.svg`;\n        }\n    }\n\n    get isUserSelected(): boolean {\n        return (\n            this.lastUser !== null &&\n            this.lastUser.toString().toLowerCase() ===\n                this.testForm.get(`user`)!.value.toLowerCase()\n        );\n    }\n\n    get content(): PolymorpheusContent {\n        return this.avatar && this.isUserSelected ? this.avatar : ``;\n    }\n\n    get accounts(): Account[] {\n        return this.isUserSelected ? this.lastUser!.accounts : [];\n    }\n\n    onSelected(user: User): void {\n        this.lastUser = user;\n        this.testForm.get(`card`)!.setValue(user.card);\n    }\n}\n","<form\n    class=\"container\"\n    [formGroup]=\"testForm\"\n>\n    <tui-input\n        *tuiLet=\"users$ | async as users\"\n        formControlName=\"user\"\n        [tuiTextfieldCustomContent]=\"content\"\n    >\n        User\n        <input\n            tuiTextfield\n            placeholder=\"Type your name or surname\"\n        />\n        <ng-container *ngIf=\"users.length\">\n            <tui-data-list *tuiDataList>\n                <button\n                    *ngFor=\"let user of users\"\n                    tuiOption\n                    [value]=\"user.toString()\"\n                    (click)=\"onSelected(user)\"\n                >\n                    {{ user }}\n                    <tui-avatar\n                        size=\"xs\"\n                        [avatarUrl]=\"user.avatarUrl || null\"\n                        [text]=\"user.toString()\"\n                    ></tui-avatar>\n                </button>\n            </tui-data-list>\n        </ng-container>\n    </tui-input>\n    <ng-template #avatar>\n        <tui-avatar\n            *ngIf=\"lastUser\"\n            size=\"s\"\n            [rounded]=\"true\"\n            [avatarUrl]=\"lastUser.avatarUrl || null\"\n            [text]=\"lastUser.toString()\"\n        ></tui-avatar>\n    </ng-template>\n    <tui-input\n        formControlName=\"account\"\n        class=\"tui-space_vertical-5\"\n    >\n        Account\n        <tui-data-list-wrapper\n            *tuiDataList\n            [items]=\"accounts\"\n            [itemContent]=\"accountContent\"\n        ></tui-data-list-wrapper>\n        <ng-template\n            #accountContent\n            let-account\n        >\n            <div>\n                {{ account.name }}\n                <tui-money [value]=\"account.amount\"></tui-money>\n            </div>\n        </ng-template>\n    </tui-input>\n    <tui-input-card\n        formControlName=\"card\"\n        [tuiTextfieldCleaner]=\"true\"\n        [cardSrc]=\"card\"\n    >\n        Card number\n    </tui-input-card>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-example-5`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputExample5 {\n    readonly testForm = new FormGroup({\n        testValue: new FormControl(`mail@mail.ru`),\n    });\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <tui-notification i18n>\n        Custom mode is set with\n        <a\n            tuiLink\n            routerLink=\"/directives/mode\"\n        >\n            <code>tuiMode</code>\n        </a>\n        directive\n    </tui-notification>\n\n    <p>\n        <tui-input\n            formControlName=\"testValue\"\n            [tuiTextfieldCleaner]=\"true\"\n        >\n            Type an email\n            <input\n                tuiTextfield\n                placeholder=\"mail@mail.ru\"\n                type=\"email\"\n            />\n        </tui-input>\n    </p>\n    <div>\n        <p class=\"wrapper wrapper_dark\">\n            <tui-input\n                formControlName=\"testValue\"\n                tuiMode=\"onDark\"\n                [tuiTextfieldCleaner]=\"true\"\n            >\n                Type an email\n                <input\n                    tuiTextfield\n                    placeholder=\"mail@mail.ru\"\n                    type=\"email\"\n                />\n            </tui-input>\n        </p>\n    </div>\n    <div>\n        <p class=\"wrapper wrapper_light\">\n            <tui-input\n                formControlName=\"testValue\"\n                tuiMode=\"onLight\"\n                [tuiTextfieldCleaner]=\"true\"\n            >\n                Type an email\n                <input\n                    tuiTextfield\n                    placeholder=\"mail@mail.ru\"\n                    type=\"email\"\n                />\n            </tui-input>\n        </p>\n    </div>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-example-6`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputExample6 {\n    readonly items = [`Black`, `Gold`, `Silver`];\n    readonly form = new FormGroup({\n        name: new FormControl(``, Validators.required),\n        date: new FormControl(null, Validators.required),\n        color: new FormControl(null, Validators.required),\n        quantity: new FormControl(),\n        sum: new FormControl(255),\n    });\n}\n","<p i18n>\n    <code>tuiTable</code>\n    directive from\n    <code>@taiga-ui/addon-table</code>\n</p>\n\n<form\n    tuiTextfieldSize=\"m\"\n    [tuiTextfieldLabelOutside]=\"true\"\n    [formGroup]=\"form\"\n>\n    <table\n        tuiTable\n        class=\"table\"\n    >\n        <thead>\n            <tr>\n                <th\n                    tuiTh\n                    class=\"name\"\n                >\n                    Name\n                </th>\n                <th tuiTh>Date</th>\n                <th tuiTh>Gender</th>\n                <th tuiTh>Quantity</th>\n                <th tuiTh>Sum, $</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td tuiTd>\n                    <tui-input formControlName=\"name\">\n                        Name\n                        <input\n                            tuiTextfield\n                            placeholder=\"Ivan Ivanov\"\n                        />\n                    </tui-input>\n                </td>\n                <td tuiTd>\n                    <tui-input-date formControlName=\"date\">Date</tui-input-date>\n                </td>\n                <td tuiTd>\n                    <tui-select formControlName=\"color\">\n                        Color\n                        <tui-data-list-wrapper\n                            *tuiDataList\n                            [items]=\"items\"\n                        ></tui-data-list-wrapper>\n                    </tui-select>\n                </td>\n                <td tuiTd>\n                    <tui-input-count formControlName=\"quantity\">Quantity</tui-input-count>\n                </td>\n                <td tuiTd>\n                    <tui-input-number\n                        formControlName=\"sum\"\n                        [readOnly]=\"true\"\n                    >\n                        Sum\n                    </tui-input-number>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-example-7`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputExample7 {\n    readonly control = new FormControl(null, [\n        Validators.required,\n        Validators.minLength(5),\n    ]);\n}\n","<tui-input\n    tuiHintContent=\"Type 5 letters or more\"\n    class=\"b-form\"\n    [tuiTextfieldCleaner]=\"true\"\n    [tuiTextfieldCustomContent]=\"control.valid ? success : ''\"\n    [formControl]=\"control\"\n>\n    Hello\n</tui-input>\n<ng-template #success>\n    <tui-svg\n        src=\"tuiIconCheckLarge\"\n        class=\"success tui-space_left-3\"\n    ></tui-svg>\n</ng-template>\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TUI_DEFAULT_MATCHER} from '@taiga-ui/cdk';\nimport {Observable, of} from 'rxjs';\nimport {map, startWith, switchMap} from 'rxjs/operators';\n\nimport {default as avatar} from '!!file-loader!../../../../../assets/images/avatar.jpg';\n\nclass User {\n    constructor(\n        readonly firstName: string,\n        readonly lastName: string,\n        readonly avatarUrl: string | null = null,\n        readonly disabled: boolean = false,\n    ) {}\n\n    toString(): string {\n        return `${this.firstName} ${this.lastName}`;\n    }\n}\n\nconst DATA: readonly User[] = [\n    new User(`Roman`, `Sedov`, `http://marsibarsi.me/images/1x1small.jpg`),\n    new User(`Alex`, `Inkin`, avatar),\n    new User(`Gabriel José`, `de la Concordia «Gabo» García Márquez`),\n];\n\n@Component({\n    selector: `tui-input-example-8`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputExample8 {\n    readonly control = new FormControl(``);\n\n    firstName = ``;\n    lastName = ``;\n\n    readonly items$ = this.control.valueChanges.pipe(\n        startWith(``),\n        switchMap(value =>\n            this.request(value).pipe(\n                map(response => {\n                    if (response.length === 1 && String(response[0]) === value) {\n                        this.onClick(response[0]);\n\n                        return [];\n                    } else {\n                        return response;\n                    }\n                }),\n            ),\n        ),\n        startWith(DATA),\n    );\n\n    onClick({lastName, firstName}: User): void {\n        this.lastName = lastName;\n        this.firstName = firstName;\n    }\n\n    // Request imitation\n    private request(query: string): Observable<readonly User[]> {\n        return of(DATA.filter(item => TUI_DEFAULT_MATCHER(item, query)));\n    }\n}\n","<tui-input\n    *tuiLet=\"items$ | async as items\"\n    class=\"b-form\"\n    [formControl]=\"control\"\n>\n    Enter your name\n    <ng-container *ngIf=\"items.length\">\n        <tui-data-list *tuiDataList>\n            <button\n                *ngFor=\"let item of items\"\n                tuiOption\n                [value]=\"item\"\n                [disabled]=\"item.disabled\"\n                (click)=\"onClick(item)\"\n            >\n                <tui-avatar\n                    size=\"xs\"\n                    class=\"avatar\"\n                    [avatarUrl]=\"item.avatarUrl || null\"\n                    [text]=\"item.toString()\"\n                ></tui-avatar>\n                <span class=\"name\">{{ item }}</span>\n            </button>\n        </tui-data-list>\n    </ng-container>\n</tui-input>\n<p>Parsed on complete match:</p>\n{{ firstName }} {{ lastName }}\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-example-9`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputExample9 {\n    value = ``;\n}\n","<tui-input\n    icon=\"tuiIconSearchLarge\"\n    iconAlign=\"left\"\n    tuiHintContent=\"لا يدعمه Safari أدناه 12.1\"\n    tuiHintDirection=\"bottom-right\"\n    class=\"input\"\n    [tuiTextfieldCleaner]=\"true\"\n    [(ngModel)]=\"value\"\n>\n    بحث\n    <input\n        tuiTextfield\n        placeholder=\"اكتب الاستعلام الخاص بك\"\n    />\n</tui-input>\n","import {Component, forwardRef, TemplateRef, ViewChild} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\nimport {TuiHorizontalDirection} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nimport {AbstractExampleTuiControl} from '../abstract/control';\nimport {ABSTRACT_PROPS_ACCESSOR} from '../abstract/inherited-documentation/abstract-props-accessor';\n\nconst LONG_TEXT_TEMPLATE = `<span>LongTextContent</span>`;\n\n@Component({\n    selector: `example-tui-input`,\n    templateUrl: `./input.template.html`,\n    styleUrls: [`./input.style.less`],\n    changeDetection,\n    providers: [\n        {\n            provide: ABSTRACT_PROPS_ACCESSOR,\n            useExisting: forwardRef(() => ExampleTuiInputComponent),\n        },\n    ],\n})\nexport class ExampleTuiInputComponent extends AbstractExampleTuiControl {\n    @ViewChild(`justLongText`, {static: true})\n    private readonly longTextRef!: TemplateRef<HTMLElement>;\n\n    private _customContentSelected: PolymorpheusContent | null = null;\n\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n\n    readonly exampleForm = import(`!!raw-loader!./examples/import/declare-form.md`);\n\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n    };\n\n    readonly example2: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/2/index.ts`),\n        HTML: import(`!!raw-loader!./examples/2/index.html`),\n    };\n\n    readonly example3: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/3/index.ts`),\n        HTML: import(`!!raw-loader!./examples/3/index.html`),\n    };\n\n    readonly example4: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/4/index.ts`),\n        HTML: import(`!!raw-loader!./examples/4/index.html`),\n        LESS: import(`!!raw-loader!./examples/4/index.less`),\n    };\n\n    readonly example5: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/5/index.ts`),\n        HTML: import(`!!raw-loader!./examples/5/index.html`),\n        LESS: import(`!!raw-loader!./examples/5/index.less`),\n    };\n\n    readonly example6: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/6/index.ts`),\n        HTML: import(`!!raw-loader!./examples/6/index.html`),\n        LESS: import(`!!raw-loader!./examples/6/index.less`),\n    };\n\n    readonly example7: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/7/index.ts`),\n        HTML: import(`!!raw-loader!./examples/7/index.html`),\n        LESS: import(`!!raw-loader!./examples/7/index.less`),\n    };\n\n    readonly example8: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/8/index.ts`),\n        HTML: import(`!!raw-loader!./examples/8/index.html`),\n        LESS: import(`!!raw-loader!./examples/8/index.less`),\n    };\n\n    readonly example9: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/9/index.ts`),\n        HTML: import(`!!raw-loader!./examples/9/index.html`),\n        LESS: import(`!!raw-loader!./examples/9/index.less`),\n    };\n\n    readonly iconVariants = [null, `tuiIconSearch`, `tuiIconCalendar`];\n\n    icon = this.iconVariants[0];\n\n    readonly iconAlignVariants: readonly TuiHorizontalDirection[] = [`left`, `right`];\n\n    iconAlign: TuiHorizontalDirection = this.iconAlignVariants[1];\n\n    readonly control = new FormControl(`111`, Validators.required);\n\n    readonly customContentVariants = [\n        `tuiIconSearchLarge`,\n        `tuiIconCalendarLarge`,\n        `tuiIconVisaMono`,\n        `tuiIconMastercardMono`,\n        LONG_TEXT_TEMPLATE,\n    ];\n\n    get customContentSelected(): PolymorpheusContent | null {\n        return this._customContentSelected === LONG_TEXT_TEMPLATE\n            ? this.longTextRef\n            : this._customContentSelected;\n    }\n\n    set customContentSelected(newValue) {\n        this._customContentSelected = newValue;\n    }\n}\n","<tui-doc-page\n    header=\"Input\"\n    package=\"KIT\"\n    type=\"components\"\n>\n    <ng-template pageTab>\n        <div\n            i18n\n            class=\"tui-space_bottom-3\"\n        >\n            Input&nbsp;&mdash; is a single-line textfield. It's not recommended to use it with numbers, because the\n            value type of this component is a string\n        </div>\n\n        <p i18n>Inputs for other types of data:</p>\n\n        <blockquote>\n            <ul i18n>\n                <li>\n                    <a\n                        tuiLink\n                        routerLink=\"/components/text-area\"\n                    >\n                        <code>TextArea</code>\n                    </a>\n                    — for multiline text\n                </li>\n                <li>\n                    <a\n                        tuiLink\n                        routerLink=\"/components/input-date\"\n                    >\n                        <code>InputDate</code>\n                    </a>\n                    — for dates\n                </li>\n                <li>\n                    <a\n                        tuiLink\n                        routerLink=\"/components/input-date-range\"\n                    >\n                        <code>InputDateRange</code>\n                    </a>\n                    — for a range of dates\n                </li>\n                <li>\n                    <a\n                        tuiLink\n                        routerLink=\"/components/input-number\"\n                    >\n                        <code>InputNumber</code>\n                    </a>\n                    — for number (with measurement postfix)\n                </li>\n                <li>\n                    <a\n                        tuiLink\n                        routerLink=\"/components/input-password\"\n                    >\n                        <code>InputPassword</code>\n                    </a>\n                    — for passwords\n                </li>\n                <li>\n                    <a\n                        tuiLink\n                        routerLink=\"/components/input-phone\"\n                    >\n                        <code>InputPhone</code>\n                    </a>\n                    — for phone numbers\n                </li>\n                <li>\n                    <a\n                        tuiLink\n                        routerLink=\"/components/input-tag\"\n                    >\n                        <code>InputTag</code>\n                    </a>\n                    — for inputing tags\n                </li>\n                <li>\n                    <a\n                        tuiLink\n                        routerLink=\"/components/input-range\"\n                    >\n                        <code>InputRange</code>\n                    </a>\n                    ,\n                    <a\n                        tuiLink\n                        routerLink=\"/components/input-slider\"\n                    >\n                        <code>InputSlider</code>\n                    </a>\n                    — for accurate number values\n                </li>\n                <li>\n                    <a\n                        tuiLink\n                        routerLink=\"/components/slider\"\n                    >\n                        <code>Slider</code>\n                    </a>\n                    ,\n                    <a\n                        tuiLink\n                        routerLink=\"/components/range\"\n                    >\n                        <code>Range</code>\n                    </a>\n                    — for not accurate number values\n                </li>\n                <li>\n                    <a\n                        tuiLink\n                        routerLink=\"/components/input-count\"\n                    >\n                        <code>InputCount</code>\n                    </a>\n                    — for integer number of smth\n                </li>\n            </ul>\n        </blockquote>\n\n        <tui-doc-example\n            id=\"base\"\n            i18n-heading\n            heading=\"Basic\"\n            [content]=\"example1\"\n        >\n            <tui-notification class=\"tui-space_bottom-4 b-form\">\n                If you need to set some attributes or listen to events on native\n                <code>input</code>\n                , you can put it inside with\n                <code>Textfield</code>\n                directive as shown below\n            </tui-notification>\n            <tui-input-example-1></tui-input-example-1>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"sizes\"\n            i18n-heading\n            heading=\"sizes\"\n            [content]=\"example2\"\n        >\n            <tui-input-example-2></tui-input-example-2>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"mask\"\n            i18n-heading\n            heading=\"Mask\"\n            [content]=\"example3\"\n        >\n            <tui-input-example-3></tui-input-example-3>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"autocomplete\"\n            i18n-heading\n            heading=\"Autocomplete\"\n            [content]=\"example4\"\n        >\n            <tui-input-example-4></tui-input-example-4>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"modes\"\n            i18n-heading\n            heading=\"Modes\"\n            [content]=\"example5\"\n        >\n            <tui-input-example-5></tui-input-example-5>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"table\"\n            i18n-heading\n            heading=\"Table\"\n            [content]=\"example6\"\n        >\n            <tui-input-example-6></tui-input-example-6>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"success\"\n            i18n-heading\n            heading=\"Check\"\n            description=\"A check mark by success validation\"\n            [content]=\"example7\"\n        >\n            <tui-input-example-7></tui-input-example-7>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"datalist\"\n            heading=\"DataList\"\n            [content]=\"example8\"\n        >\n            <tui-input-example-8></tui-input-example-8>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"rtl\"\n            heading=\"Direction: RTL\"\n            [content]=\"example9\"\n        >\n            <tui-input-example-9></tui-input-example-9>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        <tui-doc-demo [control]=\"control\">\n            <ng-template>\n                <tui-input\n                    [formControl]=\"control\"\n                    [focusable]=\"focusable\"\n                    [pseudoInvalid]=\"pseudoInvalid\"\n                    [pseudoFocused]=\"pseudoFocused\"\n                    [pseudoHovered]=\"pseudoHovered\"\n                    [icon]=\"icon\"\n                    [iconAlign]=\"iconAlign\"\n                    [readOnly]=\"readOnly\"\n                    [tuiTextfieldType]=\"type\"\n                    [tuiTextfieldExampleText]=\"exampleText\"\n                    [tuiTextfieldLabelOutside]=\"labelOutside\"\n                    [tuiTextfieldCustomContent]=\"customContent\"\n                    [tuiTextfieldAutocomplete]=\"autocomplete\"\n                    [tuiTextfieldInputMode]=\"inputMode\"\n                    [tuiTextfieldSize]=\"size\"\n                    [tuiTextfieldCleaner]=\"cleaner\"\n                    [tuiTextfieldMaxLength]=\"maxLength\"\n                    [tuiDropdownAlign]=\"dropdownAlign\"\n                    [tuiDropdownDirection]=\"dropdownDirection\"\n                    [tuiDropdownLimitWidth]=\"dropdownLimitWidth\"\n                    [tuiDropdownMinHeight]=\"dropdownMinHeight\"\n                    [tuiDropdownMaxHeight]=\"dropdownMaxHeight\"\n                    [tuiHintContent]=\"hintContent\"\n                    [tuiHintDirection]=\"hintDirection\"\n                    [tuiHintMode]=\"hintMode\"\n                >\n                    placeholder\n                    <strong>strong text</strong>\n                </tui-input>\n            </ng-template>\n        </tui-doc-demo>\n        <ng-template\n            #itemContent\n            let-data\n        >\n            <div class=\"account\">\n                <div class=\"name\">{{ data.name }}</div>\n                <tui-money [value]=\"data.balance\"></tui-money>\n            </div>\n        </ng-template>\n        <tui-doc-documentation>\n            <ng-template\n                i18n\n                documentationPropertyName=\"\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"disabled\"\n            >\n                Disabled state (use\n                <code>formControl.disable()</code>\n                )\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"icon\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"string | null\"\n                [documentationPropertyValues]=\"iconVariants\"\n                [(documentationPropertyValue)]=\"icon\"\n            >\n                An icon. It can be stringified svg or a name of icon registered in\n                <a\n                    tuiLink\n                    routerLink=\"/services/svg-service\"\n                >\n                    <code>SvgService</code>\n                </a>\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"iconAlign\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiHorizontalDirection\"\n                [documentationPropertyValues]=\"iconAlignVariants\"\n                [(documentationPropertyValue)]=\"iconAlign\"\n            >\n                Icon align\n            </ng-template>\n        </tui-doc-documentation>\n        <inherited-documentation [dropdown]=\"true\"></inherited-documentation>\n    </ng-template>\n\n    <ng-template pageTab>\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Import an Angular module for forms and\n                    <code>TuiInputModule</code>\n                    in the same module where you want to use our component:\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>\n                    Declare a form (\n                    <code>FormGroup</code>\n                    ) or a control (\n                    <code>FormControl</code>\n                    ) in your component:\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.component.ts\"\n                    [code]=\"exampleForm\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Add to the template:</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n\n<ng-template #justLongText>LongTextContent</ng-template>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {TuiInputCardModule, TuiMoneyModule} from '@taiga-ui/addon-commerce';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {TuiTableModule} from '@taiga-ui/addon-table';\nimport {TuiLetModule, TuiMapperPipeModule, TuiRepeatTimesModule} from '@taiga-ui/cdk';\nimport {\n    TuiButtonModule,\n    TuiDataListModule,\n    TuiDropdownControllerModule,\n    TuiGroupModule,\n    TuiHintControllerModule,\n    TuiLinkModule,\n    TuiModeModule,\n    TuiNotificationModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {\n    TuiAvatarModule,\n    TuiDataListWrapperModule,\n    TuiInputCountModule,\n    TuiInputDateModule,\n    TuiInputModule,\n    TuiInputNumberModule,\n    TuiRadioListModule,\n    TuiSelectModule,\n} from '@taiga-ui/kit';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\nimport {TextMaskModule} from 'angular2-text-mask';\n\nimport {InheritedDocumentationModule} from '../abstract/inherited-documentation/inherited-documentation.module';\nimport {TuiInputExample1} from './examples/1';\nimport {TuiInputExample2} from './examples/2';\nimport {TuiInputExample3} from './examples/3';\nimport {TuiInputExample4} from './examples/4';\nimport {TuiInputExample5} from './examples/5';\nimport {TuiInputExample6} from './examples/6';\nimport {TuiInputExample7} from './examples/7';\nimport {TuiInputExample8} from './examples/8';\nimport {TuiInputExample9} from './examples/9';\nimport {ExampleTuiInputComponent} from './input.component';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        InheritedDocumentationModule,\n        ReactiveFormsModule,\n        FormsModule,\n        CommonModule,\n        TuiInputModule,\n        TuiInputNumberModule,\n        TuiInputCountModule,\n        TuiSelectModule,\n        TuiGroupModule,\n        TuiMapperPipeModule,\n        TuiMoneyModule,\n        TuiLinkModule,\n        TuiModeModule,\n        TuiTableModule,\n        TuiInputDateModule,\n        TuiNotificationModule,\n        TuiRepeatTimesModule,\n        TuiSvgModule,\n        TuiRadioListModule,\n        TuiButtonModule,\n        TuiInputCardModule,\n        TuiAvatarModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiHintControllerModule,\n        TuiDropdownControllerModule,\n        TuiDataListModule,\n        TuiDataListWrapperModule,\n        TuiLetModule,\n        PolymorpheusModule,\n        TuiAddonDocModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiInputComponent)),\n        TextMaskModule,\n    ],\n    declarations: [\n        ExampleTuiInputComponent,\n        TuiInputExample1,\n        TuiInputExample2,\n        TuiInputExample3,\n        TuiInputExample4,\n        TuiInputExample5,\n        TuiInputExample6,\n        TuiInputExample7,\n        TuiInputExample8,\n        TuiInputExample9,\n    ],\n    exports: [ExampleTuiInputComponent],\n})\nexport class ExampleTuiInputModule {}\n"],"sourceRoot":"webpack:///"}