{"version":3,"sources":["./src/modules/components/expand/examples/1/index.ts","./src/modules/components/expand/examples/1/index.html","./src/modules/components/expand/expand.component.ts","./src/modules/components/expand/expand.template.html","./src/modules/components/expand/expand.module.ts"],"names":[],"mappings":"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","file":"components-expand-expand-module.js","sourcesContent":["import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-expand-example-1`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiExpandExample1 {\n    expanded = false;\n\n    toggle(): void {\n        this.expanded = !this.expanded;\n    }\n}\n","<p>\n    Chapman: Mr Wentworth just told me to come in here and say that there was trouble at the mill, that's all - I didn't\n    expect a kind of Spanish Inquisition.\n</p>\n<button\n    tuiButton\n    type=\"button\"\n    (click)=\"toggle()\"\n>\n    Show/Hide\n</button>\n<tui-expand [expanded]=\"expanded\">\n    <ng-template tuiExpandContent>\n        <p>NOBODY expects the Spanish Inquisition!</p>\n    </ng-template>\n</tui-expand>\n","import {DOCUMENT} from '@angular/common';\nimport {ChangeDetectorRef, Component, ElementRef, Inject, ViewChild} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\nimport {tuiCustomEvent} from '@taiga-ui/cdk';\nimport {TUI_EXPAND_LOADED, TuiExpandComponent} from '@taiga-ui/core';\n\n@Component({\n    selector: `example-expand`,\n    templateUrl: `./expand.template.html`,\n    styleUrls: [`./expand.style.less`],\n    changeDetection,\n})\nexport class ExampleTuiExpandComponent {\n    @ViewChild(TuiExpandComponent, {read: ElementRef})\n    expand?: ElementRef;\n\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n    };\n\n    expanded = false;\n\n    async = false;\n\n    delayed = false;\n\n    constructor(\n        @Inject(ChangeDetectorRef) private readonly changeDetectorRef: ChangeDetectorRef,\n        @Inject(DOCUMENT) private readonly documentRef: Document,\n    ) {}\n\n    onExpandedChange(expanded: boolean): void {\n        this.expanded = expanded;\n        this.delayed = this.async && expanded;\n\n        if (!this.async || !this.expanded) {\n            return;\n        }\n\n        setTimeout(() => {\n            const event = tuiCustomEvent(\n                TUI_EXPAND_LOADED,\n                {bubbles: true},\n                this.documentRef,\n            );\n\n            this.delayed = false;\n            this.changeDetectorRef.detectChanges();\n\n            if (this.expand) {\n                this.expand.nativeElement.dispatchEvent(event);\n            }\n        }, 5000);\n    }\n}\n","<tui-doc-page\n    header=\"Expand\"\n    package=\"CORE\"\n    type=\"components\"\n>\n    <ng-template pageTab>\n        <p i18n>Component to show expandable content</p>\n\n        <tui-doc-example\n            id=\"base\"\n            i18n-heading\n            heading=\"Basic\"\n            [content]=\"example1\"\n        >\n            <tui-expand-example-1></tui-expand-example-1>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        Darth Vader is (spoilers below):\n        <tui-expand\n            class=\"b-full-width\"\n            [expanded]=\"expanded\"\n            [async]=\"async\"\n        >\n            <ng-template tuiExpandContent>\n                <div *ngIf=\"!delayed\">\n                    <p>Luke's father.</p>\n                    <p class=\"tooltip\">\n                        Also Tyler Durden doesn't actually exist (hover for mode details)\n                        <span class=\"bubble\">\n                            Fight Club reference (notice how spoiler has\n                            <code>overflow: visible;</code>\n                            when it's open).\n                        </span>\n                    </p>\n                    <div>\n                        A spoiler is an element of a disseminated summary or description of any piece of fiction that\n                        reveals any plot elements which threaten to give away important details. Typically, the details\n                        of the conclusion of the plot, including the climax and ending, are especially regarded as\n                        spoiler material. It can also be used to refer to any piece of information regarding any part of\n                        a given media that a potential consumer would not want to know beforehand. Because enjoyment of\n                        fiction depends a great deal upon the suspense of revealing plot details through standard\n                        narrative progression, the prior revelation of how things will turn out can \"spoil\" the\n                        enjoyment that some consumers of the narrative would otherwise have experienced. Spoilers can be\n                        found in message boards, articles, reviews, commercials, and movie trailers.\n                    </div>\n                </div>\n            </ng-template>\n        </tui-expand>\n        <tui-doc-documentation>\n            <ng-template\n                i18n\n                documentationPropertyName=\"async\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"async\"\n            >\n                Waits for a custom event\n                <code>TUI_EXPAND_LOADED</code>\n                before opening. Content is initialized when opening starts\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"expanded\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"boolean\"\n                [documentationPropertyValue]=\"expanded\"\n                (documentationPropertyValueChange)=\"onExpandedChange($event)\"\n            >\n                Open / close state\n            </ng-template>\n        </tui-doc-documentation>\n    </ng-template>\n\n    <ng-template pageTab>\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Import\n                    <code>TuiExpandModule</code>\n                    into a module where you want to use our component\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Add to the template:</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {TuiButtonModule, TuiExpandModule} from '@taiga-ui/core';\n\nimport {TuiExpandExample1} from './examples/1';\nimport {ExampleTuiExpandComponent} from './expand.component';\n\n@NgModule({\n    imports: [\n        TuiExpandModule,\n        TuiButtonModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TuiAddonDocModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiExpandComponent)),\n    ],\n    declarations: [ExampleTuiExpandComponent, TuiExpandExample1],\n    exports: [ExampleTuiExpandComponent],\n})\nexport class ExampleTuiExpandModule {}\n"],"sourceRoot":"webpack:///"}