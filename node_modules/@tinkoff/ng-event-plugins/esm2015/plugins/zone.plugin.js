/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { AbstractEventPlugin } from './abstract.plugin';
/**
 * TODO: This will not be needed in Angular 10
 * when libraries are allowed to use Ivy renderer and markDirty becomes stable API
 */
export class ZoneEventPlugin extends AbstractEventPlugin {
    constructor() {
        super(...arguments);
        this.modifier = 'init';
    }
    /**
     * @param {?} _element
     * @param {?} _event
     * @param {?} handler
     * @return {?}
     */
    addEventListener(_element, _event, handler) {
        return this.handle(handler);
    }
    /**
     * @param {?} _element
     * @param {?} _event
     * @param {?} handler
     * @return {?}
     */
    addGlobalEventListener(_element, _event, handler) {
        return this.handle(handler);
    }
    /**
     * @private
     * @param {?} handler
     * @return {?}
     */
    handle(handler) {
        /** @type {?} */
        const zone = this.manager.getZone();
        /** @type {?} */
        const subscription = zone.onStable.subscribe(() => {
            subscription.unsubscribe();
            handler(zone);
        });
        return () => { };
    }
}
ZoneEventPlugin.decorators = [
    { type: Injectable }
];
if (false) {
    /**
     * @type {?}
     * @protected
     */
    ZoneEventPlugin.prototype.modifier;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9uZS5wbHVnaW4uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGlua29mZi9uZy1ldmVudC1wbHVnaW5zLyIsInNvdXJjZXMiOlsicGx1Z2lucy96b25lLnBsdWdpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQzs7Ozs7QUFPdEQsTUFBTSxPQUFPLGVBQWdCLFNBQVEsbUJBQW1CO0lBRHhEOztRQUV1QixhQUFRLEdBQUcsTUFBTSxDQUFDO0lBdUJ6QyxDQUFDOzs7Ozs7O0lBckJHLGdCQUFnQixDQUFDLFFBQXFCLEVBQUUsTUFBYyxFQUFFLE9BQWlCO1FBQ3JFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7Ozs7O0lBRUQsc0JBQXNCLENBQ2xCLFFBQWdCLEVBQ2hCLE1BQWMsRUFDZCxPQUFpQjtRQUVqQixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7Ozs7O0lBRU8sTUFBTSxDQUFDLE9BQWlCOztjQUN0QixJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUU7O2NBQzdCLFlBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUU7WUFDOUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQzNCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixDQUFDLENBQUM7UUFFRixPQUFPLEdBQUcsRUFBRSxHQUFFLENBQUMsQ0FBQztJQUNwQixDQUFDOzs7WUF4QkosVUFBVTs7Ozs7OztJQUVQLG1DQUFxQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7QWJzdHJhY3RFdmVudFBsdWdpbn0gZnJvbSAnLi9hYnN0cmFjdC5wbHVnaW4nO1xyXG5cclxuLyoqXHJcbiAqIFRPRE86IFRoaXMgd2lsbCBub3QgYmUgbmVlZGVkIGluIEFuZ3VsYXIgMTBcclxuICogd2hlbiBsaWJyYXJpZXMgYXJlIGFsbG93ZWQgdG8gdXNlIEl2eSByZW5kZXJlciBhbmQgbWFya0RpcnR5IGJlY29tZXMgc3RhYmxlIEFQSVxyXG4gKi9cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgWm9uZUV2ZW50UGx1Z2luIGV4dGVuZHMgQWJzdHJhY3RFdmVudFBsdWdpbiB7XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgbW9kaWZpZXIgPSAnaW5pdCc7XHJcblxyXG4gICAgYWRkRXZlbnRMaXN0ZW5lcihfZWxlbWVudDogSFRNTEVsZW1lbnQsIF9ldmVudDogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5oYW5kbGUoaGFuZGxlcik7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkR2xvYmFsRXZlbnRMaXN0ZW5lcihcclxuICAgICAgICBfZWxlbWVudDogc3RyaW5nLFxyXG4gICAgICAgIF9ldmVudDogc3RyaW5nLFxyXG4gICAgICAgIGhhbmRsZXI6IEZ1bmN0aW9uLFxyXG4gICAgKTogRnVuY3Rpb24ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmhhbmRsZShoYW5kbGVyKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGhhbmRsZShoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcclxuICAgICAgICBjb25zdCB6b25lID0gdGhpcy5tYW5hZ2VyLmdldFpvbmUoKTtcclxuICAgICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSB6b25lLm9uU3RhYmxlLnN1YnNjcmliZSgoKSA9PiB7XHJcbiAgICAgICAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xyXG4gICAgICAgICAgICBoYW5kbGVyKHpvbmUpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gKCkgPT4ge307XHJcbiAgICB9XHJcbn1cclxuIl19