/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { AbstractEventPlugin } from './abstract.plugin';
var SilentEventPlugin = /** @class */ (function (_super) {
    tslib_1.__extends(SilentEventPlugin, _super);
    function SilentEventPlugin() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.modifier = 'silent';
        return _this;
    }
    /**
     * @param {?} element
     * @param {?} event
     * @param {?} handler
     * @return {?}
     */
    SilentEventPlugin.prototype.addEventListener = /**
     * @param {?} element
     * @param {?} event
     * @param {?} handler
     * @return {?}
     */
    function (element, event, handler) {
        var _this = this;
        return this.manager
            .getZone()
            .runOutsideAngular(function () {
            return _this.manager.addEventListener(element, _this.unwrap(event), handler);
        });
    };
    /**
     * @param {?} element
     * @param {?} event
     * @param {?} handler
     * @return {?}
     */
    SilentEventPlugin.prototype.addGlobalEventListener = /**
     * @param {?} element
     * @param {?} event
     * @param {?} handler
     * @return {?}
     */
    function (element, event, handler) {
        var _this = this;
        return this.manager
            .getZone()
            .runOutsideAngular(function () {
            return _this.manager.addGlobalEventListener(element, _this.unwrap(event), handler);
        });
    };
    SilentEventPlugin.decorators = [
        { type: Injectable }
    ];
    return SilentEventPlugin;
}(AbstractEventPlugin));
export { SilentEventPlugin };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    SilentEventPlugin.prototype.modifier;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lsZW50LnBsdWdpbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aW5rb2ZmL25nLWV2ZW50LXBsdWdpbnMvIiwic291cmNlcyI6WyJwbHVnaW5zL3NpbGVudC5wbHVnaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBRXREO0lBQ3VDLDZDQUFtQjtJQUQxRDtRQUFBLHFFQW1CQztRQWpCc0IsY0FBUSxHQUFHLFFBQVEsQ0FBQzs7SUFpQjNDLENBQUM7Ozs7Ozs7SUFmRyw0Q0FBZ0I7Ozs7OztJQUFoQixVQUFpQixPQUFvQixFQUFFLEtBQWEsRUFBRSxPQUFpQjtRQUF2RSxpQkFNQztRQUxHLE9BQU8sSUFBSSxDQUFDLE9BQU87YUFDZCxPQUFPLEVBQUU7YUFDVCxpQkFBaUIsQ0FBQztZQUNmLE9BQUEsS0FBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsS0FBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxPQUFPLENBQUM7UUFBbkUsQ0FBbUUsQ0FDdEUsQ0FBQztJQUNWLENBQUM7Ozs7Ozs7SUFFRCxrREFBc0I7Ozs7OztJQUF0QixVQUF1QixPQUFlLEVBQUUsS0FBYSxFQUFFLE9BQWlCO1FBQXhFLGlCQU1DO1FBTEcsT0FBTyxJQUFJLENBQUMsT0FBTzthQUNkLE9BQU8sRUFBRTthQUNULGlCQUFpQixDQUFDO1lBQ2YsT0FBQSxLQUFJLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLE9BQU8sRUFBRSxLQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLE9BQU8sQ0FBQztRQUF6RSxDQUF5RSxDQUM1RSxDQUFDO0lBQ1YsQ0FBQzs7Z0JBbEJKLFVBQVU7O0lBbUJYLHdCQUFDO0NBQUEsQUFuQkQsQ0FDdUMsbUJBQW1CLEdBa0J6RDtTQWxCWSxpQkFBaUI7Ozs7OztJQUMxQixxQ0FBdUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0Fic3RyYWN0RXZlbnRQbHVnaW59IGZyb20gJy4vYWJzdHJhY3QucGx1Z2luJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFNpbGVudEV2ZW50UGx1Z2luIGV4dGVuZHMgQWJzdHJhY3RFdmVudFBsdWdpbiB7XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgbW9kaWZpZXIgPSAnc2lsZW50JztcclxuXHJcbiAgICBhZGRFdmVudExpc3RlbmVyKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCBldmVudDogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tYW5hZ2VyXHJcbiAgICAgICAgICAgIC5nZXRab25lKClcclxuICAgICAgICAgICAgLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1hbmFnZXIuYWRkRXZlbnRMaXN0ZW5lcihlbGVtZW50LCB0aGlzLnVud3JhcChldmVudCksIGhhbmRsZXIpLFxyXG4gICAgICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZEdsb2JhbEV2ZW50TGlzdGVuZXIoZWxlbWVudDogc3RyaW5nLCBldmVudDogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbik6IEZ1bmN0aW9uIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tYW5hZ2VyXHJcbiAgICAgICAgICAgIC5nZXRab25lKClcclxuICAgICAgICAgICAgLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1hbmFnZXIuYWRkR2xvYmFsRXZlbnRMaXN0ZW5lcihlbGVtZW50LCB0aGlzLnVud3JhcChldmVudCksIGhhbmRsZXIpLFxyXG4gICAgICAgICAgICApO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==