(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/platform-browser'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@tinkoff/ng-event-plugins', ['exports', '@angular/platform-browser', '@angular/core'], factory) :
    (factory((global.tinkoff = global.tinkoff || {}, global.tinkoff['ng-event-plugins'] = {}),global.ng.platformBrowser,global.ng.core));
}(this, (function (exports,platformBrowser,core) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    // this is not public API so we cannot extend it
    // import {EventManagerPlugin} from '@angular/platform-browser/src/dom/events/event_manager';
    // TODO: A subject to change: https://github.com/angular/angular/issues/3929
    /**
     * @abstract
     */
    var  
    // this is not public API so we cannot extend it
    // import {EventManagerPlugin} from '@angular/platform-browser/src/dom/events/event_manager';
    // TODO: A subject to change: https://github.com/angular/angular/issues/3929
    /**
     * @abstract
     */
    AbstractEventPlugin = /** @class */ (function () {
        function AbstractEventPlugin() {
        }
        /**
         * @param {?} event
         * @return {?}
         */
        AbstractEventPlugin.prototype.supports = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                return event.split('.').indexOf(this.modifier) !== -1;
            };
        /**
         * @protected
         * @param {?} event
         * @return {?}
         */
        AbstractEventPlugin.prototype.unwrap = /**
         * @protected
         * @param {?} event
         * @return {?}
         */
            function (event) {
                var _this = this;
                return event
                    .split('.')
                    .filter(function (v) { return v !== _this.modifier; })
                    .join('.');
            };
        return AbstractEventPlugin;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var PreventEventPlugin = /** @class */ (function (_super) {
        __extends(PreventEventPlugin, _super);
        function PreventEventPlugin() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.modifier = 'prevent';
            return _this;
        }
        /**
         * @param {?} element
         * @param {?} event
         * @param {?} handler
         * @return {?}
         */
        PreventEventPlugin.prototype.addEventListener = /**
         * @param {?} element
         * @param {?} event
         * @param {?} handler
         * @return {?}
         */
            function (element, event, handler) {
                /** @type {?} */
                var wrapped = function (event) {
                    event.preventDefault();
                    handler(event);
                };
                return this.manager.addEventListener(element, this.unwrap(event), wrapped);
            };
        /**
         * @param {?} element
         * @param {?} event
         * @param {?} handler
         * @return {?}
         */
        PreventEventPlugin.prototype.addGlobalEventListener = /**
         * @param {?} element
         * @param {?} event
         * @param {?} handler
         * @return {?}
         */
            function (element, event, handler) {
                /** @type {?} */
                var wrapped = function (event) {
                    event.preventDefault();
                    handler(event);
                };
                return this.manager.addGlobalEventListener(element, this.unwrap(event), wrapped);
            };
        PreventEventPlugin.decorators = [
            { type: core.Injectable }
        ];
        return PreventEventPlugin;
    }(AbstractEventPlugin));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SilentEventPlugin = /** @class */ (function (_super) {
        __extends(SilentEventPlugin, _super);
        function SilentEventPlugin() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.modifier = 'silent';
            return _this;
        }
        /**
         * @param {?} element
         * @param {?} event
         * @param {?} handler
         * @return {?}
         */
        SilentEventPlugin.prototype.addEventListener = /**
         * @param {?} element
         * @param {?} event
         * @param {?} handler
         * @return {?}
         */
            function (element, event, handler) {
                var _this = this;
                return this.manager
                    .getZone()
                    .runOutsideAngular(function () {
                    return _this.manager.addEventListener(element, _this.unwrap(event), handler);
                });
            };
        /**
         * @param {?} element
         * @param {?} event
         * @param {?} handler
         * @return {?}
         */
        SilentEventPlugin.prototype.addGlobalEventListener = /**
         * @param {?} element
         * @param {?} event
         * @param {?} handler
         * @return {?}
         */
            function (element, event, handler) {
                var _this = this;
                return this.manager
                    .getZone()
                    .runOutsideAngular(function () {
                    return _this.manager.addGlobalEventListener(element, _this.unwrap(event), handler);
                });
            };
        SilentEventPlugin.decorators = [
            { type: core.Injectable }
        ];
        return SilentEventPlugin;
    }(AbstractEventPlugin));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var StopEventPlugin = /** @class */ (function (_super) {
        __extends(StopEventPlugin, _super);
        function StopEventPlugin() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.modifier = 'stop';
            return _this;
        }
        /**
         * @param {?} element
         * @param {?} event
         * @param {?} handler
         * @return {?}
         */
        StopEventPlugin.prototype.addEventListener = /**
         * @param {?} element
         * @param {?} event
         * @param {?} handler
         * @return {?}
         */
            function (element, event, handler) {
                /** @type {?} */
                var wrapped = function (event) {
                    event.stopPropagation();
                    handler(event);
                };
                return this.manager.addEventListener(element, this.unwrap(event), wrapped);
            };
        /**
         * @param {?} element
         * @param {?} event
         * @param {?} handler
         * @return {?}
         */
        StopEventPlugin.prototype.addGlobalEventListener = /**
         * @param {?} element
         * @param {?} event
         * @param {?} handler
         * @return {?}
         */
            function (element, event, handler) {
                /** @type {?} */
                var wrapped = function (event) {
                    event.stopPropagation();
                    handler(event);
                };
                return this.manager.addGlobalEventListener(element, this.unwrap(event), wrapped);
            };
        StopEventPlugin.decorators = [
            { type: core.Injectable }
        ];
        return StopEventPlugin;
    }(AbstractEventPlugin));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * TODO: This will not be needed in Angular 10
     * when libraries are allowed to use Ivy renderer and markDirty becomes stable API
     */
    var ZoneEventPlugin = /** @class */ (function (_super) {
        __extends(ZoneEventPlugin, _super);
        function ZoneEventPlugin() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.modifier = 'init';
            return _this;
        }
        /**
         * @param {?} _element
         * @param {?} _event
         * @param {?} handler
         * @return {?}
         */
        ZoneEventPlugin.prototype.addEventListener = /**
         * @param {?} _element
         * @param {?} _event
         * @param {?} handler
         * @return {?}
         */
            function (_element, _event, handler) {
                return this.handle(handler);
            };
        /**
         * @param {?} _element
         * @param {?} _event
         * @param {?} handler
         * @return {?}
         */
        ZoneEventPlugin.prototype.addGlobalEventListener = /**
         * @param {?} _element
         * @param {?} _event
         * @param {?} handler
         * @return {?}
         */
            function (_element, _event, handler) {
                return this.handle(handler);
            };
        /**
         * @private
         * @param {?} handler
         * @return {?}
         */
        ZoneEventPlugin.prototype.handle = /**
         * @private
         * @param {?} handler
         * @return {?}
         */
            function (handler) {
                /** @type {?} */
                var zone = this.manager.getZone();
                /** @type {?} */
                var subscription = zone.onStable.subscribe(function () {
                    subscription.unsubscribe();
                    handler(zone);
                });
                return function () { };
            };
        ZoneEventPlugin.decorators = [
            { type: core.Injectable }
        ];
        return ZoneEventPlugin;
    }(AbstractEventPlugin));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var NG_EVENT_PLUGINS = [
        {
            provide: platformBrowser.EVENT_MANAGER_PLUGINS,
            useClass: SilentEventPlugin,
            multi: true,
        },
        {
            provide: platformBrowser.EVENT_MANAGER_PLUGINS,
            useClass: PreventEventPlugin,
            multi: true,
        },
        {
            provide: platformBrowser.EVENT_MANAGER_PLUGINS,
            useClass: StopEventPlugin,
            multi: true,
        },
        {
            provide: platformBrowser.EVENT_MANAGER_PLUGINS,
            useClass: ZoneEventPlugin,
            multi: true,
        },
    ];

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * TODO: This will not be needed in Angular 10
     * when libraries are allowed to use Ivy renderer and markDirty becomes stable API
     * @template T
     * @param {?} predicate
     * @return {?}
     */
    function shouldCall(predicate) {
        return function (_, key, desc) {
            var value = desc.value;
            desc.value = function () {
                /** @type {?} */
                var zone = ( /** @type {?} */(arguments[0]));
                Object.defineProperty(this, key, {
                    value: /**
                     * @this {?}
                     * @param {...?} args
                     * @return {?}
                     */ function () {
                        var _this = this;
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            args[_i] = arguments[_i];
                        }
                        if (predicate.apply(this, args)) {
                            zone.run(function () {
                                value.apply(_this, args);
                            });
                        }
                    },
                });
            };
        };
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.NG_EVENT_PLUGINS = NG_EVENT_PLUGINS;
    exports.shouldCall = shouldCall;
    exports.PreventEventPlugin = PreventEventPlugin;
    exports.SilentEventPlugin = SilentEventPlugin;
    exports.StopEventPlugin = StopEventPlugin;
    exports.ZoneEventPlugin = ZoneEventPlugin;
    exports.ɵa = AbstractEventPlugin;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=tinkoff-ng-event-plugins.umd.js.map