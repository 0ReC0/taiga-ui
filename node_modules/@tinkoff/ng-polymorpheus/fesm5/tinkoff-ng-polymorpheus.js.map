{"version":3,"file":"tinkoff-ng-polymorpheus.js.map","sources":["ng://@tinkoff/ng-polymorpheus/tokens/context.ts","ng://@tinkoff/ng-polymorpheus/classes/component.ts","ng://@tinkoff/ng-polymorpheus/directives/template.ts","ng://@tinkoff/ng-polymorpheus/outlet/outlet.component.ts","ng://@tinkoff/ng-polymorpheus/directives/context.ts","ng://@tinkoff/ng-polymorpheus/pipes/injector.ts","ng://@tinkoff/ng-polymorpheus/polymorpheus.module.ts"],"sourcesContent":["import {InjectionToken} from '@angular/core';\r\n\r\n/**\r\n * Use this token to access context within your components when\r\n * instantiating them through {@link PolymorpheusOutletComponent}\r\n */\r\nexport const POLYMORPHEUS_CONTEXT = new InjectionToken<object>(\r\n    'Context from polymorpheus-outlet',\r\n);\r\n","import {Injector, Type} from '@angular/core';\r\nimport {POLYMORPHEUS_CONTEXT} from '../tokens/context';\r\n\r\n/**\r\n * Wrapper class for a component that will be used as content for {@link PolymorpheusOutletComponent}\r\n *\r\n * @param component â an Angular component to be dynamically created\r\n * @param injector â optional {@link Injector} for lazy loaded module case\r\n */\r\nexport class PolymorpheusComponent<T extends object, C extends object> {\r\n    constructor(\r\n        readonly component: Type<T>,\r\n        private readonly injector: Injector | null = null,\r\n    ) {}\r\n\r\n    createInjector(injector: Injector, context: C): Injector {\r\n        return Injector.create({\r\n            parent: this.injector || injector,\r\n            providers: [\r\n                {\r\n                    provide: POLYMORPHEUS_CONTEXT,\r\n                    useValue: context,\r\n                },\r\n            ],\r\n        });\r\n    }\r\n}\r\n","import {ChangeDetectorRef, Directive, Inject, Self, TemplateRef} from '@angular/core';\r\n\r\n/**\r\n * ng-template wrapper directive also storing {@link ChangeDetectorRef} to properly handle change detection.\r\n */\r\n@Directive({\r\n    selector: 'ng-template[polymorpheus]',\r\n    exportAs: 'polymorpheus',\r\n})\r\nexport class PolymorpheusTemplate<T extends object> {\r\n    constructor(\r\n        @Inject(TemplateRef)\r\n        @Self()\r\n        readonly template: TemplateRef<T>,\r\n        @Inject(ChangeDetectorRef) private readonly changeDetectorRef: ChangeDetectorRef,\r\n    ) {}\r\n\r\n    check() {\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n}\r\n","import {NgComponentOutlet} from '@angular/common';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ComponentRef,\r\n    ContentChild,\r\n    DoCheck,\r\n    Inject,\r\n    Injector,\r\n    Input,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport {PolymorpheusComponent} from '../classes/component';\r\nimport {PolymorpheusTemplate} from '../directives/template';\r\nimport {PolymorpheusContent} from '../types/content';\r\nimport {PolymorpheusPrimitive} from '../types/primitive';\r\n\r\n/**\r\n * Outlet instantiating {@link PolymorpheusContent} with given context\r\n */\r\n@Component({\r\n    selector: 'polymorpheus-outlet, [polymorpheus-outlet]',\r\n    templateUrl: './outlet.template.html',\r\n    styles: [':host { display: block; }'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PolymorpheusOutletComponent<C extends object> implements DoCheck, OnChanges {\r\n    @Input()\r\n    content: PolymorpheusContent<C> | null = null;\r\n\r\n    @Input()\r\n    context!: C;\r\n\r\n    @ContentChild(TemplateRef)\r\n    readonly template: TemplateRef<C> | null = null;\r\n\r\n    @ViewChild(NgComponentOutlet)\r\n    readonly outlet?: NgComponentOutlet;\r\n\r\n    constructor(@Inject(Injector) readonly injector: Injector) {}\r\n\r\n    get primitive(): PolymorpheusPrimitive {\r\n        if (\r\n            !this.content ||\r\n            this.isComponent(this.content) ||\r\n            this.isTemplate(this.content)\r\n        ) {\r\n            return '';\r\n        }\r\n\r\n        return typeof this.content === 'function'\r\n            ? this.content(this.context)\r\n            : this.content;\r\n    }\r\n\r\n    isDirective(\r\n        content: PolymorpheusContent<C> | null,\r\n    ): content is PolymorpheusTemplate<C> {\r\n        return content instanceof PolymorpheusTemplate;\r\n    }\r\n\r\n    isTemplate(\r\n        content: PolymorpheusContent<C> | null,\r\n    ): content is PolymorpheusTemplate<C> | TemplateRef<C> {\r\n        return this.isDirective(content) || content instanceof TemplateRef;\r\n    }\r\n\r\n    isComponent(\r\n        content: PolymorpheusContent<C> | null,\r\n    ): content is PolymorpheusComponent<object, C> {\r\n        return content instanceof PolymorpheusComponent;\r\n    }\r\n\r\n    getTemplate(\r\n        content:\r\n            | PolymorpheusComponent<object, C>\r\n            | PolymorpheusTemplate<C>\r\n            | TemplateRef<C>,\r\n        componentTmp: TemplateRef<C>,\r\n    ): TemplateRef<C> {\r\n        if (this.isComponent(content)) {\r\n            return componentTmp;\r\n        }\r\n\r\n        return this.isDirective(content) ? content.template : content;\r\n    }\r\n\r\n    ngOnChanges({content, context}: SimpleChanges) {\r\n        // TODO: Keep an eye on private field, name can change\r\n        const componentRef = (!content &&\r\n            context &&\r\n            this.outlet &&\r\n            this.outlet['_componentRef']) as ComponentRef<object> | null | false;\r\n\r\n        if (componentRef) {\r\n            componentRef.injector.get(ChangeDetectorRef).markForCheck();\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        if (this.isDirective(this.content)) {\r\n            this.content.check();\r\n        }\r\n    }\r\n}\r\n","import {Directive, EmbeddedViewRef, Inject, ViewContainerRef} from '@angular/core';\r\n\r\n/**\r\n * Helper directive, extracting first {@link EmbeddedViewRef} context if it's present\r\n */\r\n@Directive({\r\n    selector: '[context]',\r\n    exportAs: 'context',\r\n})\r\nexport class ContextDirective<C> {\r\n    constructor(\r\n        @Inject(ViewContainerRef)\r\n        private readonly viewContainerRef: ViewContainerRef,\r\n    ) {}\r\n\r\n    get context(): C | null {\r\n        const viewRef = this.viewContainerRef.get(0) as EmbeddedViewRef<C> | null;\r\n\r\n        return viewRef && viewRef.context;\r\n    }\r\n}\r\n","import {Injector, Pipe, PipeTransform} from '@angular/core';\r\nimport {PolymorpheusComponent} from '../classes/component';\r\n\r\n/**\r\n * Internal use {@link Pipe} to create {@link Injector}\r\n * only when either content or context change\r\n */\r\n@Pipe({\r\n    name: 'injector',\r\n})\r\nexport class InjectorPipe<C extends object> implements PipeTransform {\r\n    transform(\r\n        content: PolymorpheusComponent<object, C>,\r\n        context: C,\r\n        injector: Injector,\r\n    ): Injector {\r\n        return content.createInjector(injector, context);\r\n    }\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {ContextDirective} from './directives/context';\r\nimport {PolymorpheusTemplate} from './directives/template';\r\nimport {PolymorpheusOutletComponent} from './outlet/outlet.component';\r\nimport {InjectorPipe} from './pipes/injector';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [\r\n        PolymorpheusOutletComponent,\r\n        PolymorpheusTemplate,\r\n        ContextDirective,\r\n        InjectorPipe,\r\n    ],\r\n    exports: [PolymorpheusOutletComponent, PolymorpheusTemplate],\r\n})\r\nexport class PolymorpheusModule {}\r\n"],"names":[],"mappings":"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"}
