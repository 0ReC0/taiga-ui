import { NgComponentOutlet } from '@angular/common';
import { DoCheck, Injector, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';
import { PolymorpheusComponent } from '../classes/component';
import { PolymorpheusTemplate } from '../directives/template';
import { PolymorpheusContent } from '../types/content';
import { PolymorpheusPrimitive } from '../types/primitive';
/**
 * Outlet instantiating {@link PolymorpheusContent} with given context
 */
export declare class PolymorpheusOutletComponent<C extends object> implements DoCheck, OnChanges {
    readonly injector: Injector;
    content: PolymorpheusContent<C> | null;
    context: C;
    readonly template: TemplateRef<C> | null;
    readonly outlet?: NgComponentOutlet;
    constructor(injector: Injector);
    readonly primitive: PolymorpheusPrimitive;
    isDirective(content: PolymorpheusContent<C> | null): content is PolymorpheusTemplate<C>;
    isTemplate(content: PolymorpheusContent<C> | null): content is PolymorpheusTemplate<C> | TemplateRef<C>;
    isComponent(content: PolymorpheusContent<C> | null): content is PolymorpheusComponent<object, C>;
    getTemplate(content: PolymorpheusComponent<object, C> | PolymorpheusTemplate<C> | TemplateRef<C>, componentTmp: TemplateRef<C>): TemplateRef<C>;
    ngOnChanges({ content, context }: SimpleChanges): void;
    ngDoCheck(): void;
}
