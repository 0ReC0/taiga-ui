/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Inject, ViewContainerRef } from '@angular/core';
/**
 * Helper directive, extracting first {\@link EmbeddedViewRef} context if it's present
 * @template C
 */
export class ContextDirective {
    /**
     * @param {?} viewContainerRef
     */
    constructor(viewContainerRef) {
        this.viewContainerRef = viewContainerRef;
    }
    /**
     * @return {?}
     */
    get context() {
        /** @type {?} */
        const viewRef = (/** @type {?} */ (this.viewContainerRef.get(0)));
        return viewRef && viewRef.context;
    }
}
ContextDirective.decorators = [
    { type: Directive, args: [{
                selector: '[context]',
                exportAs: 'context',
            },] }
];
/** @nocollapse */
ContextDirective.ctorParameters = () => [
    { type: ViewContainerRef, decorators: [{ type: Inject, args: [ViewContainerRef,] }] }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    ContextDirective.prototype.viewContainerRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGV4dC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aW5rb2ZmL25nLXBvbHltb3JwaGV1cy8iLCJzb3VyY2VzIjpbImRpcmVjdGl2ZXMvY29udGV4dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBbUIsTUFBTSxFQUFFLGdCQUFnQixFQUFDLE1BQU0sZUFBZSxDQUFDOzs7OztBQVNuRixNQUFNLE9BQU8sZ0JBQWdCOzs7O0lBQ3pCLFlBRXFCLGdCQUFrQztRQUFsQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO0lBQ3BELENBQUM7Ozs7SUFFSixJQUFJLE9BQU87O2NBQ0QsT0FBTyxHQUFHLG1CQUFBLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQTZCO1FBRXpFLE9BQU8sT0FBTyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUM7SUFDdEMsQ0FBQzs7O1lBZEosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxXQUFXO2dCQUNyQixRQUFRLEVBQUUsU0FBUzthQUN0Qjs7OztZQVIyQyxnQkFBZ0IsdUJBV25ELE1BQU0sU0FBQyxnQkFBZ0I7Ozs7Ozs7SUFBeEIsNENBQ21EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEVtYmVkZGVkVmlld1JlZiwgSW5qZWN0LCBWaWV3Q29udGFpbmVyUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbi8qKlxyXG4gKiBIZWxwZXIgZGlyZWN0aXZlLCBleHRyYWN0aW5nIGZpcnN0IHtAbGluayBFbWJlZGRlZFZpZXdSZWZ9IGNvbnRleHQgaWYgaXQncyBwcmVzZW50XHJcbiAqL1xyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAnW2NvbnRleHRdJyxcclxuICAgIGV4cG9ydEFzOiAnY29udGV4dCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb250ZXh0RGlyZWN0aXZlPEM+IHtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIEBJbmplY3QoVmlld0NvbnRhaW5lclJlZilcclxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYsXHJcbiAgICApIHt9XHJcblxyXG4gICAgZ2V0IGNvbnRleHQoKTogQyB8IG51bGwge1xyXG4gICAgICAgIGNvbnN0IHZpZXdSZWYgPSB0aGlzLnZpZXdDb250YWluZXJSZWYuZ2V0KDApIGFzIEVtYmVkZGVkVmlld1JlZjxDPiB8IG51bGw7XHJcblxyXG4gICAgICAgIHJldHVybiB2aWV3UmVmICYmIHZpZXdSZWYuY29udGV4dDtcclxuICAgIH1cclxufVxyXG4iXX0=