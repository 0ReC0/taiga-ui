{"version":3,"file":"ng-web-apis-resize-observer.js","sources":["ng:/@ng-web-apis/resize-observer/tokens/resize-option-box.ts","ng:/@ng-web-apis/resize-observer/tokens/support.ts","ng:/@ng-web-apis/resize-observer/services/resize-observer.service.ts","ng:/@ng-web-apis/resize-observer/directives/resize-observer.directive.ts","ng:/@ng-web-apis/resize-observer/module.ts"],"names":[],"mappings":"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","sourcesContent":["import {InjectionToken} from '@angular/core';\n\nexport const RESIZE_OPTION_BOX_DEFAULT = 'content-box';\n\nexport const RESIZE_OPTION_BOX = new InjectionToken<ResizeObserverOptions['box']>(\n    'Box model to observe changes',\n    {\n        providedIn: 'root',\n        factory: () => RESIZE_OPTION_BOX_DEFAULT,\n    },\n);\n","import {inject, InjectionToken} from '@angular/core';\nimport {WINDOW} from '@ng-web-apis/common';\n\nexport const RESIZE_OBSERVER_SUPPORT = new InjectionToken<boolean>(\n    'Resize Observer API support',\n    {\n        providedIn: 'root',\n        factory: () => !!inject(WINDOW).ResizeObserver,\n    },\n);\n","import {ElementRef, Inject, Injectable, NgZone} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {share} from 'rxjs/operators';\nimport {RESIZE_OPTION_BOX} from '../tokens/resize-option-box';\nimport {RESIZE_OBSERVER_SUPPORT} from '../tokens/support';\n\n// @dynamic\n@Injectable()\nexport class ResizeObserverService extends Observable<\n    ReadonlyArray<ResizeObserverEntry>\n> {\n    constructor(\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\n        @Inject(NgZone) ngZone: NgZone,\n        @Inject(RESIZE_OBSERVER_SUPPORT) support: boolean,\n        @Inject(RESIZE_OPTION_BOX) box: ResizeObserverOptions['box'],\n    ) {\n        let observer: ResizeObserver;\n\n        super(subscriber => {\n            if (!support) {\n                subscriber.error('ResizeObserver is not supported in your browser');\n\n                return;\n            }\n\n            observer = new ResizeObserver(entries => {\n                ngZone.run(() => {\n                    subscriber.next(entries);\n                });\n            });\n            observer.observe(nativeElement, {box});\n\n            return () => {\n                observer.disconnect();\n            };\n        });\n\n        return this.pipe(share());\n    }\n}\n","import {Attribute, Directive, ElementRef, Inject, Output} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ResizeObserverService} from '../services/resize-observer.service';\nimport {RESIZE_OPTION_BOX, RESIZE_OPTION_BOX_DEFAULT} from '../tokens/resize-option-box';\n\n// TODO switch to Attribute once https://github.com/angular/angular/issues/36479 is fixed\nexport function boxExtractor({\n    nativeElement,\n}: ElementRef<Element>): ResizeObserverOptions['box'] {\n    const attribute = nativeElement.getAttribute(\n        'waResizeBox',\n    ) as ResizeObserverOptions['box'];\n\n    return boxFactory(attribute);\n}\n\nexport function boxFactory(\n    box: ResizeObserverOptions['box'] | null,\n): ResizeObserverOptions['box'] {\n    return box || RESIZE_OPTION_BOX_DEFAULT;\n}\n\n// @dynamic\n@Directive({\n    selector: '[waResizeObserver]',\n    providers: [\n        ResizeObserverService,\n        {\n            provide: RESIZE_OPTION_BOX,\n            deps: [ElementRef],\n            useFactory: boxExtractor,\n        },\n    ],\n})\nexport class ResizeObserverDirective {\n    @Output()\n    readonly waResizeObserver: Observable<ResizeObserverEntry[]>;\n\n    constructor(\n        @Inject(ResizeObserverService)\n        entries$: Observable<ResizeObserverEntry[]>,\n        @Attribute('waResizeBox') _box: ResizeObserverOptions['box'],\n    ) {\n        this.waResizeObserver = entries$;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {ResizeObserverDirective} from './directives/resize-observer.directive';\n\n@NgModule({\n    declarations: [ResizeObserverDirective],\n    exports: [ResizeObserverDirective],\n})\nexport class ResizeObserverModule {}\n"]}