{"version":3,"file":"ng-web-apis-universal.js.map","sources":["ng://@ng-web-apis/universal/constants/universal-animation-frame.ts","ng://@ng-web-apis/universal/classes/storage-mock.ts","ng://@ng-web-apis/universal/constants/universal-local-storage.ts","ng://@ng-web-apis/universal/tokens/ssr-location.ts","ng://@ng-web-apis/universal/utils/functions.ts","ng://@ng-web-apis/universal/constants/universal-location.ts","ng://@ng-web-apis/universal/tokens/ssr-user-agent.ts","ng://@ng-web-apis/universal/constants/universal-navigator.ts","ng://@ng-web-apis/universal/constants/universal-performance.ts","ng://@ng-web-apis/universal/constants/universal-session-storage.ts","ng://@ng-web-apis/universal/constants/universal-speech-synthesis.ts","ng://@ng-web-apis/universal/constants/universal-user-agent.ts","ng://@ng-web-apis/universal/constants/universal-tokens.ts","ng://@ng-web-apis/universal/utils/provide-location.ts","ng://@ng-web-apis/universal/utils/provide-user-agent.ts"],"sourcesContent":["import {ValueProvider} from '@angular/core';\r\nimport {ANIMATION_FRAME} from '@ng-web-apis/common';\r\nimport {NEVER} from 'rxjs';\r\n\r\nexport const UNIVERSAL_ANIMATION_FRAME: ValueProvider = {\r\n    provide: ANIMATION_FRAME,\r\n    useValue: NEVER,\r\n};\r\n","export class StorageMock implements Storage {\r\n    private readonly storage = new Map<string, string>();\r\n\r\n    get length(): number {\r\n        return this.storage.size;\r\n    }\r\n\r\n    getItem(key: string): string | null {\r\n        return this.storage.has(key) ? this.storage.get(key)! : null;\r\n    }\r\n\r\n    setItem(key: string, value: string) {\r\n        this.storage.set(key, value);\r\n    }\r\n\r\n    clear() {\r\n        this.storage.clear();\r\n    }\r\n\r\n    key(index: number): string | null {\r\n        return index < this.storage.size ? [...this.storage.keys()][index] : null;\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        this.storage.delete(key);\r\n    }\r\n}\r\n","import {ClassProvider} from '@angular/core';\r\nimport {LOCAL_STORAGE} from '@ng-web-apis/common';\r\nimport {StorageMock} from '../classes/storage-mock';\r\n\r\nexport const UNIVERSAL_LOCAL_STORAGE: ClassProvider = {\r\n    provide: LOCAL_STORAGE,\r\n    useClass: StorageMock,\r\n};\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const SSR_LOCATION = new InjectionToken<Location>(\r\n    'Location object passed from server side',\r\n);\r\n","export function identity<T>(v: T): T {\r\n    return v;\r\n}\r\n\r\nexport function empty() {}\r\n\r\nexport function emptyArray(): any[] {\r\n    return [];\r\n}\r\n\r\nexport function emptyObject(): object {\r\n    return {};\r\n}\r\n\r\nexport function alwaysFalse(): boolean {\r\n    return false;\r\n}\r\n\r\nexport function alwaysZero(): number {\r\n    return 0;\r\n}\r\n\r\nexport function alwaysRejected(): Promise<any> {\r\n    return Promise.reject().catch(empty);\r\n}\r\n","import {FactoryProvider} from '@angular/core';\r\nimport {USER_AGENT} from '@ng-web-apis/common';\r\nimport {SSR_LOCATION} from '../tokens/ssr-location';\r\nimport {identity} from '../utils/functions';\r\n\r\nexport const UNIVERSAL_LOCATION: FactoryProvider = {\r\n    provide: USER_AGENT,\r\n    deps: [SSR_LOCATION],\r\n    useFactory: identity,\r\n};\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const SSR_USER_AGENT = new InjectionToken<string>(\r\n    'User Agent string passed from server side',\r\n);\r\n","import {FactoryProvider, Optional} from '@angular/core';\r\nimport {NAVIGATOR} from '@ng-web-apis/common';\r\nimport {SSR_USER_AGENT} from '../tokens/ssr-user-agent';\r\nimport {\r\n    alwaysFalse,\r\n    alwaysRejected,\r\n    alwaysZero,\r\n    empty,\r\n    emptyArray,\r\n    emptyObject,\r\n} from '../utils/functions';\r\n\r\nconst EVENT_TARGET: EventTarget = {\r\n    addEventListener: empty,\r\n    dispatchEvent: alwaysFalse,\r\n    removeEventListener: empty,\r\n};\r\n\r\nconst PLUGIN = new (class extends Array<MimeType> implements Plugin {\r\n    readonly description = '';\r\n    readonly filename = '';\r\n    readonly name = '';\r\n    readonly version = '';\r\n\r\n    item(): MimeType {\r\n        return {\r\n            description: '',\r\n            enabledPlugin: this,\r\n            suffixes: '',\r\n            type: '',\r\n        };\r\n    }\r\n    namedItem(): MimeType {\r\n        return {\r\n            description: '',\r\n            enabledPlugin: this,\r\n            suffixes: '',\r\n            type: '',\r\n        };\r\n    }\r\n})();\r\n\r\nconst MIME_TYPES = new (class extends Array<Plugin> implements MimeTypeArray {\r\n    item(): Plugin {\r\n        return PLUGIN;\r\n    }\r\n    namedItem(): Plugin {\r\n        return PLUGIN;\r\n    }\r\n    refresh() {}\r\n})();\r\n\r\n/** For older version of TS and Angular that do not support all properties from Navigator */\r\ninterface NavigatorLike extends Navigator {\r\n    [key: string]: any;\r\n}\r\n\r\nexport function navigatorFactory(userAgent: string | null): NavigatorLike {\r\n    return {\r\n        appCodeName: '',\r\n        appName: '',\r\n        appVersion: '',\r\n        platform: '',\r\n        product: '',\r\n        productSub: '',\r\n        userAgent: userAgent || '',\r\n        vendor: '',\r\n        vendorSub: '',\r\n\r\n        onLine: false,\r\n\r\n        confirmSiteSpecificTrackingException: alwaysFalse,\r\n        confirmWebWideTrackingException: alwaysFalse,\r\n        removeSiteSpecificTrackingException: empty,\r\n        removeWebWideTrackingException: empty,\r\n        storeSiteSpecificTrackingException: empty,\r\n        storeWebWideTrackingException: empty,\r\n\r\n        msSaveBlob: alwaysFalse,\r\n        msSaveOrOpenBlob: alwaysFalse,\r\n\r\n        sendBeacon: alwaysFalse,\r\n\r\n        hardwareConcurrency: 0,\r\n\r\n        getDisplayMedia: alwaysRejected,\r\n\r\n        language: '',\r\n        languages: [],\r\n\r\n        storage: {\r\n            estimate: alwaysRejected,\r\n            persist: alwaysRejected,\r\n            persisted: alwaysRejected,\r\n        },\r\n\r\n        activeVRDisplays: [],\r\n        authentication: {\r\n            getAssertion: alwaysRejected,\r\n            makeCredential: alwaysRejected,\r\n        },\r\n        clipboard: {\r\n            ...EVENT_TARGET,\r\n            readText: alwaysRejected,\r\n            writeText: alwaysRejected,\r\n        },\r\n        cookieEnabled: false,\r\n        doNotTrack: null,\r\n        gamepadInputEmulation: 'keyboard',\r\n        geolocation: {\r\n            clearWatch: empty,\r\n            getCurrentPosition: empty,\r\n            watchPosition: alwaysZero,\r\n        },\r\n        maxTouchPoints: 0,\r\n        mediaDevices: {\r\n            ...EVENT_TARGET,\r\n            ondevicechange: null,\r\n            enumerateDevices: alwaysRejected,\r\n            getSupportedConstraints: emptyObject,\r\n            getUserMedia: alwaysRejected,\r\n        },\r\n        mimeTypes: MIME_TYPES,\r\n        msManipulationViewsEnabled: false,\r\n        msMaxTouchPoints: 0,\r\n        msPointerEnabled: false,\r\n        permissions: {\r\n            query: alwaysRejected,\r\n        },\r\n        plugins: MIME_TYPES,\r\n        pointerEnabled: false,\r\n        serviceWorker: {\r\n            ...EVENT_TARGET,\r\n            controller: null,\r\n            oncontrollerchange: null,\r\n            onmessage: null,\r\n            onmessageerror: null,\r\n            ready: alwaysRejected(),\r\n            getRegistration: alwaysRejected,\r\n            getRegistrations: alwaysRejected,\r\n            register: alwaysRejected,\r\n            startMessages: empty,\r\n        },\r\n        webdriver: false,\r\n        getGamepads: emptyArray,\r\n        getUserMedia: empty,\r\n        getVRDisplays: alwaysRejected,\r\n        javaEnabled: alwaysFalse,\r\n        msLaunchUri: empty,\r\n        requestMediaKeySystemAccess: alwaysRejected,\r\n        vibrate: alwaysFalse,\r\n    };\r\n}\r\n\r\nexport const UNIVERSAL_NAVIGATOR: FactoryProvider = {\r\n    provide: NAVIGATOR,\r\n    deps: [[new Optional(), SSR_USER_AGENT]],\r\n    useFactory: navigatorFactory,\r\n};\r\n","import {FactoryProvider} from '@angular/core';\r\nimport {PERFORMANCE} from '@ng-web-apis/common';\r\n\r\nexport function performanceFactory(): Performance {\r\n    return require('perf_hooks').performance;\r\n}\r\n\r\nexport const UNIVERSAL_PERFORMANCE: FactoryProvider = {\r\n    provide: PERFORMANCE,\r\n    deps: [],\r\n    useFactory: performanceFactory,\r\n};\r\n","import {ClassProvider} from '@angular/core';\r\nimport {SESSION_STORAGE} from '@ng-web-apis/common';\r\nimport {StorageMock} from '../classes/storage-mock';\r\n\r\nexport const UNIVERSAL_SESSION_STORAGE: ClassProvider = {\r\n    provide: SESSION_STORAGE,\r\n    useClass: StorageMock,\r\n};\r\n","import {ValueProvider} from '@angular/core';\r\nimport {LOCAL_STORAGE} from '@ng-web-apis/common';\r\nimport {alwaysFalse, empty, emptyArray} from '../utils/functions';\r\n\r\nconst MOCK: SpeechSynthesis = {\r\n    paused: false,\r\n    pending: false,\r\n    speaking: false,\r\n    onvoiceschanged: empty,\r\n    addEventListener: empty,\r\n    removeEventListener: empty,\r\n    dispatchEvent: alwaysFalse,\r\n    cancel: empty,\r\n    pause: empty,\r\n    resume: empty,\r\n    speak: empty,\r\n    getVoices: emptyArray,\r\n};\r\n\r\nexport const UNIVERSAL_SPEECH_SYNTHESIS: ValueProvider = {\r\n    provide: LOCAL_STORAGE,\r\n    useValue: MOCK,\r\n};\r\n","import {FactoryProvider} from '@angular/core';\r\nimport {USER_AGENT} from '@ng-web-apis/common';\r\nimport {SSR_USER_AGENT} from '../tokens/ssr-user-agent';\r\nimport {identity} from '../utils/functions';\r\n\r\nexport const UNIVERSAL_USER_AGENT: FactoryProvider = {\r\n    provide: USER_AGENT,\r\n    deps: [SSR_USER_AGENT],\r\n    useFactory: identity,\r\n};\r\n","import {Provider} from '@angular/core';\r\nimport {UNIVERSAL_ANIMATION_FRAME} from './universal-animation-frame';\r\nimport {UNIVERSAL_LOCAL_STORAGE} from './universal-local-storage';\r\nimport {UNIVERSAL_LOCATION} from './universal-location';\r\nimport {UNIVERSAL_NAVIGATOR} from './universal-navigator';\r\nimport {UNIVERSAL_PERFORMANCE} from './universal-performance';\r\nimport {UNIVERSAL_SESSION_STORAGE} from './universal-session-storage';\r\nimport {UNIVERSAL_SPEECH_SYNTHESIS} from './universal-speech-synthesis';\r\nimport {UNIVERSAL_USER_AGENT} from './universal-user-agent';\r\n\r\nexport const UNIVERSAL_PROVIDERS: Provider[] = [\r\n    UNIVERSAL_ANIMATION_FRAME,\r\n    UNIVERSAL_LOCAL_STORAGE,\r\n    UNIVERSAL_SESSION_STORAGE,\r\n    UNIVERSAL_LOCATION,\r\n    UNIVERSAL_NAVIGATOR,\r\n    UNIVERSAL_PERFORMANCE,\r\n    UNIVERSAL_SPEECH_SYNTHESIS,\r\n    UNIVERSAL_USER_AGENT,\r\n];\r\n\r\n/** @deprecated use {@link UNIVERSAL_PROVIDERS} */\r\nexport const UNIVERSAL_TOKENS = UNIVERSAL_PROVIDERS;\r\n","import {ValueProvider} from '@angular/core';\r\nimport {IncomingMessage} from 'http';\r\nimport {SSR_LOCATION} from '../tokens/ssr-location';\r\nimport {empty} from './functions';\r\n\r\nexport function provideLocation(req: IncomingMessage): ValueProvider {\r\n    const protocol = 'encrypted' in req.socket ? 'https' : 'http';\r\n    const url: any = new URL(`${protocol}://${req.headers['host']}${req.url}`);\r\n\r\n    url.assign = empty;\r\n    url.reload = empty;\r\n    url.replace = empty;\r\n    url.ancestorOrigins = new (class extends Array<string> implements DOMStringList {\r\n        contains(): boolean {\r\n            return false;\r\n        }\r\n\r\n        item(): null {\r\n            return null;\r\n        }\r\n    })();\r\n\r\n    return {\r\n        provide: SSR_LOCATION,\r\n        useValue: url,\r\n    };\r\n}\r\n","import {ValueProvider} from '@angular/core';\r\nimport {IncomingHttpHeaders} from 'http';\r\nimport {SSR_USER_AGENT} from '../tokens/ssr-user-agent';\r\n\r\nexport function provideUserAgent(req: {headers: IncomingHttpHeaders}): ValueProvider {\r\n    return {\r\n        provide: SSR_USER_AGENT,\r\n        useValue: req.headers['user-agent'],\r\n    };\r\n}\r\n"],"names":[],"mappings":"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"}
