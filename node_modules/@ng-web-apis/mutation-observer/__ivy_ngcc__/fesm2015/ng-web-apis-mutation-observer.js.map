{"version":3,"file":"ng-web-apis-mutation-observer.js","sources":["ng:/@ng-web-apis/mutation-observer/tokens/mutation-observer-init.ts","ng:/@ng-web-apis/mutation-observer/utils/boolean-attribute.ts","ng:/@ng-web-apis/mutation-observer/utils/mutation-observer-init-factory.ts","ng:/@ng-web-apis/mutation-observer/directives/mutation-observer.directive.ts","ng:/@ng-web-apis/mutation-observer/services/mutation-observer.service.ts","ng:/@ng-web-apis/mutation-observer/module.ts"],"names":[],"mappings":";;;;;;;AAAA;;AAEA,MAAa,sBAAsB,GAAG,IAAI,cAAc,CACpD,yBAAyB,CAC5B;AACD;AAAC;AAAI;AAAkC;AAAqG;AAAI;AAAI;AAAsB;AAAwB;AAAe;ACLjN,SAAgB,gBAAgB,CAAC,OAAgB,EAAE,SAAiB;AAAI,IACpE,OAAO,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC;AACjE,CAAC;AACD;AAAC;AAAI;AAAkC;AAAqG;ACF5I;AAAI;AAAkB;AAAe;AAErC,SAAgB,2BAA2B,CAAC,EACxC,aAAa,GACK;AAAI;AAAqB,UACrC,mBAAmB,GAAG,aAAa,CAAC,YAAY,CAAC,iBAAiB,CAAC;AAC7E;AAAqB,UAAX,eAAe,GAAG,mBAAmB;AAC/C,UAAU,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;AACjE,UAAU,SAAS;AACnB,IACI,OAAO;AACX,QAAQ,eAAe;AACvB,QAAQ,iBAAiB,EAAE,gBAAgB,CAAC,aAAa,EAAE,mBAAmB,CAAC;AAC/E,QAAQ,UAAU,EAAE,gBAAgB,CAAC,aAAa,EAAE,YAAY,CAAC;AACjE,QAAQ,aAAa,EAAE,gBAAgB,CAAC,aAAa,EAAE,eAAe,CAAC;AACvE,QAAQ,qBAAqB,EAAE,gBAAgB,CAAC,aAAa,EAAE,uBAAuB,CAAC;AACvF,QAAQ,SAAS,EAAE,gBAAgB,CAAC,aAAa,EAAE,WAAW,CAAC;AAC/D,QAAQ,OAAO,EAAE,gBAAgB,CAAC,aAAa,EAAE,SAAS,CAAC;AAC3D,KAAK,CAAC;AACN,CAAC;AACD;AAAC;AAAI;AAAkC;AAAqG;ACrB5I,WAoBwB,2BAA2B;AACnD;AAGA,MAAa,yBAA0B,SAAQ,gBAAgB;AAAG;AAAQ;AACjE;AACW;AAAqB;AAAqB;AAEpD;AACI;AAAqB;AAAqB;AAC1C;AAAQ,IAFlB,YACwB,EAAC,aAAa,EAAmB,EACrB,MAA4B,EAC9B,EAAW,EACT,EAAW,EAClB,EAAW,EACR,EAAW,EACH,EAAW,EACvB,EAAW,EACb,EAAW;AACvC,QACM,KAAK,CAAC,OAAO;AACrB,YAAY,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClD,SAAS,CAAC,CAAC;AACX,QAhBa,uBAAkB,GAAG,IAAI,YAAY,EAAoB,CAAC;AACvE,QAgBQ,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AAC5C,KAAK;AACL;AACO;AACD;AAAQ,IADV,WAAW;AACf,QAAQ,IAAI,CAAC,UAAU,EAAE,CAAC;AAC1B,KAAK;AACL;qDApCC,SAAS,SAAC,kBACP,QAAQ,EAAE,sBAAsB,kBAChC,QAAQ,EAAE,kBAAkB,kBAC5B,SAAS,EAAE,sBACP,0BACI,OAAO,EAAE,sBAAsB,0BAC/B,IAAI,EAAE,CAAC,UAAU,CAAC,0BAClB,UAAU,IAA6B,uBAC1C,mBACJ,eACJ;;;;;;;kDACI;AAAC;AAAmB;AAAmD,YArBxE,UAAU,uBA0BL,MAAM,SAAC,UAAU;AAAS,4CAC1B,MAAM,SAAC,sBAAsB;AAAS,4CACtC,SAAS,SAAC,iBAAiB;AAAS,4CACpC,SAAS,SAAC,mBAAmB;AAAS,4CACtC,SAAS,SAAC,YAAY;AAAS,4CAC/B,SAAS,SAAC,eAAe;AAAS,4CAClC,SAAS,SAAC,uBAAuB;AAAS,4CAC1C,SAAS,SAAC,WAAW;AAAS,4CAC9B,SAAS,SAAC,SAAS;AAAQ;AAAG;AAGjC,iCAfD,MAAM;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC;AAAI;AAAkC;AAGW;AC7BtD;AAMA,MAAa,uBAAwB,SAAQ,UAAyC;AACtF;AAAQ;AACK;AAAyB;AAAQ,IAD1C,YACwB,EAAC,aAAa,EAAmB,EACrB,MAA4B;AAClE,QACM,KAAK,CAAC,UAAU;AACxB;AAA6B,kBAAX,QAAQ,GAAG,IAAI,gBAAgB,CAAC,OAAO;AACzD,gBAAgB,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACzC,aAAa,CAAC;AACd,YACY,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AACpD,YACY,OAAO;AACnB,gBAAgB,QAAQ,CAAC,UAAU,EAAE,CAAC;AACtC,aAAa,CAAC;AACd,SAAS,CAAC,CAAC;AACX,KAAK;AACL;mDAlBC,UAAU;qIACT;AAAC;AAAmB;AAAiD,YAN/D,UAAU,uBAQT,MAAM,SAAC,UAAU;AAAS,4CAC1B,MAAM,SAAC,sBAAsB;AAAQ;;;;;;;;;kCAAE;AAAC;AAAC;AAAI;AAE5C;AAEQ;ACblB,MAOa,sBAAsB;AAAG;kDAJrC,QAAQ,SAAC,kBACN;QAAY,EAAE,CAAC,yBAAyB,CAAC,kBACzC,OAAO,EAAE,CAAC,yBAAyB,CAAC,eACvC;;;;;;;;0BACI;AAAC;AAAC;AAAI;AACL;AAAqG;AAAI;AAAC;AAAI;AAAkC;AAAqpBA,AAoBA,AAAA,AAIA,AAAA,AAAA,AAAA,AAAA,AAIA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAfA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAiBA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAnCA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AACA,AACA,AApBA,AAAA,AA0BA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAZA,AAAA,ACzBA,AAMA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AACA,AAjBA,AAAA,AALA,AAAA,AAQA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,ACTA,AAOA,AAAA,AAJA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA","sourcesContent":["import {InjectionToken} from '@angular/core';\r\n\r\nexport const MUTATION_OBSERVER_INIT = new InjectionToken<MutationObserverInit>(\r\n    'MutationObserver config',\r\n);\r\n","export function booleanAttribute(element: Element, attribute: string): true | undefined {\r\n    return element.getAttribute(attribute) !== null || undefined;\r\n}\r\n","import {ElementRef} from '@angular/core';\r\nimport {booleanAttribute} from './boolean-attribute';\r\n\r\nexport function mutationObserverInitFactory({\r\n    nativeElement,\r\n}: ElementRef<Element>): MutationObserverInit {\r\n    const attributeFilterAttr = nativeElement.getAttribute('attributeFilter');\r\n    const attributeFilter = attributeFilterAttr\r\n        ? attributeFilterAttr.split(',').map(attr => attr.trim())\r\n        : undefined;\r\n\r\n    return {\r\n        attributeFilter,\r\n        attributeOldValue: booleanAttribute(nativeElement, 'attributeOldValue'),\r\n        attributes: booleanAttribute(nativeElement, 'attributes'),\r\n        characterData: booleanAttribute(nativeElement, 'characterData'),\r\n        characterDataOldValue: booleanAttribute(nativeElement, 'characterDataOldValue'),\r\n        childList: booleanAttribute(nativeElement, 'childList'),\r\n        subtree: booleanAttribute(nativeElement, 'subtree'),\r\n    };\r\n}\r\n","import {\r\n    Attribute,\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    OnDestroy,\r\n    Output,\r\n} from '@angular/core';\r\nimport {MUTATION_OBSERVER_INIT} from '../tokens/mutation-observer-init';\r\nimport {mutationObserverInitFactory} from '../utils/mutation-observer-init-factory';\r\n\r\n// @dynamic\r\n@Directive({\r\n    selector: '[waMutationObserver]',\r\n    exportAs: 'MutationObserver',\r\n    providers: [\r\n        {\r\n            provide: MUTATION_OBSERVER_INIT,\r\n            deps: [ElementRef],\r\n            useFactory: mutationObserverInitFactory,\r\n        },\r\n    ],\r\n})\r\nexport class MutationObserverDirective extends MutationObserver implements OnDestroy {\r\n    @Output()\r\n    readonly waMutationObserver = new EventEmitter<MutationRecord[]>();\r\n\r\n    constructor(\r\n        @Inject(ElementRef) {nativeElement}: ElementRef<Node>,\r\n        @Inject(MUTATION_OBSERVER_INIT) config: MutationObserverInit,\r\n        @Attribute('attributeFilter') _1: unknown,\r\n        @Attribute('attributeOldValue') _2: unknown,\r\n        @Attribute('attributes') _3: unknown,\r\n        @Attribute('characterData') _4: unknown,\r\n        @Attribute('characterDataOldValue') _5: unknown,\r\n        @Attribute('childList') _6: unknown,\r\n        @Attribute('subtree') _7: unknown,\r\n    ) {\r\n        super(records => {\r\n            this.waMutationObserver.emit(records);\r\n        });\r\n\r\n        this.observe(nativeElement, config);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disconnect();\r\n    }\r\n}\r\n","import {ElementRef, Inject, Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {MUTATION_OBSERVER_INIT} from '../tokens/mutation-observer-init';\r\n\r\n// @dynamic\r\n@Injectable()\r\nexport class MutationObserverService extends Observable<ReadonlyArray<MutationRecord>> {\r\n    constructor(\r\n        @Inject(ElementRef) {nativeElement}: ElementRef<Node>,\r\n        @Inject(MUTATION_OBSERVER_INIT) config: MutationObserverInit,\r\n    ) {\r\n        super(subscriber => {\r\n            const observer = new MutationObserver(records => {\r\n                subscriber.next(records);\r\n            });\r\n\r\n            observer.observe(nativeElement, config);\r\n\r\n            return () => {\r\n                observer.disconnect();\r\n            };\r\n        });\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MutationObserverDirective} from './directives/mutation-observer.directive';\r\n\r\n@NgModule({\r\n    declarations: [MutationObserverDirective],\r\n    exports: [MutationObserverDirective],\r\n})\r\nexport class MutationObserverModule {}\r\n"]}