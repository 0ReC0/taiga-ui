{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{pzXc:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,\"ExampleTuiFieldErrorModule\",(function(){return field_error_module_ExampleTuiFieldErrorModule}));var common=__webpack_require__(\"2kYt\"),fesm2015_forms=__webpack_require__(\"nIj0\"),router=__webpack_require__(\"sEIs\"),public_api=__webpack_require__(\"SVIu\"),core=__webpack_require__(\"Qq0t\"),kit=__webpack_require__(\"dvRg\"),tinkoff_ng_polymorpheus=__webpack_require__(\"kiPw\"),fesm2015_core=__webpack_require__(\"EM62\"),page_component=__webpack_require__(\"OZlg\"),page_tab_directive=__webpack_require__(\"e0eB\"),link_component=__webpack_require__(\"yZWP\"),example_component=__webpack_require__(\"iyc4\"),cdk=__webpack_require__(\"l4xa\"),label_component=__webpack_require__(\"1Nkj\"),input_component=__webpack_require__(\"GdrL\"),textfield_size_directive=__webpack_require__(\"2wTY\"),textfield_label_outside_directive=__webpack_require__(\"gEyt\"),field_error_component=__webpack_require__(\"kNZY\");const latinChars=/^[a-zA-Z]+$/;function passwordValidator(field){return field.value&&latinChars.test(field.value)?null:{other:new cdk.TuiValidationError(\"Допустимы только латинские буквы\")}}function superComputerValidator(field){return\"42\"===field.value?null:{other:new cdk.TuiValidationError(\"Ответ неверный\")}}let _1_TuiFieldErrorExample1=(()=>{class TuiFieldErrorExample1{constructor(){this.testValue1=new fesm2015_forms.FormControl(\"\",[fesm2015_forms.Validators.required,passwordValidator]),this.testForm=new fesm2015_forms.FormGroup({testValue1:this.testValue1,testValue2:new fesm2015_forms.FormControl(\"\",[fesm2015_forms.Validators.required,superComputerValidator])})}ngOnInit(){this.testValue1.valueChanges.subscribe(()=>{this.testValue1.markAsTouched()})}}return TuiFieldErrorExample1.ɵfac=function(t){return new(t||TuiFieldErrorExample1)},TuiFieldErrorExample1.ɵcmp=fesm2015_core[\"ɵɵdefineComponent\"]({type:TuiFieldErrorExample1,selectors:[[\"tui-field-error-example-1\"]],decls:11,vars:3,consts:[[1,\"input-wrapper\",3,\"formGroup\"],[\"tuiLabel\",\"\",\"label\",\"Введите ответ\",1,\"tui-space_bottom-4\"],[\"formControlName\",\"testValue2\",\"tuiTextfieldSize\",\"m\",3,\"tuiTextfieldLabelOutside\"],[\"formControlName\",\"testValue2\"],[\"tuiLabel\",\"\",\"label\",\"Задайте пароль\"],[\"formControlName\",\"testValue1\",\"tuiTextfieldSize\",\"m\",3,\"tuiTextfieldLabelOutside\"],[\"formControlName\",\"testValue1\"]],template:function(rf,ctx){1&rf&&(fesm2015_core[\"ɵɵelementStart\"](0,\"div\",0),fesm2015_core[\"ɵɵelementStart\"](1,\"label\",1),fesm2015_core[\"ɵɵelementStart\"](2,\"tui-input\",2),fesm2015_core[\"ɵɵtext\"](3,\" На все вопросы вселенной и всего такого \"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelement\"](4,\"tui-field-error\",3),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementStart\"](5,\"label\",4),fesm2015_core[\"ɵɵelementStart\"](6,\"tui-input\",5),fesm2015_core[\"ɵɵtext\"](7,\" Только латинские буквы \"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelement\"](8,\"tui-field-error\",6),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementStart\"](9,\"p\"),fesm2015_core[\"ɵɵtext\"](10,\" Если вам нужно отобразить валидацию сразу, как только пользователь начал что-то вводить в поле — подпишитесь на изменения значения формы и вызовите markAsTouched на контроле при первом же изменении значения: \"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementEnd\"]()),2&rf&&(fesm2015_core[\"ɵɵproperty\"](\"formGroup\",ctx.testForm),fesm2015_core[\"ɵɵadvance\"](2),fesm2015_core[\"ɵɵproperty\"](\"tuiTextfieldLabelOutside\",!0),fesm2015_core[\"ɵɵadvance\"](4),fesm2015_core[\"ɵɵproperty\"](\"tuiTextfieldLabelOutside\",!0))},directives:[fesm2015_forms.NgControlStatusGroup,fesm2015_forms.FormGroupDirective,label_component.a,input_component.a,fesm2015_forms.NgControlStatus,fesm2015_forms.FormControlName,textfield_size_directive.b,textfield_label_outside_directive.b,field_error_component.a],styles:[\".input-wrapper[_ngcontent-%COMP%]{max-width:320px}\"],changeDetection:0}),TuiFieldErrorExample1})();var button_component=__webpack_require__(\"zV1d\");const _c0=[\"errorContent\"],_c1=[\"bigErrorContent\"];function TuiFieldErrorExample2_ng_template_3_Template(rf,ctx){1&rf&&(fesm2015_core[\"ɵɵtext\"](0,\" ИНН — 10 или 12 цифр. См. \"),fesm2015_core[\"ɵɵelementStart\"](1,\"a\",10),fesm2015_core[\"ɵɵtext\"](2,\" Google \"),fesm2015_core[\"ɵɵelementEnd\"]())}function TuiFieldErrorExample2_ng_template_8_Template(rf,ctx){1&rf&&(fesm2015_core[\"ɵɵtext\"](0,\" Данная компания уже зарегистрирована! \"),fesm2015_core[\"ɵɵelementStart\"](1,\"button\",11),fesm2015_core[\"ɵɵtext\"](2,\" Я владелец \"),fesm2015_core[\"ɵɵelementEnd\"]())}const _c2=function(){return[\"required\",\"inn\"]},innRegexTen=/^\\d{10}$/,innRegexTwelve=/^\\d{12}$/;let _2_TuiFieldErrorExample2=(()=>{class TuiFieldErrorExample2{constructor(){this.testValue2=new fesm2015_forms.FormControl(\"\"),this.testForm=new fesm2015_forms.FormGroup({testValue1:new fesm2015_forms.FormControl(\"\",[fesm2015_forms.Validators.required,this.getInnValidator()]),testValue2:this.testValue2}),this.companyValidator=field=>field.value?{inn:new cdk.TuiValidationError(this.bigErrorContent||\"\")}:null}ngOnInit(){this.testValue2.setValidators([fesm2015_forms.Validators.required,this.companyValidator])}getInnValidator(){return field=>field.value&&(innRegexTen.test(field.value)||innRegexTwelve.test(field.value))?null:{inn:new cdk.TuiValidationError(this.errorContent||\"\")}}}return TuiFieldErrorExample2.ɵfac=function(t){return new(t||TuiFieldErrorExample2)},TuiFieldErrorExample2.ɵcmp=fesm2015_core[\"ɵɵdefineComponent\"]({type:TuiFieldErrorExample2,selectors:[[\"tui-field-error-example-2\"]],viewQuery:function(rf,ctx){var _t;1&rf&&(fesm2015_core[\"ɵɵviewQuery\"](_c0,!0),fesm2015_core[\"ɵɵviewQuery\"](_c1,!0)),2&rf&&(fesm2015_core[\"ɵɵqueryRefresh\"](_t=fesm2015_core[\"ɵɵloadQuery\"]())&&(ctx.errorContent=_t.first),fesm2015_core[\"ɵɵqueryRefresh\"](_t=fesm2015_core[\"ɵɵloadQuery\"]())&&(ctx.bigErrorContent=_t.first))},decls:11,vars:5,consts:[[1,\"input-wrapper\",3,\"formGroup\"],[\"tuiLabel\",\"\",\"label\",\"ИНН\"],[\"formControlName\",\"testValue1\",\"tuiTextfieldSize\",\"m\",3,\"tuiTextfieldLabelOutside\"],[\"polymorpheus\",\"\"],[\"errorContent\",\"polymorpheus\"],[\"formControlName\",\"testValue1\",3,\"order\"],[\"tuiLabel\",\"\",\"label\",\"Введите название вашей компании\",1,\"tui-space_top-4\"],[\"formControlName\",\"testValue2\",\"tuiTextfieldSize\",\"m\",3,\"tuiTextfieldLabelOutside\"],[\"bigErrorContent\",\"polymorpheus\"],[\"formControlName\",\"testValue2\"],[\"href\",\"https://google.com\",\"tuiLink\",\"\"],[\"tuiButton\",\"\",\"type\",\"button\",1,\"tui-space_top-2\"]],template:function(rf,ctx){1&rf&&(fesm2015_core[\"ɵɵelementStart\"](0,\"form\",0),fesm2015_core[\"ɵɵelementStart\"](1,\"label\",1),fesm2015_core[\"ɵɵelement\"](2,\"tui-input\",2),fesm2015_core[\"ɵɵtemplate\"](3,TuiFieldErrorExample2_ng_template_3_Template,3,0,\"ng-template\",3,4,fesm2015_core[\"ɵɵtemplateRefExtractor\"]),fesm2015_core[\"ɵɵelement\"](5,\"tui-field-error\",5),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementStart\"](6,\"label\",6),fesm2015_core[\"ɵɵelement\"](7,\"tui-input\",7),fesm2015_core[\"ɵɵtemplate\"](8,TuiFieldErrorExample2_ng_template_8_Template,3,0,\"ng-template\",3,8,fesm2015_core[\"ɵɵtemplateRefExtractor\"]),fesm2015_core[\"ɵɵelement\"](10,\"tui-field-error\",9),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementEnd\"]()),2&rf&&(fesm2015_core[\"ɵɵproperty\"](\"formGroup\",ctx.testForm),fesm2015_core[\"ɵɵadvance\"](2),fesm2015_core[\"ɵɵproperty\"](\"tuiTextfieldLabelOutside\",!0),fesm2015_core[\"ɵɵadvance\"](3),fesm2015_core[\"ɵɵproperty\"](\"order\",fesm2015_core[\"ɵɵpureFunction0\"](4,_c2)),fesm2015_core[\"ɵɵadvance\"](2),fesm2015_core[\"ɵɵproperty\"](\"tuiTextfieldLabelOutside\",!0))},directives:[fesm2015_forms[\"ɵangular_packages_forms_forms_y\"],fesm2015_forms.NgControlStatusGroup,fesm2015_forms.FormGroupDirective,label_component.a,input_component.a,fesm2015_forms.NgControlStatus,fesm2015_forms.FormControlName,textfield_size_directive.b,textfield_label_outside_directive.b,tinkoff_ng_polymorpheus.e,field_error_component.a,link_component.a,button_component.a],styles:[\".input-wrapper[_ngcontent-%COMP%]{max-width:320px}\"],changeDetection:0}),TuiFieldErrorExample2})();var input_phone_component=__webpack_require__(\"bYz0\"),textfield_autocomplete_directive=__webpack_require__(\"CDxv\");const _3_c0=[\"phoneErrorContent\"];function TuiFieldErrorExample3_label_1_ng_template_4_Template(rf,ctx){1&rf&&fesm2015_core[\"ɵɵtext\"](0,\" Неверная длина номера \")}function TuiFieldErrorExample3_label_1_Template(rf,ctx){if(1&rf){const _r6=fesm2015_core[\"ɵɵgetCurrentView\"]();fesm2015_core[\"ɵɵelementStart\"](0,\"label\",4),fesm2015_core[\"ɵɵelementStart\"](1,\"div\",5),fesm2015_core[\"ɵɵelement\"](2,\"tui-input-phone\",6),fesm2015_core[\"ɵɵelementStart\"](3,\"button\",7),fesm2015_core[\"ɵɵlistener\"](\"click\",(function(){fesm2015_core[\"ɵɵrestoreView\"](_r6);const i_r2=ctx.index;return fesm2015_core[\"ɵɵnextContext\"]().removePhone(i_r2)})),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵtemplate\"](4,TuiFieldErrorExample3_label_1_ng_template_4_Template,1,0,\"ng-template\",8,9,fesm2015_core[\"ɵɵtemplateRefExtractor\"]),fesm2015_core[\"ɵɵelement\"](6,\"tui-field-error\",10),fesm2015_core[\"ɵɵelementEnd\"]()}if(2&rf){const i_r2=ctx.index;fesm2015_core[\"ɵɵpropertyInterpolate1\"](\"label\",\"Номер \",i_r2+1,\"\"),fesm2015_core[\"ɵɵadvance\"](2),fesm2015_core[\"ɵɵpropertyInterpolate\"](\"formControlName\",i_r2),fesm2015_core[\"ɵɵproperty\"](\"tuiTextfieldLabelOutside\",!0),fesm2015_core[\"ɵɵadvance\"](4),fesm2015_core[\"ɵɵpropertyInterpolate\"](\"formControlName\",i_r2)}}let _3_TuiFieldErrorExample3=(()=>{class TuiFieldErrorExample3{constructor(){this.getPhoneArrayValidator=array=>array.controls.length<2||array.controls.filter(item=>item.errors).length&&array.controls.length?{length:new cdk.TuiValidationError(\"Необходимо минимум 2 номера телефона\")}:null,this.testForm=new fesm2015_forms.FormGroup({phones:new fesm2015_forms.FormArray([new fesm2015_forms.FormControl(\"\",[fesm2015_forms.Validators.required,this.getPhoneLengthValidator()])],[this.getPhoneArrayValidator])})}get formData(){return this.testForm.get(\"phones\")}addPhone(){this.formData.push(new fesm2015_forms.FormControl(\"\",this.addValidators()))}removePhone(index){this.formData.removeAt(index);let n=0;for(;n<=1&&this.formData.controls[n];)this.formData.controls[n].setValidators([fesm2015_forms.Validators.required,this.getPhoneLengthValidator()]),n++}addValidators(){return this.formData.controls.length<2?[fesm2015_forms.Validators.required,this.getPhoneLengthValidator()]:null}getPhoneLengthValidator(){return field=>12!==field.value.length?{lenght:new cdk.TuiValidationError(this.phoneErrorContent||\"\")}:null}}return TuiFieldErrorExample3.ɵfac=function(t){return new(t||TuiFieldErrorExample3)},TuiFieldErrorExample3.ɵcmp=fesm2015_core[\"ɵɵdefineComponent\"]({type:TuiFieldErrorExample3,selectors:[[\"tui-field-error-example-3\"]],viewQuery:function(rf,ctx){var _t;1&rf&&fesm2015_core[\"ɵɵviewQuery\"](_3_c0,!0),2&rf&&fesm2015_core[\"ɵɵqueryRefresh\"](_t=fesm2015_core[\"ɵɵloadQuery\"]())&&(ctx.phoneErrorContent=_t.first)},decls:5,vars:2,consts:[[3,\"formGroup\"],[\"tuiLabel\",\"\",\"class\",\"tui-space_bottom-4\",\"formArrayName\",\"phones\",3,\"label\",4,\"ngFor\",\"ngForOf\"],[\"formArrayName\",\"phones\",1,\"form-array-error\"],[\"tuiButton\",\"\",\"type\",\"button\",\"size\",\"s\",1,\"tui-space_top-4\",3,\"click\"],[\"tuiLabel\",\"\",\"formArrayName\",\"phones\",1,\"tui-space_bottom-4\",3,\"label\"],[1,\"row\"],[\"tuiTextfieldAutocomplete\",\"off\",\"tuiTextfieldSize\",\"m\",1,\"input\",3,\"formControlName\",\"tuiTextfieldLabelOutside\"],[\"tuiIconButton\",\"\",\"type\",\"button\",\"size\",\"m\",\"title\",\"Удалить телефон\",\"appearance\",\"icon\",\"icon\",\"tuiIconTrash\",1,\"tui-space_left-2\",\"icon\",3,\"click\"],[\"polymorpheus\",\"\"],[\"phoneErrorContent\",\"polymorpheus\"],[3,\"formControlName\"]],template:function(rf,ctx){1&rf&&(fesm2015_core[\"ɵɵelementStart\"](0,\"form\",0),fesm2015_core[\"ɵɵtemplate\"](1,TuiFieldErrorExample3_label_1_Template,7,4,\"label\",1),fesm2015_core[\"ɵɵelement\"](2,\"tui-field-error\",2),fesm2015_core[\"ɵɵelementStart\"](3,\"button\",3),fesm2015_core[\"ɵɵlistener\"](\"click\",(function(){return ctx.addPhone()})),fesm2015_core[\"ɵɵtext\"](4,\" Добавить телефон \"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementEnd\"]()),2&rf&&(fesm2015_core[\"ɵɵproperty\"](\"formGroup\",ctx.testForm),fesm2015_core[\"ɵɵadvance\"](1),fesm2015_core[\"ɵɵproperty\"](\"ngForOf\",ctx.formData.controls))},directives:[fesm2015_forms[\"ɵangular_packages_forms_forms_y\"],fesm2015_forms.NgControlStatusGroup,fesm2015_forms.FormGroupDirective,common.s,field_error_component.a,fesm2015_forms.FormArrayName,button_component.a,label_component.a,input_phone_component.a,textfield_autocomplete_directive.b,textfield_size_directive.b,fesm2015_forms.NgControlStatus,fesm2015_forms.FormControlName,textfield_label_outside_directive.b,tinkoff_ng_polymorpheus.e],styles:[\".input[_ngcontent-%COMP%]{width:320px}.row[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.form-array-error[_ngcontent-%COMP%]{font-size:14px}\"],changeDetection:0}),TuiFieldErrorExample3})();var of=__webpack_require__(\"ROBh\"),delay=__webpack_require__(\"BwBJ\");const _4_latinChars=/^[a-zA-Z]+$/;let _4_TuiFieldErrorExample4=(()=>{class TuiFieldErrorExample4{constructor(fb){this.fb=fb,this.form=this.fb.group({text:[\"русский текст\",fesm2015_forms.Validators.required]}),this.form.controls.text.setAsyncValidators(field=>field.value&&_4_latinChars.test(field.value)?Object(of.a)(null).pipe():Object(of.a)({error:new cdk.TuiValidationError(\"Допустимы только латинские буквы\")}).pipe(Object(delay.a)(5e3))),this.form.controls.text.markAsTouched()}}return TuiFieldErrorExample4.ɵfac=function(t){return new(t||TuiFieldErrorExample4)(fesm2015_core[\"ɵɵdirectiveInject\"](fesm2015_forms.FormBuilder))},TuiFieldErrorExample4.ɵcmp=fesm2015_core[\"ɵɵdefineComponent\"]({type:TuiFieldErrorExample4,selectors:[[\"tui-field-error-example-4\"]],decls:5,vars:1,consts:[[3,\"formGroup\"],[1,\"tui-form__row\"],[\"formControlName\",\"text\",1,\"input\"],[\"formControlName\",\"text\"]],template:function(rf,ctx){1&rf&&(fesm2015_core[\"ɵɵelementStart\"](0,\"form\",0),fesm2015_core[\"ɵɵelementStart\"](1,\"div\",1),fesm2015_core[\"ɵɵelementStart\"](2,\"tui-input\",2),fesm2015_core[\"ɵɵtext\"](3,\" Enter some text \"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelement\"](4,\"tui-field-error\",3),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementEnd\"]()),2&rf&&fesm2015_core[\"ɵɵproperty\"](\"formGroup\",ctx.form)},directives:[fesm2015_forms[\"ɵangular_packages_forms_forms_y\"],fesm2015_forms.NgControlStatusGroup,fesm2015_forms.FormGroupDirective,input_component.a,fesm2015_forms.NgControlStatus,fesm2015_forms.FormControlName,field_error_component.a],styles:[\".input[_ngcontent-%COMP%]{width:320px}.row[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.form-array-error[_ngcontent-%COMP%]{font-size:14px}\"],changeDetection:0}),TuiFieldErrorExample4})();function maxLengthValidator(context){return\"максимальная длина - \"+context.requiredLength}function minLengthValidator(context){return\"максимальная длина - \"+context.requiredLength}let _5_TuiFieldErrorExample5=(()=>{class TuiFieldErrorExample5{constructor(){this.testValue1=new fesm2015_forms.FormControl(\"\",[fesm2015_forms.Validators.minLength(4),fesm2015_forms.Validators.maxLength(4)]),this.testValue2=new fesm2015_forms.FormControl(\"\",[fesm2015_forms.Validators.required,fesm2015_forms.Validators.email]),this.testForm=new fesm2015_forms.FormGroup({testValue1:this.testValue1,testValue2:this.testValue2})}ngOnInit(){this.testValue1.valueChanges.subscribe(()=>{this.testValue1.markAsTouched()})}}return TuiFieldErrorExample5.ɵfac=function(t){return new(t||TuiFieldErrorExample5)},TuiFieldErrorExample5.ɵcmp=fesm2015_core[\"ɵɵdefineComponent\"]({type:TuiFieldErrorExample5,selectors:[[\"tui-field-error-example-5\"]],features:[fesm2015_core[\"ɵɵProvidersFeature\"]([{provide:kit.TUI_VALIDATION_ERRORS,useValue:{required:\"Слышь, заполни\",email:\"Введите корректный email\",maxlength:maxLengthValidator,minlength:minLengthValidator}}])],decls:9,vars:2,consts:[[1,\"input-wrapper\",3,\"formGroup\"],[\"tuiLabel\",\"\",\"label\",\"Введите email\",1,\"tui-space_bottom-4\"],[\"formControlName\",\"testValue2\",\"tuiTextfieldSize\",\"m\",3,\"tuiTextfieldLabelOutside\"],[\"formControlName\",\"testValue2\"],[\"tuiLabel\",\"\",\"label\",\"Минимальная и максимальная длина\"],[\"formControlName\",\"testValue1\",\"tuiTextfieldSize\",\"m\"],[\"formControlName\",\"testValue1\"]],template:function(rf,ctx){1&rf&&(fesm2015_core[\"ɵɵelementStart\"](0,\"form\",0),fesm2015_core[\"ɵɵelementStart\"](1,\"label\",1),fesm2015_core[\"ɵɵelementStart\"](2,\"tui-input\",2),fesm2015_core[\"ɵɵtext\"](3,\" Обязательное поле \"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelement\"](4,\"tui-field-error\",3),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementStart\"](5,\"label\",4),fesm2015_core[\"ɵɵelementStart\"](6,\"tui-input\",5),fesm2015_core[\"ɵɵtext\"](7,\" Слово из 4 букв \"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelement\"](8,\"tui-field-error\",6),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementEnd\"]()),2&rf&&(fesm2015_core[\"ɵɵproperty\"](\"formGroup\",ctx.testForm),fesm2015_core[\"ɵɵadvance\"](2),fesm2015_core[\"ɵɵproperty\"](\"tuiTextfieldLabelOutside\",!0))},directives:[fesm2015_forms[\"ɵangular_packages_forms_forms_y\"],fesm2015_forms.NgControlStatusGroup,fesm2015_forms.FormGroupDirective,label_component.a,input_component.a,fesm2015_forms.NgControlStatus,fesm2015_forms.FormControlName,textfield_size_directive.b,textfield_label_outside_directive.b,field_error_component.a],styles:[\".input-wrapper[_ngcontent-%COMP%]{max-width:320px}\"],changeDetection:0}),TuiFieldErrorExample5})();var code_component=__webpack_require__(\"u8jZ\");const field_error_component_c0=function(){return[\"/tui-error\"]};function ExampleTuiFieldErrorComponent_ng_template_1_Template(rf,ctx){if(1&rf&&(fesm2015_core[\"ɵɵelementStart\"](0,\"p\"),fesm2015_core[\"ɵɵtext\"](1,\" Компонент \"),fesm2015_core[\"ɵɵelementStart\"](2,\"code\"),fesm2015_core[\"ɵɵtext\"](3,\"FieldError\"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵtext\"](4,\" служит для показа ошибки валидации поля формы. Для показа ошибки без контрола, используйте \"),fesm2015_core[\"ɵɵelementStart\"](5,\"a\",3),fesm2015_core[\"ɵɵelementStart\"](6,\"code\"),fesm2015_core[\"ɵɵtext\"](7,\"TuiError\"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵtext\"](8,\". \"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementStart\"](9,\"tui-doc-example\",4),fesm2015_core[\"ɵɵelement\"](10,\"tui-field-error-example-1\"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementStart\"](11,\"tui-doc-example\",5),fesm2015_core[\"ɵɵelement\"](12,\"tui-field-error-example-2\"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementStart\"](13,\"tui-doc-example\",6),fesm2015_core[\"ɵɵelement\"](14,\"tui-field-error-example-3\"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementStart\"](15,\"tui-doc-example\",7),fesm2015_core[\"ɵɵelement\"](16,\"tui-field-error-example-4\"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementStart\"](17,\"tui-doc-example\",8),fesm2015_core[\"ɵɵelement\"](18,\"tui-field-error-example-5\"),fesm2015_core[\"ɵɵelementEnd\"]()),2&rf){const ctx_r0=fesm2015_core[\"ɵɵnextContext\"]();fesm2015_core[\"ɵɵadvance\"](5),fesm2015_core[\"ɵɵproperty\"](\"routerLink\",fesm2015_core[\"ɵɵpureFunction0\"](6,field_error_component_c0)),fesm2015_core[\"ɵɵadvance\"](4),fesm2015_core[\"ɵɵproperty\"](\"content\",ctx_r0.example1),fesm2015_core[\"ɵɵadvance\"](2),fesm2015_core[\"ɵɵproperty\"](\"content\",ctx_r0.example2),fesm2015_core[\"ɵɵadvance\"](2),fesm2015_core[\"ɵɵproperty\"](\"content\",ctx_r0.example3),fesm2015_core[\"ɵɵadvance\"](2),fesm2015_core[\"ɵɵproperty\"](\"content\",ctx_r0.example4),fesm2015_core[\"ɵɵadvance\"](2),fesm2015_core[\"ɵɵproperty\"](\"content\",ctx_r0.example5)}}function ExampleTuiFieldErrorComponent_ng_template_2_Template(rf,ctx){if(1&rf&&(fesm2015_core[\"ɵɵelementStart\"](0,\"ol\",9),fesm2015_core[\"ɵɵelementStart\"](1,\"li\"),fesm2015_core[\"ɵɵtext\"](2,\" Для использования импортировать модуль \"),fesm2015_core[\"ɵɵelementStart\"](3,\"code\"),fesm2015_core[\"ɵɵtext\"](4,\"TuiFieldErrorModule\"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵtext\"](5,\" в тот же модуль, куда добавляется ваш компонент: \"),fesm2015_core[\"ɵɵelement\"](6,\"tui-doc-code\",10),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementStart\"](7,\"li\"),fesm2015_core[\"ɵɵtext\"](8,\" Добавить в шаблон, \"),fesm2015_core[\"ɵɵelementStart\"](9,\"code\"),fesm2015_core[\"ɵɵtext\"](10,\"formControlName\"),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵtext\"](11,\" — имя контрола, для которого будет показана ошибка: \"),fesm2015_core[\"ɵɵelement\"](12,\"tui-doc-code\",11),fesm2015_core[\"ɵɵelementEnd\"](),fesm2015_core[\"ɵɵelementEnd\"]()),2&rf){const ctx_r1=fesm2015_core[\"ɵɵnextContext\"]();fesm2015_core[\"ɵɵadvance\"](6),fesm2015_core[\"ɵɵproperty\"](\"code\",ctx_r1.exampleImportModule),fesm2015_core[\"ɵɵadvance\"](6),fesm2015_core[\"ɵɵproperty\"](\"code\",ctx_r1.exampleInsertTemplate)}}let field_error_component_ExampleTuiFieldErrorComponent=(()=>{class ExampleTuiFieldErrorComponent{constructor(){this.exampleImportModule=\"import {ReactiveFormsModule} from '@angular/forms';\\nimport {TuiFieldErrorModule} from '@taiga-ui/kit';\\n\\n...\\n\\n@NgModule({\\n    imports: [\\n        ...\\n        ReactiveFormsModule,\\n        TuiFieldErrorModule,\\n        TuiContentModule\\n    ],\\n...\\n\",this.exampleInsertTemplate='<ng-container [formGroup]=\"testForm\">\\n    <tui-input formControlName=\"testValue1\"></tui-input>\\n    <tui-field-error formControlName=\"testValue1\"></tui-field-error>\\n</ng-container>\\n',this.example1={TypeScript:\"import {Component, OnInit} from '@angular/core';\\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\\nimport {TuiValidationError} from '@taiga-ui/cdk';\\nimport {changeDetection} from '../../../../../change-detection-strategy';\\nimport {encapsulation} from '../../../../../view-encapsulation';\\n\\nconst latinChars = /^[a-zA-Z]+$/;\\n\\nexport function passwordValidator(field: AbstractControl): Validators | null {\\n    return field.value && latinChars.test(field.value)\\n        ? null\\n        : {\\n              other: new TuiValidationError('Допустимы только латинские буквы'),\\n          };\\n}\\n\\nexport function superComputerValidator(field: AbstractControl): Validators | null {\\n    return field.value === '42'\\n        ? null\\n        : {\\n              other: new TuiValidationError('Ответ неверный'),\\n          };\\n}\\n\\n@Component({\\n    selector: 'tui-field-error-example-1',\\n    templateUrl: './index.html',\\n    styleUrls: ['./index.less'],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiFieldErrorExample1 implements OnInit {\\n    testValue1 = new FormControl('', [Validators.required, passwordValidator]);\\n\\n    testForm = new FormGroup({\\n        testValue1: this.testValue1,\\n        testValue2: new FormControl('', [Validators.required, superComputerValidator]),\\n    });\\n\\n    ngOnInit() {\\n        this.testValue1.valueChanges.subscribe(() => {\\n            this.testValue1.markAsTouched();\\n        });\\n    }\\n}\\n\",HTML:'<div class=\"input-wrapper\" [formGroup]=\"testForm\">\\n    <label tuiLabel label=\"Введите ответ\" class=\"tui-space_bottom-4\">\\n        <tui-input\\n            formControlName=\"testValue2\"\\n            tuiTextfieldSize=\"m\"\\n            [tuiTextfieldLabelOutside]=\"true\"\\n        >\\n            На все вопросы вселенной и всего такого\\n        </tui-input>\\n\\n        <tui-field-error formControlName=\"testValue2\"></tui-field-error>\\n    </label>\\n\\n    <label tuiLabel label=\"Задайте пароль\">\\n        <tui-input\\n            formControlName=\"testValue1\"\\n            tuiTextfieldSize=\"m\"\\n            [tuiTextfieldLabelOutside]=\"true\"\\n        >\\n            Только латинские буквы\\n        </tui-input>\\n\\n        <tui-field-error formControlName=\"testValue1\"></tui-field-error>\\n    </label>\\n\\n    <p>\\n        Если вам нужно отобразить валидацию сразу, как только пользователь начал\\n        что-то вводить в поле — подпишитесь на изменения значения формы и\\n        вызовите markAsTouched на контроле при первом же изменении значения:\\n    </p>\\n</div>\\n',LESS:\".input-wrapper {\\n    max-width: 320px;\\n}\\n\"},this.example2={TypeScript:\"import {Component, OnInit, ViewChild} from '@angular/core';\\nimport {\\n    AbstractControl,\\n    FormControl,\\n    FormGroup,\\n    ValidationErrors,\\n    Validators,\\n} from '@angular/forms';\\nimport {TuiValidationError} from '@taiga-ui/cdk';\\nimport {PolymorpheusTemplate} from '@tinkoff/ng-polymorpheus';\\nimport {changeDetection} from '../../../../../change-detection-strategy';\\nimport {encapsulation} from '../../../../../view-encapsulation';\\n\\nconst innRegexTen = /^\\\\d{10}$/;\\nconst innRegexTwelve = /^\\\\d{12}$/;\\n\\nexport function innValidator(field: AbstractControl): any {\\n    return field.value &&\\n        (innRegexTen.test(field.value) || innRegexTwelve.test(field.value))\\n        ? null\\n        : {\\n              inn: new TuiValidationError('ИНН — 10 или 12 цифр'),\\n          };\\n}\\n\\n@Component({\\n    selector: 'tui-field-error-example-2',\\n    templateUrl: './index.html',\\n    styleUrls: ['./index.less'],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiFieldErrorExample2 implements OnInit {\\n    @ViewChild('errorContent')\\n    errorContent?: PolymorpheusTemplate<{}>;\\n\\n    @ViewChild('bigErrorContent')\\n    bigErrorContent?: PolymorpheusTemplate<{}>;\\n\\n    testValue2 = new FormControl('');\\n\\n    testForm = new FormGroup({\\n        testValue1: new FormControl('', [Validators.required, this.getInnValidator()]),\\n        testValue2: this.testValue2,\\n    });\\n\\n    private readonly companyValidator = (\\n        field: AbstractControl,\\n    ): ValidationErrors | null =>\\n        field.value\\n            ? {\\n                  inn: new TuiValidationError(this.bigErrorContent || ''),\\n              }\\n            : null;\\n\\n    ngOnInit() {\\n        this.testValue2.setValidators([Validators.required, this.companyValidator]);\\n    }\\n\\n    private getInnValidator(): (field: AbstractControl) => ValidationErrors | null {\\n        return (field: AbstractControl): ValidationErrors | null =>\\n            field.value &&\\n            (innRegexTen.test(field.value) || innRegexTwelve.test(field.value))\\n                ? null\\n                : {\\n                      inn: new TuiValidationError(this.errorContent || ''),\\n                  };\\n    }\\n}\\n\",HTML:'<form class=\"input-wrapper\" [formGroup]=\"testForm\">\\n    <label tuiLabel label=\"ИНН\">\\n        <tui-input\\n            formControlName=\"testValue1\"\\n            tuiTextfieldSize=\"m\"\\n            [tuiTextfieldLabelOutside]=\"true\"\\n        ></tui-input>\\n\\n        <ng-template #errorContent=\"polymorpheus\" polymorpheus>\\n            ИНН — 10 или 12 цифр. См.\\n            <a href=\"https://google.com\" tuiLink> Google </a>\\n        </ng-template>\\n\\n        <tui-field-error\\n            formControlName=\"testValue1\"\\n            [order]=\"[\\'required\\', \\'inn\\']\"\\n        ></tui-field-error>\\n    </label>\\n\\n    <label\\n        tuiLabel\\n        class=\"tui-space_top-4\"\\n        label=\"Введите название вашей компании\"\\n    >\\n        <tui-input\\n            formControlName=\"testValue2\"\\n            tuiTextfieldSize=\"m\"\\n            [tuiTextfieldLabelOutside]=\"true\"\\n        ></tui-input>\\n\\n        <ng-template #bigErrorContent=\"polymorpheus\" polymorpheus>\\n            Данная компания уже зарегистрирована!\\n            <button tuiButton type=\"button\" class=\"tui-space_top-2\">\\n                Я владелец\\n            </button>\\n        </ng-template>\\n\\n        <tui-field-error formControlName=\"testValue2\"></tui-field-error>\\n    </label>\\n</form>\\n',LESS:\".input-wrapper {\\n    max-width: 320px;\\n}\\n\"},this.example3={TypeScript:\"import {Component, ViewChild} from '@angular/core';\\nimport {\\n    AbstractControl,\\n    FormArray,\\n    FormControl,\\n    FormGroup,\\n    ValidationErrors,\\n    ValidatorFn,\\n    Validators,\\n} from '@angular/forms';\\nimport {TuiValidationError} from '@taiga-ui/cdk';\\nimport {PolymorpheusTemplate} from '@tinkoff/ng-polymorpheus';\\nimport {changeDetection} from '../../../../../change-detection-strategy';\\nimport {encapsulation} from '../../../../../view-encapsulation';\\n\\n@Component({\\n    selector: 'tui-field-error-example-3',\\n    templateUrl: './index.html',\\n    styleUrls: ['./index.less'],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiFieldErrorExample3 {\\n    @ViewChild('phoneErrorContent')\\n    phoneErrorContent?: PolymorpheusTemplate<{}>;\\n\\n    getPhoneArrayValidator = (array: FormArray): ValidationErrors | null => {\\n        return array.controls.length < 2 ||\\n            (!!array.controls.filter(item => item.errors).length && array.controls.length)\\n            ? {length: new TuiValidationError('Необходимо минимум 2 номера телефона')}\\n            : null;\\n    };\\n\\n    testForm = new FormGroup({\\n        phones: new FormArray(\\n            [new FormControl('', [Validators.required, this.getPhoneLengthValidator()])],\\n            [this.getPhoneArrayValidator as ValidatorFn],\\n        ),\\n    });\\n\\n    get formData() {\\n        return <FormArray>this.testForm.get('phones');\\n    }\\n\\n    addPhone() {\\n        this.formData.push(new FormControl('', this.addValidators()));\\n    }\\n\\n    removePhone(index: number) {\\n        this.formData.removeAt(index);\\n\\n        let n = 0;\\n\\n        while (n <= 1 && this.formData.controls[n]) {\\n            this.formData.controls[n].setValidators([\\n                Validators.required,\\n                this.getPhoneLengthValidator(),\\n            ]);\\n            n++;\\n        }\\n    }\\n\\n    addValidators(): ValidationErrors | null {\\n        return this.formData.controls.length < 2\\n            ? [Validators.required, this.getPhoneLengthValidator()]\\n            : null;\\n    }\\n\\n    private getPhoneLengthValidator(): (\\n        field: AbstractControl,\\n    ) => ValidationErrors | null {\\n        return (field: AbstractControl): ValidationErrors | null =>\\n            field.value.length !== 12\\n                ? {\\n                      lenght: new TuiValidationError(this.phoneErrorContent || ''),\\n                  }\\n                : null;\\n    }\\n}\\n\",HTML:'<form [formGroup]=\"testForm\">\\n    <label\\n        tuiLabel\\n        *ngFor=\"let phone of formData.controls; let i = index\"\\n        class=\"tui-space_bottom-4\"\\n        label=\"Номер {{i + 1}}\"\\n        formArrayName=\"phones\"\\n    >\\n        <div class=\"row\">\\n            <tui-input-phone\\n                class=\"input\"\\n                formControlName=\"{{i}}\"\\n                tuiTextfieldAutocomplete=\"off\"\\n                tuiTextfieldSize=\"m\"\\n                [tuiTextfieldLabelOutside]=\"true\"\\n            ></tui-input-phone>\\n            <button\\n                tuiIconButton\\n                type=\"button\"\\n                class=\"tui-space_left-2 icon\"\\n                size=\"m\"\\n                title=\"Удалить телефон\"\\n                appearance=\"icon\"\\n                icon=\"tuiIconTrash\"\\n                (click)=\"removePhone(i)\"\\n            ></button>\\n        </div>\\n        <ng-template #phoneErrorContent=\"polymorpheus\" polymorpheus>\\n            Неверная длина номера\\n        </ng-template>\\n        <tui-field-error formControlName=\"{{i}}\"></tui-field-error>\\n    </label>\\n\\n    <tui-field-error\\n        class=\"form-array-error\"\\n        formArrayName=\"phones\"\\n    ></tui-field-error>\\n\\n    <button\\n        tuiButton\\n        type=\"button\"\\n        class=\"tui-space_top-4\"\\n        size=\"s\"\\n        (click)=\"addPhone()\"\\n    >\\n        Добавить телефон\\n    </button>\\n</form>\\n',LESS:\".input {\\n    width: 320px;\\n}\\n\\n.row {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.form-array-error {\\n    font-size: 14px;\\n}\\n\"},this.example4={TypeScript:\"import {Component, Inject} from '@angular/core';\\nimport {\\n    AbstractControl,\\n    AsyncValidatorFn,\\n    FormBuilder,\\n    FormGroup,\\n    Validators,\\n} from '@angular/forms';\\nimport {TuiValidationError} from '@taiga-ui/cdk';\\nimport {of} from 'rxjs';\\nimport {delay} from 'rxjs/operators';\\nimport {changeDetection} from '../../../../../change-detection-strategy';\\nimport {encapsulation} from '../../../../../view-encapsulation';\\n\\nconst latinChars = /^[a-zA-Z]+$/;\\n\\nfunction asyncValidatorFn(): AsyncValidatorFn {\\n    return (field: AbstractControl) => {\\n        return field.value && latinChars.test(field.value)\\n            ? of(null).pipe()\\n            : of({\\n                  error: new TuiValidationError('Допустимы только латинские буквы'),\\n              }).pipe(delay(5000));\\n    };\\n}\\n\\n@Component({\\n    selector: 'tui-field-error-example-4',\\n    templateUrl: './index.html',\\n    styleUrls: ['./index.less'],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiFieldErrorExample4 {\\n    readonly form: FormGroup;\\n\\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\\n        this.form = this.fb.group({\\n            text: ['русский текст', Validators.required],\\n        });\\n\\n        this.form.controls['text'].setAsyncValidators(asyncValidatorFn());\\n        this.form.controls['text'].markAsTouched();\\n    }\\n}\\n\",HTML:'<form [formGroup]=\"form\">\\n    <div class=\"tui-form__row\">\\n        <tui-input class=\"input\" formControlName=\"text\">\\n            Enter some text\\n        </tui-input>\\n        <tui-field-error formControlName=\"text\"></tui-field-error>\\n    </div>\\n</form>\\n',LESS:\".input {\\n    width: 320px;\\n}\\n\\n.row {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.form-array-error {\\n    font-size: 14px;\\n}\\n\"},this.example5={TypeScript:\"import {Component, OnInit} from '@angular/core';\\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\\nimport {TUI_VALIDATION_ERRORS} from '@taiga-ui/kit';\\nimport {changeDetection} from '../../../../../change-detection-strategy';\\nimport {encapsulation} from '../../../../../view-encapsulation';\\n\\nexport function maxLengthValidator(context: {requiredLength: string}): string {\\n    return `максимальная длина - ${context.requiredLength}`;\\n}\\n\\nexport function minLengthValidator(context: {requiredLength: string}): string {\\n    return `максимальная длина - ${context.requiredLength}`;\\n}\\n\\n@Component({\\n    selector: 'tui-field-error-example-5',\\n    templateUrl: './index.html',\\n    styleUrls: ['./index.less'],\\n    changeDetection,\\n    encapsulation,\\n    providers: [\\n        {\\n            provide: TUI_VALIDATION_ERRORS,\\n            useValue: {\\n                required: 'Слышь, заполни',\\n                email: 'Введите корректный email',\\n                maxlength: maxLengthValidator,\\n                minlength: minLengthValidator,\\n            },\\n        },\\n    ],\\n})\\nexport class TuiFieldErrorExample5 implements OnInit {\\n    testValue1 = new FormControl('', [Validators.minLength(4), Validators.maxLength(4)]);\\n    testValue2 = new FormControl('', [Validators.required, Validators.email]);\\n\\n    testForm = new FormGroup({\\n        testValue1: this.testValue1,\\n        testValue2: this.testValue2,\\n    });\\n\\n    ngOnInit() {\\n        this.testValue1.valueChanges.subscribe(() => {\\n            this.testValue1.markAsTouched();\\n        });\\n    }\\n}\\n\",HTML:'<form class=\"input-wrapper\" [formGroup]=\"testForm\">\\n    <label tuiLabel class=\"tui-space_bottom-4\" label=\"Введите email\">\\n        <tui-input\\n            formControlName=\"testValue2\"\\n            tuiTextfieldSize=\"m\"\\n            [tuiTextfieldLabelOutside]=\"true\"\\n        >\\n            Обязательное поле\\n        </tui-input>\\n\\n        <tui-field-error formControlName=\"testValue2\"></tui-field-error>\\n    </label>\\n\\n    <label tuiLabel label=\"Минимальная и максимальная длина\">\\n        <tui-input formControlName=\"testValue1\" tuiTextfieldSize=\"m\">\\n            Слово из 4 букв\\n        </tui-input>\\n\\n        <tui-field-error formControlName=\"testValue1\"></tui-field-error>\\n    </label>\\n</form>\\n',LESS:\".input-wrapper {\\n    max-width: 320px;\\n}\\n\"}}}return ExampleTuiFieldErrorComponent.ɵfac=function(t){return new(t||ExampleTuiFieldErrorComponent)},ExampleTuiFieldErrorComponent.ɵcmp=fesm2015_core[\"ɵɵdefineComponent\"]({type:ExampleTuiFieldErrorComponent,selectors:[[\"example-tui-field-error\"]],decls:3,vars:0,consts:[[\"header\",\"FieldError\",\"package\",\"KIT\"],[\"pageTab\",\"\"],[\"pageTab\",\"Подключение\"],[\"tuiLink\",\"\",3,\"routerLink\"],[\"id\",\"base\",\"heading\",\"базовый\",3,\"content\"],[\"id\",\"patterns\",\"heading\",\"с шаблонами\",3,\"content\"],[\"id\",\"formArray\",\"heading\",\"с динамическим добавлением (FormArray)\",3,\"content\"],[\"id\",\"async\",\"heading\",\"с асинхронным валидатором\",3,\"content\"],[\"id\",\"customMessages\",\"heading\",\"С кастомными сообщениями для встроенных валидаторов\",3,\"content\"],[1,\"b-demo-steps\"],[\"filename\",\"myComponent.module.ts\",3,\"code\"],[\"filename\",\"myComponent.template.html\",3,\"code\"]],template:function(rf,ctx){1&rf&&(fesm2015_core[\"ɵɵelementStart\"](0,\"tui-doc-page\",0),fesm2015_core[\"ɵɵtemplate\"](1,ExampleTuiFieldErrorComponent_ng_template_1_Template,19,7,\"ng-template\",1),fesm2015_core[\"ɵɵtemplate\"](2,ExampleTuiFieldErrorComponent_ng_template_2_Template,13,2,\"ng-template\",2),fesm2015_core[\"ɵɵelementEnd\"]())},directives:[page_component.a,page_tab_directive.a,link_component.a,router.f,example_component.a,_1_TuiFieldErrorExample1,_2_TuiFieldErrorExample2,_3_TuiFieldErrorExample3,_4_TuiFieldErrorExample4,_5_TuiFieldErrorExample5,code_component.a],encapsulation:2,changeDetection:0}),ExampleTuiFieldErrorComponent})(),field_error_module_ExampleTuiFieldErrorModule=(()=>{class ExampleTuiFieldErrorModule{}return ExampleTuiFieldErrorModule.ɵmod=fesm2015_core[\"ɵɵdefineNgModule\"]({type:ExampleTuiFieldErrorModule}),ExampleTuiFieldErrorModule.ɵinj=fesm2015_core[\"ɵɵdefineInjector\"]({factory:function(t){return new(t||ExampleTuiFieldErrorModule)},imports:[[kit.TuiInputModule,fesm2015_forms.ReactiveFormsModule,common.c,kit.TuiFieldErrorModule,core.TuiLabelModule,kit.TuiInputPhoneModule,kit.TuiInputCountModule,core.TuiLinkModule,...public_api.e,tinkoff_ng_polymorpheus.c,core.TuiButtonModule,core.TuiTextfieldControllerModule,router.g.forChild(Object(public_api.n)(field_error_component_ExampleTuiFieldErrorComponent))]]}),ExampleTuiFieldErrorModule})()}}]);","extractedComments":[]}