{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{cS37:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,\"DocModule\",(function(){return doc_module_DocModule}));var router=__webpack_require__(\"sEIs\"),public_api=__webpack_require__(\"SVIu\"),ngx_markdown=__webpack_require__(\"DgXe\"),core=__webpack_require__(\"EM62\"),page_component=__webpack_require__(\"OZlg\");let doc_component_DocComponent=(()=>{class DocComponent{constructor(){this.docReadme=\"# Taiga UI — Doc\\n\\n> Taiga UI based library for developing documentation portals for Angular libraries.\\n\\n## How to use\\n\\n1. Include `TuiDocMainModule` in your App module and use in your template:\\n\\n    ```html\\n    <tui-doc-main>\\n        You can add content here, it will be shown below navigation in the sidebar\\n    </tui-doc-main>\\n    ```\\n\\n2. Configure languages to highlight in your main module:\\n\\n    ```typescript\\n    import * as typescript from 'highlight.js/lib/languages/typescript';\\n    import {HighlightLanguage} from 'ngx-highlightjs';\\n\\n    /**\\n     * Import every language you wish to highlight here\\n     * NOTE: The name of each language must match the file name its imported from\\n     */\\n    export function hljsLanguages(): ReadonlyArray<HighlightLanguage> {\\n        return [{name: 'typescript', func: typescript}];\\n    }\\n    ```\\n\\n    ```typescript\\n    import {NgModule} from '@angular/core';\\n    import {TuiDocMainModule} from '@taiga-ui/addon-doc';\\n    import {hljsLanguages} from './hljsLanguages';\\n    import {HIGHLIGHT_OPTIONS} from 'ngx-highlightjs';\\n    import {AppComponent} from './app.component';\\n\\n    @NgModule({\\n        bootstrap: [AppComponent],\\n        imports: [TuiDocMainModule],\\n        declarations: [AppComponent],\\n        providers: [\\n            {\\n                provide: HIGHLIGHT_OPTIONS,\\n                useValue: {\\n                    languages: hljsLanguages,\\n                },\\n            },\\n        ],\\n    })\\n    export class AppBrowserModule {}\\n    ```\\n\\n3. Configure documentation providers:\\n\\n    `TUI_DOC_PAGES` — an array of pages, see `TuiDocPages` type\\n\\n    `TUI_DOC_LOGO` — an src for the SVG logo in the sidebar\\n\\n    `TUI_DOC_DEFAULT_TABS` — an array of default named for tabs on your typical page\\n\\n    `TUI_DOC_TITLE` — a title prefix for the browser tab\\n\\n    `TUI_DOC_SEE_ALSO` — a two dimensional array of related pages by their titles\\n\\n4. Configure routing:\\n\\n    ```typescript\\n    import {Routes} from '@angular/router';\\n\\n    const appRoutes: Routes = [\\n        {\\n            path: 'super-page',\\n            loadChildren: '../super-page/super-page.module#SuperModule',\\n            data: {\\n                title: 'Super Page',\\n            },\\n        },\\n        // ...\\n    ];\\n    ```\\n\\n    > You must have title in route data in order for `TUI_DOC_SEE_ALSO` to work.\\n    > It would also be automatically added to `TUI_DOC_TITLE` for browser tab title\\n    > when navigating to that route.\\n\\n5. Create pages.\\n\\n    _Module:_\\n\\n    ```typescript\\n    import {NgModule} from '@angular/core';\\n    import {RouterModule} from '@angular/router';\\n    import {generateRoutes, TUI_DOC_PAGE_MODULES} from '@taiga-ui/addon-doc';\\n    import {SuperComponent} from './super.component';\\n\\n    @NgModule({\\n        imports: [\\n            ...TUI_DOC_PAGE_MODULES,\\n            RouterModule.forChild(generateRoutes(SuperComponent)),\\n        ],\\n        declarations: [SuperComponent],\\n        exports: [SuperComponent],\\n    })\\n    export class SuperModule {}\\n    ```\\n\\n    _Component:_\\n\\n    ```typescript\\n    import {Component} from '@angular/core';\\n\\n    import {default as exampleHtml} from '!!raw-loader!./examples/1/index.html';\\n    import {default as exampleTs} from '!!raw-loader!./examples/1/index.ts';\\n\\n    @Component({\\n        selector: 'super-component',\\n        templateUrl: './account.template.html',\\n    })\\n    export class SuperComponent {\\n        // Keys would be used as tabs for code example\\n        readonly example = {\\n            TypeScript: exampleTs,\\n            HTML: exampleHtml,\\n        };\\n\\n        readonly inputVariants = ['input 1', 'input 2'];\\n    }\\n    ```\\n\\n    _Template:_\\n\\n    ```html\\n    <tui-doc-page header=\\\"Super\\\" package=\\\"SUPER-PACKAGE\\\" deprecated>\\n        <ng-template pageTab>\\n            \\x3c!-- default tab name would be used --\\x3e\\n            This would be the content of a first tab\\n\\n            <tui-doc-example\\n                id=\\\"basic-example\\\"\\n                heading=\\\"Example of usage\\\"\\n                [content]=\\\"example\\\"\\n            >\\n                <example-1></example-1>\\n            </tui-doc-example>\\n        </ng-template>\\n\\n        <ng-template pageTab=\\\"Documentation\\\">\\n            <tui-doc-demo>\\n                <super-component [input]=\\\"input\\\"></super-component>\\n            </tui-doc-demo>\\n            <tui-doc-documentation>\\n                <ng-template\\n                    documentationPropertyName=\\\"input\\\"\\n                    documentationPropertyMode=\\\"input\\\"\\n                    documentationPropertyType=\\\"T\\\"\\n                    [documentationPropertyValues]=\\\"inputVariants\\\"\\n                    [(documentationPropertyValue)]=\\\"input\\\"\\n                >\\n                    Some input\\n                </ng-template>\\n            </tui-doc-documentation>\\n        </ng-template>\\n    </tui-doc-page>\\n    ```\\n\"}}return DocComponent.ɵfac=function(t){return new(t||DocComponent)},DocComponent.ɵcmp=core[\"ɵɵdefineComponent\"]({type:DocComponent,selectors:[[\"doc\"]],decls:14,vars:1,consts:[[\"header\",\"Собственная витрина\"],[1,\"language-html\"],[1,\"tui-space_bottom-8\"],[3,\"data\"]],template:function(rf,ctx){1&rf&&(core[\"ɵɵelementStart\"](0,\"tui-doc-page\",0),core[\"ɵɵelementStart\"](1,\"p\"),core[\"ɵɵtext\"](2,\" Пакет \"),core[\"ɵɵelementStart\"](3,\"strong\"),core[\"ɵɵtext\"](4,\"Angular Doc\"),core[\"ɵɵelementEnd\"](),core[\"ɵɵtext\"](5,\" позволяет создавать витрины компонентов, как эта. \"),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementStart\"](6,\"p\"),core[\"ɵɵtext\"](7,\"Для начала работы установите аддон в свое приложение для витрины:\"),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementStart\"](8,\"pre\",1),core[\"ɵɵelementStart\"](9,\"code\"),core[\"ɵɵtext\"](10,\"npm install @taiga-ui/addon-doc --save -E\"),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementEnd\"](),core[\"ɵɵelementStart\"](11,\"p\",2),core[\"ɵɵtext\"](12,\" Далее следуйте инструкции по оффициальному README пакета: \"),core[\"ɵɵelementEnd\"](),core[\"ɵɵelement\"](13,\"markdown\",3),core[\"ɵɵelementEnd\"]()),2&rf&&(core[\"ɵɵadvance\"](13),core[\"ɵɵproperty\"](\"data\",ctx.docReadme))},directives:[page_component.a,ngx_markdown.a],styles:[\"markdown blockquote{-webkit-box-shadow:inset 4px 0 #f5f5f5;box-shadow:inset 4px 0 #f5f5f5;margin-left:0;padding-left:30px;font-style:italic}\"],encapsulation:2,changeDetection:0}),DocComponent})(),doc_module_DocModule=(()=>{class DocModule{}return DocModule.ɵmod=core[\"ɵɵdefineNgModule\"]({type:DocModule}),DocModule.ɵinj=core[\"ɵɵdefineInjector\"]({factory:function(t){return new(t||DocModule)},imports:[[ngx_markdown.b,...public_api.e,router.g.forChild(Object(public_api.n)(doc_component_DocComponent))]]}),DocModule})()}}]);","extractedComments":[]}