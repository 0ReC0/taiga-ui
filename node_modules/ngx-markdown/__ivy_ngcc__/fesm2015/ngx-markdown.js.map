{"version":3,"file":"ngx-markdown.js","sources":["ng:/ngx-markdown/src/katex-options.ts","ng:/ngx-markdown/src/language.pipe.ts","ng:/ngx-markdown/src/marked-options.ts","ng:/ngx-markdown/src/marked-renderer.ts","ng:/ngx-markdown/src/markdown.service.ts","ng:/ngx-markdown/src/prism-plugin.ts","ng:/ngx-markdown/src/markdown.component.ts","ng:/ngx-markdown/src/markdown.pipe.ts","ng:/ngx-markdown/src/markdown.module.ts"],"names":["marked.parse"],"mappings":"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","sourcesContent":["// tslint:disable: no-redundant-jsdoc\r\nexport class KatexOptions {\r\n    /**\r\n     * If `true`, math will be rendered in display mode\r\n     * (math in display style and center math on page)\r\n     *\r\n     * If `false`, math will be rendered in inline mode\r\n     * @default false\r\n     */\r\n    displayMode?: boolean;\r\n    /**\r\n     * If `true`, KaTeX will throw a `ParseError` when\r\n     * it encounters an unsupported command or invalid LaTex\r\n     *\r\n     * If `false`, KaTeX will render unsupported commands as\r\n     * text, and render invalid LaTeX as its source code with\r\n     * hover text giving the error, in color given by errorColor\r\n     * @default true\r\n     */\r\n    throwOnError?: boolean;\r\n    /**\r\n     * A Color string given in format `#XXX` or `#XXXXXX`\r\n     */\r\n    errorColor?: string;\r\n    /**\r\n     * A collection of custom macros.\r\n     *\r\n     * See `src/macros.js` for its usage\r\n     */\r\n    macros?: any;\r\n    /**\r\n     * If `true`, `\\color` will work like LaTeX's `\\textcolor`\r\n     * and takes 2 arguments\r\n     *\r\n     * If `false`, `\\color` will work like LaTeX's `\\color`\r\n     * and takes 1 argument\r\n     *\r\n     * In both cases, `\\textcolor` works as in LaTeX\r\n     *\r\n     * @default false\r\n     */\r\n    colorIsTextColor?: boolean;\r\n    /**\r\n     * All user-specified sizes will be caped to `maxSize` ems\r\n     *\r\n     * If set to Infinity, users can make elements and space\r\n     * arbitrarily large\r\n     *\r\n     * @default Infinity\r\n     */\r\n    maxSize?: number;\r\n    /**\r\n     * Limit the number of macro expansions to specified number\r\n     *\r\n     * If set to `Infinity`, marco expander will try to fully expand\r\n     * as in LaTex\r\n     *\r\n     * @default 1000\r\n     */\r\n    maxExpand?: number;\r\n    /**\r\n     * Allowed protocols in `\\href`\r\n     *\r\n     * Use `_relative` to allow relative urls\r\n     *\r\n     * Use `*` to allow all protocols\r\n     */\r\n    allowedProtocols?: string[];\r\n    /**\r\n     * If `false` or `\"ignore\"`, allow features that make\r\n     * writing in LaTex convenient but not supported by LaTex\r\n     *\r\n     * If `true` or `\"error\"`, throw an error for such transgressions\r\n     *\r\n     * If `\"warn\"`, warn about behavior via `console.warn`\r\n     *\r\n     * @default \"warn\"\r\n     */\r\n    strict?: boolean | string | Function;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'language',\r\n})\r\nexport class LanguagePipe implements PipeTransform {\r\n\r\n  transform(value: string, language: string): string {\r\n    if (typeof value !== 'string') {\r\n      console.error(`LanguagePipe has been invoked with an invalid value type [${value}]`);\r\n      return value;\r\n    }\r\n    if (typeof language !== 'string') {\r\n      console.error(`LanguagePipe has been invoked with an invalid parameter [${language}]`);\r\n      return value;\r\n    }\r\n    return '```' + language + '\\n' +  value + '\\n```';\r\n  }\r\n}\r\n","import { MarkedRenderer } from './marked-renderer';\r\n\r\nexport class MarkedOptions {\r\n  /**\r\n   * A prefix URL for any relative link.\r\n   */\r\n  baseUrl?: string;\r\n\r\n  /**\r\n   * Enable GFM line breaks. This option requires the gfm option to be true.\r\n   */\r\n  breaks?: boolean;\r\n\r\n  /**\r\n   * Enable GitHub flavored markdown.\r\n   */\r\n  gfm?: boolean;\r\n\r\n  /**\r\n   * Include an id attribute when emitting headings.\r\n   */\r\n  headerIds?: boolean;\r\n\r\n  /**\r\n   * Set the prefix for header tag ids.\r\n   */\r\n  headerPrefix?: string;\r\n\r\n  /**\r\n   * Set the prefix for code block classes.\r\n   */\r\n  langPrefix?: string;\r\n\r\n  /**\r\n   * Mangle autolinks (<email@domain.com>).\r\n   */\r\n  mangle?: boolean;\r\n\r\n  /**\r\n   * Conform to obscure parts of markdown.pl as much as possible. Don't fix any of the original markdown bugs or poor behavior.\r\n   */\r\n  pedantic?: boolean;\r\n\r\n  /**\r\n   * Type: object Default: new Renderer()\r\n   *\r\n   * An object containing functions to render tokens to HTML.\r\n   */\r\n  renderer?: MarkedRenderer;\r\n\r\n  /**\r\n   * Sanitize the output. Ignore any HTML that has been input.\r\n   */\r\n  sanitize?: boolean;\r\n\r\n  /**\r\n   * Shows an HTML error message when rendering fails.\r\n   */\r\n  silent?: boolean;\r\n\r\n  /**\r\n   * Use smarter list behavior than the original markdown. May eventually be default with the old behavior moved into pedantic.\r\n   */\r\n  smartLists?: boolean;\r\n\r\n  /**\r\n   * Use \"smart\" typograhic punctuation for things like quotes and dashes.\r\n   */\r\n  smartypants?: boolean;\r\n\r\n  /**\r\n   * Enable GFM tables. This option requires the gfm option to be true.\r\n   */\r\n  tables?: boolean;\r\n\r\n  /**\r\n   * Generate closing slash for self-closing tags (<br/> instead of <br>)\r\n   */\r\n  xhtml?: boolean;\r\n\r\n  /**\r\n   * A function to highlight code blocks. The function takes three arguments: code, lang, and callback.\r\n   */\r\n  highlight?(code: string, lang: string, callback?: (error: any | undefined, code: string) => void): string;\r\n\r\n  /**\r\n   * Optionally sanitize found HTML with a sanitizer function.\r\n   */\r\n  sanitizer?(html: string): string;\r\n}\r\n","import { Renderer } from 'marked';\r\n\r\nexport class MarkedRenderer extends Renderer { }\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable, Optional, PLATFORM_ID, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport * as marked from 'marked';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { KatexOptions } from './katex-options';\r\nimport { MarkedOptions } from './marked-options';\r\nimport { MarkedRenderer } from './marked-renderer';\r\n\r\ndeclare var katex: {\r\n  renderToString(tex: string, options?: KatexOptions): string;\r\n};\r\n\r\ndeclare var Prism: {\r\n  highlightAllUnder: (element: Element | Document) => void;\r\n};\r\n\r\n// tslint:disable:max-line-length\r\nexport const errorKatexNotLoaded = '[ngx-markdown When using the [katex] attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\r\nexport const errorSrcWithoutHttpClient = '[ngx-markdown] When using the [src] attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\r\n// tslint:enable:max-line-length\r\n\r\n@Injectable()\r\nexport class MarkdownService {\r\n\r\n  private _options: MarkedOptions;\r\n  get options(): MarkedOptions { return this._options; }\r\n  set options(value: MarkedOptions) {\r\n    this._options = Object.assign({},\r\n      { renderer: new MarkedRenderer() },\r\n      this._options,\r\n      value,\r\n    );\r\n  }\r\n\r\n  get renderer(): MarkedRenderer { return this.options.renderer; }\r\n  set renderer(value: MarkedRenderer) {\r\n    this.options.renderer = value;\r\n  }\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platform: Object,\r\n    @Optional() private http: HttpClient,\r\n    private domSanitizer: DomSanitizer,\r\n    options: MarkedOptions,\r\n  ) {\r\n    this.options = options;\r\n  }\r\n\r\n  compile(markdown: string, decodeHtml = false, markedOptions = this.options): string {\r\n    let precompiled = this.trimIndentation(markdown);\r\n    precompiled = decodeHtml ? this.decodeHtml(precompiled) : precompiled;\r\n    const compiled = marked.parse(precompiled, markedOptions);\r\n    return markedOptions.sanitize && !markedOptions.sanitizer\r\n      ? this.domSanitizer.sanitize(SecurityContext.HTML, compiled)\r\n      : compiled;\r\n  }\r\n\r\n  getSource(src: string): Observable<string> {\r\n    if (!this.http) {\r\n      throw new Error(errorSrcWithoutHttpClient);\r\n    }\r\n    return this.http\r\n      .get(src, { responseType: 'text' })\r\n      .pipe(map(markdown => this.handleExtension(src, markdown)));\r\n  }\r\n\r\n  highlight(element?: Element | Document) {\r\n    if (isPlatformBrowser(this.platform) && typeof Prism !== 'undefined') {\r\n      if (!element) {\r\n        element = document;\r\n      }\r\n      const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\r\n      Array.prototype.forEach.call(noLanguageElements, (x: Element) => x.classList.add('language-none'));\r\n      Prism.highlightAllUnder(element);\r\n    }\r\n  }\r\n\r\n  renderKatex(html: string, options?: KatexOptions): string {\r\n    if (typeof katex === 'undefined' || typeof katex.renderToString === 'undefined') {\r\n      throw new Error(errorKatexNotLoaded);\r\n    }\r\n    return html.replace(/\\$([^\\s][^$]*?[^\\s])\\$/gm, (_, tex) => katex.renderToString(tex, options));\r\n  }\r\n\r\n  private decodeHtml(html: string): string {\r\n    if (isPlatformBrowser(this.platform)) {\r\n      const textarea = document.createElement('textarea');\r\n      textarea.innerHTML = html;\r\n      return textarea.value;\r\n    }\r\n    return html;\r\n  }\r\n\r\n  private handleExtension(src: string, markdown: string): string {\r\n    const extension = src\r\n      ? src.split('?')[0].split('.').splice(-1).join()\r\n      : null;\r\n    return extension !== 'md'\r\n      ? '```' + extension + '\\n' + markdown + '\\n```'\r\n      : markdown;\r\n  }\r\n\r\n  private trimIndentation(markdown: string): string {\r\n    if (!markdown) {\r\n      return '';\r\n    }\r\n    let indentStart: number;\r\n    return markdown\r\n      .split('\\n')\r\n      .map(line => {\r\n        let lineIdentStart = indentStart;\r\n        if (line.length > 0) {\r\n          lineIdentStart = isNaN(lineIdentStart)\r\n            ? line.search(/\\S|$/)\r\n            : Math.min(line.search(/\\S|$/), lineIdentStart);\r\n        }\r\n        if (isNaN(indentStart)) {\r\n          indentStart = lineIdentStart;\r\n        }\r\n        return !!lineIdentStart\r\n          ? line.substring(lineIdentStart)\r\n          : line;\r\n      }).join('\\n');\r\n  }\r\n}\r\n","export enum PrismPlugin {\r\n  LineHighlight = 'line-highlight',\r\n  LineNumbers = 'line-numbers',\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\n\r\nimport { KatexOptions } from './katex-options';\r\nimport { MarkdownService } from './markdown.service';\r\nimport { PrismPlugin } from './prism-plugin';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'markdown, [markdown]',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class MarkdownComponent implements OnChanges, AfterViewInit {\r\n  @Input() data: string;\r\n  @Input() src: string;\r\n\r\n  // Plugin - katex\r\n  @Input()\r\n  get katex(): boolean { return this._katex; }\r\n  set katex(value: boolean) { this._katex = this.coerceBooleanProperty(value); }\r\n  @Input() katexOptions: KatexOptions;\r\n\r\n  // Plugin - lineNumbers\r\n  @Input()\r\n  get lineNumbers(): boolean { return this._lineNumbers; }\r\n  set lineNumbers(value: boolean) { this._lineNumbers = this.coerceBooleanProperty(value); }\r\n  @Input() start: number;\r\n\r\n  // Plugin - lineHighlight\r\n  @Input()\r\n  get lineHighlight(): boolean { return this._lineHighlight; }\r\n  set lineHighlight(value: boolean) { this._lineHighlight = this.coerceBooleanProperty(value); }\r\n  @Input() line: string | string[];\r\n  @Input() lineOffset: number;\r\n\r\n  @Output() error = new EventEmitter<string>();\r\n  @Output() load = new EventEmitter<string>();\r\n  @Output() ready = new EventEmitter<void>();\r\n\r\n  private _katex = false;\r\n  private _lineHighlight = false;\r\n  private _lineNumbers = false;\r\n\r\n  constructor(\r\n    public element: ElementRef<HTMLElement>,\r\n    public markdownService: MarkdownService,\r\n  ) { }\r\n\r\n  ngOnChanges() {\r\n    if (this.data != null) {\r\n      this.handleData();\r\n      return;\r\n    }\r\n    if (this.src != null) {\r\n      this.handleSrc();\r\n      return;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.data && !this.src) {\r\n      this.handleTransclusion();\r\n    }\r\n  }\r\n\r\n  render(markdown: string, decodeHtml = false) {\r\n    let compiled = this.markdownService.compile(markdown, decodeHtml);\r\n    compiled = this.katex ? this.markdownService.renderKatex(compiled, this.katexOptions) : compiled;\r\n    this.element.nativeElement.innerHTML = compiled;\r\n    this.handlePlugins();\r\n    this.markdownService.highlight(this.element.nativeElement);\r\n    this.ready.emit();\r\n  }\r\n\r\n  private coerceBooleanProperty(value: boolean): boolean {\r\n    return value != null && `${value}` !== 'false';\r\n  }\r\n\r\n  private handleData() {\r\n    this.render(this.data);\r\n  }\r\n\r\n  private handleSrc() {\r\n    this.markdownService\r\n      .getSource(this.src)\r\n      .subscribe(\r\n        markdown => {\r\n          this.render(markdown);\r\n          this.load.emit(markdown);\r\n        },\r\n        error => this.error.emit(error),\r\n      );\r\n  }\r\n\r\n  private handleTransclusion() {\r\n    this.render(this.element.nativeElement.innerHTML, true);\r\n  }\r\n\r\n  private handlePlugins() {\r\n    if (this.lineHighlight) {\r\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineHighlight);\r\n      this.setPluginOptions(this.element.nativeElement, { dataLine: this.line, dataLineOffset: this.lineOffset });\r\n    }\r\n    if (this.lineNumbers) {\r\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\r\n      this.setPluginOptions(this.element.nativeElement, { dataStart: this.start });\r\n    }\r\n  }\r\n\r\n  private setPluginClass(element: HTMLElement, plugin: string | string[]) {\r\n    const preElements = element.querySelectorAll('pre');\r\n    for (let i = 0; i < preElements.length; i++) {\r\n      const classes = plugin instanceof Array ? plugin : [plugin];\r\n      preElements.item(i).classList.add(...classes);\r\n    }\r\n  }\r\n\r\n  private setPluginOptions(element: HTMLElement, options: object) {\r\n    const preElements = element.querySelectorAll('pre');\r\n    for (let i = 0; i < preElements.length; i++) {\r\n      Object.keys(options).forEach(option => {\r\n        const attributeValue = options[option];\r\n        if (!!attributeValue) {\r\n          const attributeName = this.toLispCase(option);\r\n          preElements.item(i).setAttribute(attributeName, attributeValue.toString());\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private toLispCase(value: string) {\r\n    const upperChars = value.match(/([A-Z])/g);\r\n    if (!upperChars) {\r\n      return value;\r\n    }\r\n    let str = value.toString();\r\n    for (let i = 0, n = upperChars.length; i < n; i++) {\r\n      str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\r\n    }\r\n    if (str.slice(0, 1) === '-') {\r\n      str = str.slice(1);\r\n    }\r\n    return str;\r\n  }\r\n}\r\n","import { ElementRef, NgZone, Pipe, PipeTransform } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { MarkdownService } from './markdown.service';\r\n\r\n@Pipe({\r\n  name: 'markdown',\r\n})\r\nexport class MarkdownPipe implements PipeTransform {\r\n\r\n  constructor(\r\n    private elementRef: ElementRef<HTMLElement>,\r\n    private markdownService: MarkdownService,\r\n    private zone: NgZone,\r\n  ) { }\r\n\r\n  transform(value: string): string {\r\n    if (value == null) {\r\n      return '';\r\n    }\r\n\r\n    if (typeof value !== 'string') {\r\n      console.error(`MarkdownPipe has been invoked with an invalid value type [${value}]`);\r\n      return value;\r\n    }\r\n\r\n    const markdown = this.markdownService.compile(value);\r\n\r\n    this.zone.onStable\r\n      .pipe(first())\r\n      .subscribe(() => this.markdownService.highlight(this.elementRef.nativeElement));\r\n\r\n    return markdown;\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\r\n\r\nimport { LanguagePipe } from './language.pipe';\r\nimport { MarkdownComponent } from './markdown.component';\r\nimport { MarkdownPipe } from './markdown.pipe';\r\nimport { MarkdownService } from './markdown.service';\r\nimport { MarkedOptions } from './marked-options';\r\n\r\n// having a dependency on `HttpClientModule` within a library\r\n// breaks all the interceptors from the app consuming the library\r\n// here, we explicitely ask the user to pass a provider with\r\n// their own instance of `HttpClientModule`\r\nexport interface MarkdownModuleConfig {\r\n  loader?: Provider;\r\n  markedOptions?: Provider;\r\n}\r\n\r\nexport const initialMarkedOptions: Provider = {\r\n  provide: MarkedOptions,\r\n  useValue: {\r\n    gfm: true,\r\n    tables: true,\r\n    breaks: false,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n  },\r\n};\r\n\r\nconst sharedDeclarations = [\r\n  LanguagePipe,\r\n  MarkdownComponent,\r\n  MarkdownPipe,\r\n];\r\n\r\n@NgModule({\r\n  exports: sharedDeclarations,\r\n  declarations: sharedDeclarations,\r\n})\r\nexport class MarkdownModule {\r\n  static forRoot(markdownModuleConfig?: MarkdownModuleConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: MarkdownModule,\r\n      providers: [\r\n        MarkdownService,\r\n        markdownModuleConfig && markdownModuleConfig.loader || [],\r\n        markdownModuleConfig && markdownModuleConfig.markedOptions || initialMarkedOptions,\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forChild(): ModuleWithProviders {\r\n    return {\r\n      ngModule: MarkdownModule,\r\n    };\r\n  }\r\n}\r\n"]}