{"version":3,"sources":["../addon-editor/extensions/details/details-content.extension.ts","../addon-editor/extensions/details/details.extension.ts","../addon-editor/extensions/details/index.ts","../addon-editor/extensions/details/summary.extension.ts"],"names":[],"mappings":"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","file":"taiga-ui-addon-editor-extensions-details.js","sourcesContent":["import {mergeAttributes, Node} from '@tiptap/core';\n\nexport interface TuiDetailContentOptions {\n    readonly HTMLAttributes: Record<string, unknown>;\n}\n\nexport const TuiDetailsContent = Node.create<TuiDetailContentOptions>({\n    name: `detailsContent`,\n\n    content: `block+`,\n\n    group: `block`,\n\n    allowGapCursor: true,\n\n    parseHTML() {\n        return [\n            {\n                tag: `div[data-type=\"details-content\"]`,\n            },\n        ];\n    },\n\n    renderHTML({HTMLAttributes}) {\n        return [\n            `div`,\n            mergeAttributes(this.options.HTMLAttributes, HTMLAttributes, {\n                'data-type': `details-content`,\n            }),\n            0,\n        ];\n    },\n});\n","import {tuiDeleteNode, tuiGetSelectedContent} from '@taiga-ui/addon-editor/utils';\nimport {mergeAttributes, Node, RawCommands} from '@tiptap/core';\n\nexport interface TuiDetailsOptions {\n    readonly HTMLAttributes: Record<string, unknown>;\n}\n\ndeclare module '@tiptap/core' {\n    interface Commands<ReturnType> {\n        details: {\n            setDetails: () => ReturnType;\n            removeDetails: () => ReturnType;\n        };\n    }\n}\n\nexport const TuiDetails = Node.create<TuiDetailsOptions>({\n    name: `details`,\n\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n\n    addAttributes() {\n        return {\n            opened: {\n                default: true,\n                keepOnSplit: false,\n                parseHTML: element => element.getAttribute(`data-opened`) === `true`,\n                renderHTML: attributes => ({\n                    'data-opened': attributes.opened,\n                }),\n            },\n        };\n    },\n\n    content: `summary detailsContent`,\n\n    group: `block`,\n\n    allowGapCursor: true,\n    isolating: true,\n\n    parseHTML() {\n        return [\n            {\n                tag: `details`,\n            },\n        ];\n    },\n\n    renderHTML({HTMLAttributes}) {\n        return [\n            `div`,\n            {class: `details-wrapper details-wrapper_rendered`},\n            [`details`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0],\n            [`button`, {class: `details-arrow`}],\n        ];\n    },\n\n    addNodeView() {\n        return ({node}) => {\n            const wrapper = document.createElement(`div`);\n            const details = document.createElement(`details`);\n            const button = document.createElement(`button`);\n\n            wrapper.className = `details-wrapper`;\n            button.className = `details-arrow`;\n\n            details.open = node.attrs.opened;\n\n            button.addEventListener(`click`, () => {\n                details.open = !details.open;\n                (node.attrs as unknown as Record<string, unknown>).opened = details.open;\n            });\n\n            wrapper.append(details, button);\n\n            return {\n                dom: wrapper,\n                contentDOM: details,\n            };\n        };\n    },\n\n    addCommands(): Partial<RawCommands> {\n        return {\n            setDetails:\n                () =>\n                ({commands, state}) => {\n                    const content = tuiGetSelectedContent(state);\n\n                    return commands.insertContent(\n                        `<details data-opened=\"true\"><summary><p></p></summary><div data-type=\"details-content\"><p>${content}</p></div></details><p></p>`,\n                    );\n                },\n            removeDetails:\n                () =>\n                ({state, dispatch}) =>\n                    tuiDeleteNode(state, dispatch, this.name),\n        };\n    },\n});\n","export * from './details.extension';\nexport * from './details-content.extension';\nexport * from './summary.extension';\n","import {mergeAttributes, Node} from '@tiptap/core';\n\nexport interface TuiSummaryOptions {\n    readonly HTMLAttributes: Record<string, unknown>;\n}\n\nexport const TuiSummary = Node.create<TuiSummaryOptions>({\n    name: `summary`,\n\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n\n    content: `paragraph`,\n\n    group: `block`,\n\n    parseHTML() {\n        return [\n            {\n                tag: `summary`,\n            },\n        ];\n    },\n\n    renderHTML({HTMLAttributes}) {\n        return [\n            `summary`,\n            mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n            0,\n        ];\n    },\n});\n"],"sourceRoot":"webpack:///"}