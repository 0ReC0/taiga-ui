"use strict";(self.webpackChunk_taiga_ui_components=self.webpackChunk_taiga_ui_components||[]).push([[69327],{69327:n=>{n.exports="import {Component, Inject, Injector, ViewChild} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {\n    TUI_ATTACH_FILES_LOADER,\n    TUI_ATTACH_FILES_OPTIONS,\n    TUI_EDITOR_EXTENSIONS,\n    TuiEditorAttachedFile,\n    TuiEditorComponent,\n    TuiEditorTool,\n} from '@taiga-ui/addon-editor';\nimport {tuiPure, tuiTypedFromEvent} from '@taiga-ui/cdk';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Component({\n    selector: 'tui-editor-embed-example-3',\n    templateUrl: './index.html',\n    providers: [\n        {\n            provide: TUI_EDITOR_EXTENSIONS,\n            deps: [Injector],\n            useFactory: (_injector: Injector) => [\n                import('@taiga-ui/addon-editor/extensions/starter-kit').then(\n                    ({StarterKit}) => StarterKit,\n                ),\n                import('@tiptap/extension-text-style').then(({TextStyle}) => TextStyle),\n                import('@taiga-ui/addon-editor/extensions/link').then(\n                    ({TuiLink}) => TuiLink,\n                ),\n                import('@taiga-ui/addon-editor/extensions/jump-anchor').then(\n                    ({TuiJumpAnchor}) => TuiJumpAnchor,\n                ),\n                import('@taiga-ui/addon-editor/extensions/file-link').then(\n                    ({TuiFileLink}) => TuiFileLink,\n                ),\n                import('@taiga-ui/addon-editor/extensions/media').then(\n                    ({TuiVideo}) => TuiVideo,\n                ),\n                import('@taiga-ui/addon-editor/extensions/media').then(\n                    ({TuiAudio}) => TuiAudio,\n                ),\n                import('@taiga-ui/addon-editor/extensions/media').then(\n                    ({TuiSource}) => TuiSource,\n                ),\n            ],\n        },\n        {\n            provide: TUI_ATTACH_FILES_LOADER,\n            deps: [],\n            useFactory:\n                () =>\n                ([file]: File[]): Observable<\n                    Array<TuiEditorAttachedFile<{type: string}>>\n                > => {\n                    const fileReader = new FileReader();\n\n                    // For example, instead of uploading to a file server,\n                    // we convert the result immediately into content to base64\n                    fileReader.readAsDataURL(file);\n\n                    return tuiTypedFromEvent(fileReader, 'load').pipe(\n                        map(() => [\n                            {\n                                name: file.name,\n\n                                /* base64 or link to the file on your server */\n                                link: String(fileReader.result),\n\n                                attrs: {\n                                    type: file.type,\n                                },\n                            },\n                        ]),\n                    );\n                },\n        },\n        {\n            provide: TUI_ATTACH_FILES_OPTIONS,\n            useValue: {\n                accept: 'video/mp4,video/x-m4v,video/*,audio/x-m4a,audio/*',\n                multiple: false,\n            },\n        },\n    ],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiEditorEmbedExample3 {\n    @ViewChild(TuiEditorComponent)\n    private readonly wysiwyg?: TuiEditorComponent;\n\n    readonly builtInTools = [\n        TuiEditorTool.Undo,\n        TuiEditorTool.Link,\n        TuiEditorTool.Attach,\n    ];\n\n    readonly control = new FormControl(\n        `\n            <p>Here is video: </p>\n\n            <video controls=\"controls\" width=\"100%\">\n                <source src=\"https://www.w3schools.com/html/mov_bbb.mp4\" type=\"video/mp4\">\n            </video>\n\n            <p>Here is audio: </p>\n            <audio controls style=\"width: 100%\">\n              <source src=\"https://www.w3docs.com/build/audios/audio.mp3\" type=\"audio/mp3\">\n            </audio>\n\n            <p></p>\n            `,\n        Validators.required,\n    );\n\n    constructor(@Inject(DomSanitizer) private readonly sanitizer: DomSanitizer) {}\n\n    @tuiPure\n    safe(content: string): SafeHtml {\n        return this.sanitizer.bypassSecurityTrustHtml(content);\n    }\n\n    attach([file]: Array<TuiEditorAttachedFile<{type: string}>>): void {\n        const tag = `${file.attrs?.type ?? ''}`.split('/')[0];\n\n        this.wysiwyg?.editor\n            ?.getOriginTiptapEditor()\n            .commands.insertContent(\n                `<${tag} controls width=\"100%\"><source src=\"${file.link}\" type=\"${file.attrs?.type}\"></${tag}><p><a href=\"${file.link}\" download=\"${file.name}\">Download ${file.name}</a></p>`,\n            );\n    }\n}\n"}}]);