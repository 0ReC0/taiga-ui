(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@ng-web-apis/common', ['exports', 'rxjs', 'rxjs/operators', '@angular/common', '@angular/core'], factory) :
    (factory((global['ng-web-apis'] = global['ng-web-apis'] || {}, global['ng-web-apis'].common = {}),global.rxjs,global.rxjs.operators,global.ng.common,global.ng.core));
}(this, (function (exports,rxjs,operators,common,core) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var WINDOW = new core.InjectionToken('An abstraction over global window object', {
        factory: function () {
            var defaultView = core.inject(common.DOCUMENT).defaultView;
            if (!defaultView) {
                throw new Error('Window is not available');
            }
            return defaultView;
        },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var PERFORMANCE = new core.InjectionToken('An abstraction over window.performance object', {
        factory: function () { return core.inject(WINDOW).performance; },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    // interval has bug: https://github.com/ReactiveX/rxjs/issues/4972, scheduled only present in rxjs 6.5+
    /** @type {?} */
    var ANIMATION_FRAME = new core.InjectionToken('Shared Observable based on `window.requestAnimationFrame`', {
        factory: function () {
            /** @type {?} */
            var performanceRef = core.inject(PERFORMANCE);
            return rxjs.of(0, rxjs.animationFrameScheduler).pipe(operators.repeat(), operators.map(function () { return performanceRef.now(); }), operators.share());
        },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var CSS = new core.InjectionToken('An abstraction over window.CSS object', {
        factory: function () {
            return core.inject(WINDOW).CSS || {
                escape: function (v) { return v; },
                supports: function () { return false; },
            };
        },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var LOCAL_STORAGE = new core.InjectionToken('An abstraction over window.localStorage object', {
        factory: function () { return core.inject(WINDOW).localStorage; },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var LOCATION = new core.InjectionToken('An abstraction over window.location object', {
        factory: function () { return core.inject(WINDOW).location; },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var NAVIGATOR = new core.InjectionToken('An abstraction over window.navigator object', {
        factory: function () { return core.inject(WINDOW).navigator; },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var USER_AGENT = new core.InjectionToken('An abstraction over window.navigator.userAgent object', {
        factory: function () { return core.inject(NAVIGATOR).userAgent; },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.ANIMATION_FRAME = ANIMATION_FRAME;
    exports.CSS = CSS;
    exports.LOCAL_STORAGE = LOCAL_STORAGE;
    exports.LOCATION = LOCATION;
    exports.NAVIGATOR = NAVIGATOR;
    exports.PERFORMANCE = PERFORMANCE;
    exports.USER_AGENT = USER_AGENT;
    exports.WINDOW = WINDOW;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ng-web-apis-common.umd.js.map