{"version":3,"sources":["ng://@ng-web-apis/common/tokens/window.ts","ng://@ng-web-apis/common/tokens/performance.ts","ng://@ng-web-apis/common/tokens/animation-frame.ts","ng://@ng-web-apis/common/tokens/css.ts","ng://@ng-web-apis/common/tokens/local-storage.ts","ng://@ng-web-apis/common/tokens/location.ts","ng://@ng-web-apis/common/tokens/navigator.ts","ng://@ng-web-apis/common/tokens/user-agent.ts"],"names":["WINDOW","InjectionToken","factory","defaultView","core","inject","common","DOCUMENT","Error","PERFORMANCE","performance","ANIMATION_FRAME","performanceRef","of","animationFrameScheduler","pipe","repeat","map","now","share","CSS","escape","v","supports","LOCAL_STORAGE","localStorage","LOCATION","location","NAVIGATOR","navigator","USER_AGENT","userAgent"],"mappings":"odAGA,IAAaA,EAAS,IAAIC,EAAAA,eACtB,2CACA,CACIC,QAAS,WACE,IAAAC,EAAAC,EAAAC,OAAAC,EAAAC,UAAAJ,YAEP,IAAKA,EACD,MAAM,IAAIK,MAAM,2BAGpB,OAAOL,KCVNM,EAAc,IAAIR,EAAAA,eAC3B,gDACA,CACIC,QAAS,WAAM,OAAAG,EAAAA,OAAOL,GAAQU,eCAzBC,EAAkB,IAAIV,EAAAA,eAC/B,4DACA,CACIC,QAAS,eACCU,EAAiBP,EAAAA,OAAOI,GAE9B,OAAOI,EAAAA,GAAG,EAAGC,EAAAA,yBAAyBC,KAClCC,EAAAA,SACAC,EAAAA,IAAI,WAAM,OAAAL,EAAeM,QACzBC,EAAAA,YCNHC,EAAM,IAAInB,EAAAA,eAAoB,wCAAyC,CAChFC,QAAS,WACL,OAAAG,EAAAA,OAAOL,GAAQoB,KAAO,CAClBC,OAAQ,SAAAC,GAAK,OAAAA,GACbC,SAAU,WAAM,OAAA,OCVfC,EAAgB,IAAIvB,EAAAA,eAC7B,iDACA,CACIC,QAAS,WAAM,OAAAG,EAAAA,OAAOL,GAAQyB,gBCHzBC,EAAW,IAAIzB,EAAAA,eACxB,6CACA,CACIC,QAAS,WAAM,OAAAG,EAAAA,OAAOL,GAAQ2B,YCHzBC,EAAY,IAAI3B,EAAAA,eACzB,8CACA,CACIC,QAAS,WAAM,OAAAG,EAAAA,OAAOL,GAAQ6B,aCHzBC,EAAa,IAAI7B,EAAAA,eAC1B,wDACA,CACIC,QAAS,WAAM,OAAAG,EAAAA,OAAOuB,GAAWG","sourcesContent":["import {DOCUMENT} from '@angular/common';\r\nimport {inject, InjectionToken} from '@angular/core';\r\n\r\nexport const WINDOW = new InjectionToken<Window>(\r\n    'An abstraction over global window object',\r\n    {\r\n        factory: () => {\r\n            const {defaultView} = inject(DOCUMENT);\r\n\r\n            if (!defaultView) {\r\n                throw new Error('Window is not available');\r\n            }\r\n\r\n            return defaultView;\r\n        },\r\n    },\r\n);\r\n","import {inject, InjectionToken} from '@angular/core';\r\nimport {WINDOW} from './window';\r\n\r\nexport const PERFORMANCE = new InjectionToken<Performance>(\r\n    'An abstraction over window.performance object',\r\n    {\r\n        factory: () => inject(WINDOW).performance,\r\n    },\r\n);\r\n","import {inject, InjectionToken} from '@angular/core';\r\nimport {animationFrameScheduler, Observable, of} from 'rxjs';\r\nimport {map, repeat, share} from 'rxjs/operators';\r\nimport {PERFORMANCE} from './performance';\r\n\r\n// interval has bug: https://github.com/ReactiveX/rxjs/issues/4972, scheduled only present in rxjs 6.5+\r\nexport const ANIMATION_FRAME = new InjectionToken<Observable<DOMHighResTimeStamp>>(\r\n    'Shared Observable based on `window.requestAnimationFrame`',\r\n    {\r\n        factory: () => {\r\n            const performanceRef = inject(PERFORMANCE);\r\n\r\n            return of(0, animationFrameScheduler).pipe(\r\n                repeat(),\r\n                map(() => performanceRef.now()),\r\n                share(),\r\n            );\r\n        },\r\n    },\r\n);\r\n","import {inject, InjectionToken} from '@angular/core';\r\nimport {WINDOW} from './window';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        CSS: CSS;\r\n    }\r\n}\r\n\r\nexport const CSS = new InjectionToken<CSS>('An abstraction over window.CSS object', {\r\n    factory: () =>\r\n        inject(WINDOW).CSS || {\r\n            escape: v => v,\r\n            supports: () => false,\r\n        },\r\n});\r\n","import {inject, InjectionToken} from '@angular/core';\r\nimport {WINDOW} from './window';\r\n\r\nexport const LOCAL_STORAGE = new InjectionToken<Storage>(\r\n    'An abstraction over window.localStorage object',\r\n    {\r\n        factory: () => inject(WINDOW).localStorage,\r\n    },\r\n);\r\n","import {inject, InjectionToken} from '@angular/core';\r\nimport {WINDOW} from './window';\r\n\r\nexport const LOCATION = new InjectionToken<Location>(\r\n    'An abstraction over window.location object',\r\n    {\r\n        factory: () => inject(WINDOW).location,\r\n    },\r\n);\r\n","import {inject, InjectionToken} from '@angular/core';\r\nimport {WINDOW} from './window';\r\n\r\nexport const NAVIGATOR = new InjectionToken<Navigator>(\r\n    'An abstraction over window.navigator object',\r\n    {\r\n        factory: () => inject(WINDOW).navigator,\r\n    },\r\n);\r\n","import {inject, InjectionToken} from '@angular/core';\r\nimport {NAVIGATOR} from './navigator';\r\n\r\nexport const USER_AGENT = new InjectionToken<string>(\r\n    'An abstraction over window.navigator.userAgent object',\r\n    {\r\n        factory: () => inject(NAVIGATOR).userAgent,\r\n    },\r\n);\r\n"]}