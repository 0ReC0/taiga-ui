import { animationFrameScheduler, of } from 'rxjs';
import { map, repeat, share } from 'rxjs/operators';
import { DOCUMENT } from '@angular/common';
import { inject, InjectionToken } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const WINDOW = new InjectionToken('An abstraction over global window object', {
    factory: () => {
        const { defaultView } = inject(DOCUMENT);
        if (!defaultView) {
            throw new Error('Window is not available');
        }
        return defaultView;
    },
});

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const PERFORMANCE = new InjectionToken('An abstraction over window.performance object', {
    factory: () => inject(WINDOW).performance,
});

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// interval has bug: https://github.com/ReactiveX/rxjs/issues/4972, scheduled only present in rxjs 6.5+
/** @type {?} */
const ANIMATION_FRAME = new InjectionToken('Shared Observable based on `window.requestAnimationFrame`', {
    factory: () => {
        /** @type {?} */
        const performanceRef = inject(PERFORMANCE);
        return of(0, animationFrameScheduler).pipe(repeat(), map(() => performanceRef.now()), share());
    },
});

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const CSS = new InjectionToken('An abstraction over window.CSS object', {
    factory: () => inject(WINDOW).CSS || {
        escape: v => v,
        supports: () => false,
    },
});

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const LOCAL_STORAGE = new InjectionToken('An abstraction over window.localStorage object', {
    factory: () => inject(WINDOW).localStorage,
});

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const LOCATION = new InjectionToken('An abstraction over window.location object', {
    factory: () => inject(WINDOW).location,
});

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const NAVIGATOR = new InjectionToken('An abstraction over window.navigator object', {
    factory: () => inject(WINDOW).navigator,
});

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const USER_AGENT = new InjectionToken('An abstraction over window.navigator.userAgent object', {
    factory: () => inject(NAVIGATOR).userAgent,
});

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { ANIMATION_FRAME, CSS, LOCAL_STORAGE, LOCATION, NAVIGATOR, PERFORMANCE, USER_AGENT, WINDOW };

//# sourceMappingURL=ng-web-apis-common.js.map