{"version":3,"sources":["./src/modules/tables/table/examples/1/index.ts","./src/modules/tables/table/examples/1/index.html","./src/modules/tables/table/examples/2/index.ts","./src/modules/tables/table/examples/2/index.html","./src/modules/tables/table/examples/3/index.ts","./src/modules/tables/table/examples/3/index.html","./src/modules/tables/table/examples/4/index.ts","./src/modules/tables/table/examples/4/index.html","./src/modules/tables/table/examples/5/index.ts","./src/modules/tables/table/examples/5/index.html","./src/modules/tables/table/examples/6/index.ts","./src/modules/tables/table/examples/6/index.html","./src/modules/tables/table/table.component.ts","./src/modules/tables/table/table.template.html","./src/modules/tables/table/table.module.ts"],"names":[],"mappings":"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","file":"tables-table-table-module.js","sourcesContent":["import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-table-example-1`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTableExample1 {\n    readonly data = [\n        {\n            name: `Alex Inkin`,\n            balance: 1323525,\n        },\n        {\n            name: `Roman Sedov`,\n            balance: 423242,\n        },\n    ] as const;\n\n    readonly columns = Object.keys(this.data[0]);\n}\n","<table\n    tuiTable\n    class=\"table\"\n    [columns]=\"columns\"\n>\n    <thead>\n        <tr tuiThGroup>\n            <th\n                tuiTh\n                [resizable]=\"true\"\n            >\n                Name\n            </th>\n            <th tuiTh>Balance</th>\n        </tr>\n    </thead>\n    <tbody\n        tuiTbody\n        [data]=\"data\"\n    >\n        <tr\n            *tuiRow=\"let item of data\"\n            tuiTr\n        >\n            <td\n                *tuiCell=\"'balance'\"\n                tuiTd\n            >\n                {{ item.balance | tuiFormatNumber }}\n            </td>\n        </tr>\n    </tbody>\n</table>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\ninterface User {\n    readonly name: string;\n    readonly email: string;\n    readonly status: 'alive' | 'deceased';\n    readonly tags: readonly string[];\n}\n\n@Component({\n    selector: `tui-table-example-2`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTableExample2 {\n    readonly columns = [`name`, `email`, `status`, `tags`, `actions`];\n\n    users: readonly User[] = [\n        {\n            name: `Michael Palin`,\n            email: `m.palin@montypython.com`,\n            status: `alive`,\n            tags: [`Funny`],\n        },\n        {\n            name: `Eric Idle`,\n            email: `e.idle@montypython.com`,\n            status: `alive`,\n            tags: [`Funny`, `Music`],\n        },\n        {\n            name: `John Cleese`,\n            email: `j.cleese@montypython.com`,\n            status: `alive`,\n            tags: [`Funny`, `Tall`, `Actor`],\n        },\n        {\n            name: `Terry Jones`,\n            email: ``,\n            status: `deceased`,\n            tags: [`Funny`, `Director`],\n        },\n        {\n            name: `Terry Gilliam`,\n            email: `t.gilliam@montypython.com`,\n            status: `alive`,\n            tags: [`Funny`, `Director`],\n        },\n        {\n            name: `Graham Chapman`,\n            email: ``,\n            status: `deceased`,\n            tags: [`Funny`, `King Arthur`],\n        },\n    ];\n\n    remove(item: User): void {\n        this.users = this.users.filter(user => user !== item);\n    }\n}\n","<table\n    tuiTable\n    [columns]=\"columns\"\n>\n    <thead>\n        <tr tuiThGroup>\n            <th\n                *tuiHead=\"'name'\"\n                tuiTh\n            >\n                Name\n            </th>\n            <th\n                *tuiHead=\"'email'\"\n                tuiTh\n            >\n                E-mail\n            </th>\n            <th\n                *tuiHead=\"'status'\"\n                tuiTh\n            >\n                Status\n            </th>\n            <th\n                *tuiHead=\"'tags'\"\n                tuiTh\n                [sorter]=\"null\"\n            >\n                Tags\n            </th>\n            <th\n                *tuiHead=\"'actions'\"\n                tuiTh\n                [sorter]=\"null\"\n            ></th>\n        </tr>\n    </thead>\n    <tbody\n        tuiTbody\n        [data]=\"users\"\n    >\n        <tr\n            *tuiRow=\"let item of users; let index = index\"\n            tuiTr\n        >\n            <td\n                *tuiCell=\"'name'\"\n                tuiTd\n            >\n                {{ index + 1 }}. {{ item.name }}\n            </td>\n            <td\n                *tuiCell=\"'email'\"\n                tuiTd\n            >\n                <a\n                    *ngIf=\"item.email\"\n                    tuiLink\n                    [href]=\"'mailto:' + item.email\"\n                >\n                    {{ item.email }}\n                </a>\n            </td>\n            <td\n                *tuiCell=\"'status'\"\n                tuiTd\n            >\n                <div [class]=\"item.status\">{{ item.status }}</div>\n            </td>\n            <td\n                *tuiCell=\"'tags'\"\n                tuiTd\n            >\n                <tui-tag\n                    *ngFor=\"let tag of item.tags\"\n                    class=\"tui-space_right-1\"\n                    [value]=\"tag\"\n                    [autoColor]=\"true\"\n                ></tui-tag>\n            </td>\n            <td\n                *tuiCell=\"'actions'\"\n                tuiTd\n            >\n                <button\n                    tuiIconButton\n                    appearance=\"flat\"\n                    size=\"s\"\n                    icon=\"tuiIconTrash\"\n                    title=\"Remove\"\n                    shape=\"rounded\"\n                    class=\"remove\"\n                    (click)=\"remove(item)\"\n                ></button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n","import {Component} from '@angular/core';\nimport {ValidatorFn} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {defaultSort, TuiComparator} from '@taiga-ui/addon-table';\nimport {TuiDay} from '@taiga-ui/cdk';\n\ninterface Item {\n    readonly name: string;\n    readonly price: number;\n    readonly quantity: number;\n    readonly unit: string;\n    readonly date: TuiDay;\n}\n\n@Component({\n    selector: `tui-table-example-3`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTableExample3 {\n    readonly options = {updateOn: `blur`} as const;\n\n    readonly units = [`items`, `kg`, `m`];\n\n    pythons: readonly Item[] = [\n        {\n            name: `Holy Grail`,\n            price: 999999,\n            quantity: 1,\n            unit: this.units[0],\n            date: TuiDay.currentLocal(),\n        },\n        {\n            name: `Foot`,\n            price: 29.95,\n            quantity: 5,\n            unit: this.units[2],\n            date: TuiDay.currentLocal().append({day: -42}),\n        },\n        {\n            name: `Shed`,\n            price: 499,\n            quantity: 2,\n            unit: this.units[0],\n            date: TuiDay.currentLocal().append({day: -237}),\n        },\n    ];\n\n    starwars: readonly Item[] = [\n        {\n            name: `Lightsaber`,\n            price: 4999,\n            quantity: 3,\n            unit: this.units[0],\n            date: TuiDay.currentLocal(),\n        },\n        {\n            name: `Spaceship`,\n            price: 19999,\n            quantity: 1,\n            unit: this.units[0],\n            date: TuiDay.currentLocal().append({day: -237}),\n        },\n        {\n            name: `Stormtrooper helmet`,\n            price: 14.95,\n            quantity: 5,\n            unit: this.units[0],\n            date: TuiDay.currentLocal().append({day: -42}),\n        },\n    ];\n\n    readonly columns = [`name`, `price`, `quantity`, `unit`, `total`] as const;\n\n    readonly minPrice: ValidatorFn = ({value}) =>\n        value > 400 ? null : {minPrice: `Price must be above $400`};\n\n    readonly totalSorter: TuiComparator<Item> = (a, b) =>\n        defaultSort(a.price * a.quantity, b.price * b.quantity);\n\n    getTotal({price, quantity}: Item): number {\n        return price * quantity;\n    }\n\n    onValueChange<K extends keyof Item>(\n        value: Item[K],\n        key: K,\n        current: Item,\n        data: readonly Item[],\n    ): void {\n        const updated = {...current, [key]: value};\n\n        this.pythons =\n            data === this.pythons\n                ? this.pythons.map(item => (item === current ? updated : item))\n                : this.pythons;\n\n        this.starwars =\n            data === this.starwars\n                ? this.starwars.map(item => (item === current ? updated : item))\n                : this.starwars;\n    }\n}\n","<tui-scrollbar\n    waIntersectionRoot\n    class=\"scrollbar\"\n    [hidden]=\"true\"\n>\n    <table\n        tuiTable\n        size=\"l\"\n        class=\"table\"\n        [columns]=\"columns\"\n    >\n        <thead tuiThead>\n            <tr tuiThGroup>\n                <th\n                    *tuiHead=\"'name'\"\n                    tuiTh\n                    rowspan=\"2\"\n                    class=\"first\"\n                    [sorter]=\"null\"\n                    [sticky]=\"true\"\n                >\n                    Name\n                </th>\n                <th\n                    *tuiHead=\"'price'\"\n                    tuiTh\n                    rowspan=\"2\"\n                    class=\"number second\"\n                    [sticky]=\"true\"\n                >\n                    Price,&nbsp;$\n                </th>\n                <th\n                    *tuiHead=\"'quantity'\"\n                    tuiTh\n                    colspan=\"2\"\n                    [sorter]=\"null\"\n                >\n                    Purchase\n                </th>\n                <ng-container *tuiHead=\"'unit'\"></ng-container>\n                <th\n                    *tuiHead=\"'date'\"\n                    tuiTh\n                    rowspan=\"2\"\n                >\n                    Date\n                </th>\n                <th\n                    *tuiHead=\"'total'\"\n                    tuiTh\n                    rowspan=\"2\"\n                    class=\"number\"\n                    [sorter]=\"totalSorter\"\n                >\n                    Total\n                </th>\n            </tr>\n            <tr tuiThGroup>\n                <th\n                    *tuiHead=\"'quantity'\"\n                    tuiTh\n                    class=\"number border\"\n                >\n                    Quantity\n                </th>\n                <th\n                    *tuiHead=\"'unit'\"\n                    tuiTh\n                >\n                    Units\n                </th>\n            </tr>\n        </thead>\n\n        <tbody\n            tuiTbody\n            heading=\"Monty Python\"\n            [data]=\"pythons\"\n        >\n            <tr\n                *tuiRow=\"let item of pythons\"\n                tuiTr\n            >\n                <th\n                    *tuiCell=\"'name'\"\n                    tuiTd\n                    [colSpan]=\"item.price > 1000 ? 2 : 0\"\n                >\n                    <tui-text-area\n                        class=\"textarea\"\n                        [expandable]=\"true\"\n                        [ngModel]=\"item.name\"\n                        [ngModelOptions]=\"options\"\n                        (ngModelChange)=\"onValueChange($event, 'name', item, pythons)\"\n                    ></tui-text-area>\n                </th>\n                <ng-container *tuiCell=\"'price'\">\n                    <th\n                        *ngIf=\"item.price <= 1000\"\n                        tuiTd\n                        class=\"second\"\n                    >\n                        <tui-input-number\n                            class=\"number\"\n                            [tuiValidator]=\"minPrice\"\n                            [ngModel]=\"item.price\"\n                            [ngModelOptions]=\"options\"\n                            (ngModelChange)=\"onValueChange($event, 'price', item, pythons)\"\n                        ></tui-input-number>\n                    </th>\n                </ng-container>\n                <td\n                    *tuiCell=\"'quantity'\"\n                    tuiTd\n                >\n                    <tui-input-count\n                        [ngModel]=\"item.quantity\"\n                        [ngModelOptions]=\"options\"\n                        (ngModelChange)=\"onValueChange($event, 'quantity', item, pythons)\"\n                    ></tui-input-count>\n                </td>\n                <td\n                    *tuiCell=\"'unit'\"\n                    tuiTd\n                >\n                    <tui-select\n                        class=\"select\"\n                        [ngModel]=\"item.unit\"\n                        [ngModelOptions]=\"options\"\n                        (ngModelChange)=\"onValueChange($event, 'unit', item, pythons)\"\n                    >\n                        <tui-data-list-wrapper\n                            *tuiDataList\n                            [items]=\"units\"\n                        ></tui-data-list-wrapper>\n                    </tui-select>\n                </td>\n                <td\n                    *tuiCell=\"'date'\"\n                    tuiTd\n                >\n                    <tui-input-date\n                        [ngModel]=\"item.date\"\n                        [ngModelOptions]=\"options\"\n                        (ngModelChange)=\"onValueChange($event, 'date', item, pythons)\"\n                    ></tui-input-date>\n                </td>\n                <td\n                    *tuiCell=\"'total'\"\n                    tuiTd\n                    class=\"number text\"\n                >\n                    {{ getTotal(item) | tuiFormatNumber }}\n                </td>\n            </tr>\n        </tbody>\n\n        <tbody\n            tuiTbody\n            [heading]=\"template\"\n            [data]=\"starwars\"\n        >\n            <tr\n                *tuiRow=\"let item of starwars\"\n                tuiTr\n            >\n                <th\n                    *tuiCell=\"'name'\"\n                    tuiTd\n                >\n                    <tui-text-area\n                        class=\"textarea\"\n                        [expandable]=\"true\"\n                        [ngModel]=\"item.name\"\n                        [ngModelOptions]=\"options\"\n                        (ngModelChange)=\"onValueChange($event, 'name', item, starwars)\"\n                    ></tui-text-area>\n                </th>\n                <th\n                    *tuiCell=\"'price'\"\n                    tuiTd\n                    class=\"second\"\n                >\n                    <tui-input-number\n                        [tuiValidator]=\"minPrice\"\n                        [ngModel]=\"item.price\"\n                        [ngModelOptions]=\"options\"\n                        (ngModelChange)=\"onValueChange($event, 'price', item, starwars)\"\n                    ></tui-input-number>\n                </th>\n                <td\n                    *tuiCell=\"'quantity'\"\n                    tuiTd\n                >\n                    <tui-input-count\n                        [ngModel]=\"item.quantity\"\n                        [ngModelOptions]=\"options\"\n                        (ngModelChange)=\"onValueChange($event, 'quantity', item, starwars)\"\n                    ></tui-input-count>\n                </td>\n                <td\n                    *tuiCell=\"'unit'\"\n                    tuiTd\n                >\n                    <tui-select\n                        class=\"select\"\n                        [ngModel]=\"item.unit\"\n                        [ngModelOptions]=\"options\"\n                        (ngModelChange)=\"onValueChange($event, 'unit', item, starwars)\"\n                    >\n                        <tui-data-list-wrapper\n                            *tuiDataList\n                            [items]=\"units\"\n                        ></tui-data-list-wrapper>\n                    </tui-select>\n                </td>\n                <td\n                    *tuiCell=\"'date'\"\n                    tuiTd\n                >\n                    <tui-input-date\n                        [ngModel]=\"item.date\"\n                        [ngModelOptions]=\"options\"\n                        (ngModelChange)=\"onValueChange($event, 'date', item, starwars)\"\n                    ></tui-input-date>\n                </td>\n                <td\n                    *tuiCell=\"'total'\"\n                    tuiTd\n                    class=\"number text\"\n                >\n                    {{ getTotal(item) | tuiFormatNumber }}\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</tui-scrollbar>\n<ng-template #template>\n    <tui-svg\n        src=\"tuiIconStarLarge\"\n        class=\"tui-space_right-3\"\n    ></tui-svg>\n    Star Wars\n</ng-template>\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {defaultSort, TuiComparator} from '@taiga-ui/addon-table';\nimport {\n    isPresent,\n    toInt,\n    TUI_DEFAULT_MATCHER,\n    TuiDay,\n    tuiReplayedValueChangesFrom,\n} from '@taiga-ui/cdk';\nimport {TUI_ARROW} from '@taiga-ui/kit';\nimport {BehaviorSubject, combineLatest, Observable, timer} from 'rxjs';\nimport {\n    debounceTime,\n    filter,\n    map,\n    mapTo,\n    share,\n    startWith,\n    switchMap,\n} from 'rxjs/operators';\n\ninterface User {\n    readonly name: string;\n    readonly dob: TuiDay;\n}\n\nconst TODAY = TuiDay.currentLocal();\nconst FIRST = [\n    `John`,\n    `Jane`,\n    `Jack`,\n    `Jill`,\n    `James`,\n    `Joan`,\n    `Jim`,\n    `Julia`,\n    `Joe`,\n    `Julia`,\n];\n\nconst LAST = [\n    `Smith`,\n    `West`,\n    `Brown`,\n    `Jones`,\n    `Davis`,\n    `Miller`,\n    `Johnson`,\n    `Jackson`,\n    `Williams`,\n    `Wilson`,\n];\n\ntype Key = 'name' | 'dob' | 'age';\n\nconst DATA: readonly User[] = Array.from({length: 300}, () => ({\n    name: `${LAST[Math.floor(Math.random() * 10)]}, ${\n        FIRST[Math.floor(Math.random() * 10)]\n    }`,\n    dob: TODAY.append({day: -Math.floor(Math.random() * 4000) - 7500}),\n}));\nconst KEYS: Record<string, Key> = {\n    Name: `name`,\n    Age: `age`,\n    'Date of Birth': `dob`,\n};\n\n@Component({\n    selector: `tui-table-example-4`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTableExample4 {\n    private readonly size$ = new BehaviorSubject(10);\n    private readonly page$ = new BehaviorSubject(0);\n\n    readonly direction$ = new BehaviorSubject<-1 | 1>(-1);\n    readonly sorter$ = new BehaviorSubject<Key>(`name`);\n\n    readonly minAge = new FormControl(21);\n\n    readonly request$ = combineLatest([\n        this.sorter$,\n        this.direction$,\n        this.page$,\n        this.size$,\n        tuiReplayedValueChangesFrom<number>(this.minAge),\n    ]).pipe(\n        // zero time debounce for a case when both key and direction change\n        debounceTime(0),\n        switchMap(query => this.getData(...query).pipe(startWith(null))),\n        share(),\n    );\n\n    initial: readonly string[] = [`Name`, `Date of Birth`, `Age`];\n\n    enabled = this.initial;\n\n    columns = [`name`, `dob`, `age`];\n\n    search = ``;\n\n    readonly arrow = TUI_ARROW;\n\n    readonly loading$ = this.request$.pipe(map(value => !value));\n\n    readonly total$ = this.request$.pipe(\n        filter(isPresent),\n        map(({length}) => length),\n        startWith(1),\n    );\n\n    readonly data$: Observable<readonly User[]> = this.request$.pipe(\n        filter(isPresent),\n        map(users => users.filter(isPresent)),\n        startWith([]),\n    );\n\n    onEnabled(enabled: readonly string[]): void {\n        this.enabled = enabled;\n        this.columns = this.initial\n            .filter(column => enabled.includes(column))\n            .map(column => KEYS[column]);\n    }\n\n    onDirection(direction: -1 | 1): void {\n        this.direction$.next(direction);\n    }\n\n    onSize(size: number): void {\n        this.size$.next(size);\n    }\n\n    onPage(page: number): void {\n        this.page$.next(page);\n    }\n\n    isMatch(value: unknown): boolean {\n        return !!this.search && TUI_DEFAULT_MATCHER(value, this.search);\n    }\n\n    getAge(user: User): number {\n        return getAge(user);\n    }\n\n    private getData(\n        key: 'name' | 'dob' | 'age',\n        direction: -1 | 1,\n        page: number,\n        size: number,\n        minAge: number,\n    ): Observable<ReadonlyArray<User | null>> {\n        console.info(`Making a request`);\n\n        const start = page * size;\n        const end = start + size;\n        const result = [...DATA]\n            .sort(sortBy(key, direction))\n            .filter(user => getAge(user) >= minAge)\n            .map((user, index) => (index >= start && index < end ? user : null));\n\n        // Imitating server response\n        return timer(3000).pipe(mapTo(result));\n    }\n}\n\nfunction sortBy(key: 'name' | 'dob' | 'age', direction: -1 | 1): TuiComparator<User> {\n    return (a, b) =>\n        key === `age`\n            ? direction * defaultSort(getAge(a), getAge(b))\n            : direction * defaultSort(a[key], b[key]);\n}\n\nfunction getAge({dob}: User): number {\n    const years = TODAY.year - dob.year;\n    const months = TODAY.month - dob.month;\n    const days = TODAY.day - dob.day;\n    const offset = toInt(months > 0 || (!months && days > 9));\n\n    return years + offset;\n}\n","<p\n    tuiTextfieldSize=\"m\"\n    class=\"filters\"\n>\n    <tui-input\n        class=\"input\"\n        [tuiTextfieldCleaner]=\"true\"\n        [(ngModel)]=\"search\"\n    >\n        Find on page\n    </tui-input>\n    <tui-input-count\n        class=\"tui-space_horizontal-3\"\n        [formControl]=\"minAge\"\n    >\n        Minimum age\n    </tui-input-count>\n    <tui-hosted-dropdown [content]=\"dropdown\">\n        <button\n            tuiButton\n            size=\"m\"\n            [iconRight]=\"arrow\"\n        >\n            Columns\n        </button>\n        <ng-template #dropdown>\n            <tui-reorder\n                class=\"columns\"\n                [enabled]=\"enabled\"\n                [(items)]=\"initial\"\n                (enabledChange)=\"onEnabled($event)\"\n            ></tui-reorder>\n        </ng-template>\n    </tui-hosted-dropdown>\n</p>\n<tui-loader\n    [overlay]=\"true\"\n    [showLoader]=\"!!(loading$ | async)\"\n>\n    <table\n        *tuiLet=\"data$ | async as data\"\n        tuiTable\n        class=\"table\"\n        [columns]=\"columns\"\n        [direction]=\"(direction$ | async) || 1\"\n        [tuiSortBy]=\"sorter$ | async\"\n        (tuiSortByChange)=\"sorter$.next($event!)\"\n        (directionChange)=\"direction$.next($event)\"\n    >\n        <thead>\n            <tr tuiThGroup>\n                <th\n                    *tuiHead=\"'name'\"\n                    tuiTh\n                    tuiSortable\n                >\n                    Name\n                </th>\n                <th\n                    *tuiHead=\"'dob'\"\n                    tuiTh\n                    tuiSortable\n                >\n                    Date of Birth\n                </th>\n                <th\n                    *tuiHead=\"'age'\"\n                    tuiTh\n                    tuiSortable\n                >\n                    Age\n                </th>\n            </tr>\n        </thead>\n        <tbody\n            tuiTbody\n            [data]=\"data\"\n        >\n            <tr\n                *tuiRow=\"let item of data\"\n                tuiTr\n            >\n                <td\n                    *tuiCell=\"'name'\"\n                    tuiTd\n                    [class.match]=\"isMatch(item.name)\"\n                >\n                    {{ item.name }}\n                </td>\n                <td\n                    *tuiCell=\"'dob'\"\n                    tuiTd\n                    [class.match]=\"isMatch(item.dob)\"\n                >\n                    {{ item.dob }}\n                </td>\n                <td\n                    *tuiCell=\"'age'\"\n                    tuiTd\n                    [class.match]=\"isMatch(getAge(item))\"\n                >\n                    {{ getAge(item) }}\n                </td>\n            </tr>\n        </tbody>\n        <tfoot>\n            <tr>\n                <td [colSpan]=\"columns.length\">\n                    <tui-table-pagination\n                        class=\"tui-space_top-2\"\n                        [total]=\"(total$ | async) || 0\"\n                        (pageChange)=\"onPage($event)\"\n                        (sizeChange)=\"onSize($event)\"\n                    ></tui-table-pagination>\n                </td>\n            </tr>\n        </tfoot>\n    </table>\n</tui-loader>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiComparator} from '@taiga-ui/addon-table';\nimport {toInt, TuiDay} from '@taiga-ui/cdk';\n\ninterface User {\n    readonly name: string;\n    readonly dob: TuiDay;\n}\n\nconst TODAY = TuiDay.currentLocal();\nconst FIRST = [\n    `John`,\n    `Jane`,\n    `Jack`,\n    `Jill`,\n    `James`,\n    `Joan`,\n    `Jim`,\n    `Julia`,\n    `Joe`,\n    `Julia`,\n];\n\nconst LAST = [\n    `Smith`,\n    `West`,\n    `Brown`,\n    `Jones`,\n    `Davis`,\n    `Miller`,\n    `Johnson`,\n    `Jackson`,\n    `Williams`,\n    `Wilson`,\n];\n\nconst DATA: readonly User[] = Array.from({length: 300}, () => ({\n    name: `${LAST[Math.floor(Math.random() * 10)]}, ${\n        FIRST[Math.floor(Math.random() * 10)]\n    }`,\n    dob: TODAY.append({day: -Math.floor(Math.random() * 4000) - 7500}),\n}));\n\n@Component({\n    selector: `tui-table-example-5`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTableExample5 {\n    readonly data = DATA;\n\n    readonly columns = [`name`, `dob`, `age`];\n\n    readonly ageSorter: TuiComparator<User> = (a: User, b: User) => getAge(a) - getAge(b);\n\n    getAge(user: User): number {\n        return getAge(user);\n    }\n}\n\nfunction getAge({dob}: User): number {\n    const years = TODAY.year - dob.year;\n    const months = TODAY.month - dob.month;\n    const days = TODAY.day - dob.day;\n    const offset = toInt(months > 0 || (!months && days > 9));\n\n    return years + offset;\n}\n","<tui-scrollbar>\n    <cdk-virtual-scroll-viewport\n        #viewport\n        tuiScrollable\n        class=\"viewport tui-zero-scrollbar\"\n        [itemSize]=\"45\"\n        [maxBufferPx]=\"500\"\n        [minBufferPx]=\"400\"\n    >\n        <table\n            tuiTable\n            [columns]=\"columns\"\n        >\n            <thead>\n                <tr tuiThGroup>\n                    <th\n                        *tuiHead=\"'name'\"\n                        tuiTh\n                        [sticky]=\"true\"\n                        [style.top.px]=\"-viewport['_renderedContentOffset']\"\n                    >\n                        Name\n                    </th>\n                    <th\n                        *tuiHead=\"'dob'\"\n                        tuiTh\n                        [sticky]=\"true\"\n                        [style.top.px]=\"-viewport['_renderedContentOffset']\"\n                    >\n                        Date of Birth\n                    </th>\n                    <th\n                        *tuiHead=\"'age'\"\n                        tuiTh\n                        [sticky]=\"true\"\n                        [sorter]=\"ageSorter\"\n                        [style.top.px]=\"-viewport['_renderedContentOffset']\"\n                    >\n                        Age\n                    </th>\n                </tr>\n            </thead>\n            <tbody tuiTbody>\n                <tr\n                    *cdkVirtualFor=\"let item of data | tuiTableSort\"\n                    tuiTr\n                >\n                    <td\n                        *tuiCell=\"'name'\"\n                        tuiTd\n                    >\n                        {{ item.name }}\n                    </td>\n                    <td\n                        *tuiCell=\"'dob'\"\n                        tuiTd\n                    >\n                        {{ item.dob }}\n                    </td>\n                    <td\n                        *tuiCell=\"'age'\"\n                        tuiTd\n                    >\n                        {{ getAge(item) }}\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </cdk-virtual-scroll-viewport>\n</tui-scrollbar>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-table-example-6`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTableExample6 {\n    data: Array<Record<string, string | number>> = [{id: 1, name: `name`}];\n\n    get columns(): string[] {\n        return Object.keys(this.data[0]);\n    }\n\n    addColumn(): void {\n        this.data = this.data.map(item => ({\n            ...item,\n            [`extra-${this.columns.length + 1}`]: `extra column ${\n                this.columns.length + 1\n            }`,\n        }));\n    }\n\n    addRows(): void {\n        this.data = [...this.data, {...this.data[0], id: this.data.length + 1}];\n    }\n}\n","<button\n    tuiButton\n    size=\"s\"\n    (click)=\"addColumn()\"\n>\n    Add column\n</button>\n<button\n    tuiButton\n    size=\"s\"\n    class=\"tui-space_left-2\"\n    (click)=\"addRows()\"\n>\n    Add row\n</button>\n\n<table\n    tuiTable\n    class=\"table tui-space_top-3\"\n    [columns]=\"columns\"\n>\n    <thead>\n        <tr tuiThGroup>\n            <ng-container *ngFor=\"let col of columns\">\n                <th\n                    *tuiHead=\"col\"\n                    tuiTh\n                >\n                    {{ col }}\n                </th>\n            </ng-container>\n        </tr>\n    </thead>\n    <tbody\n        tuiTbody\n        [data]=\"data\"\n    >\n        <tr\n            *tuiRow=\"let item of data\"\n            tuiTr\n        >\n            <ng-container *ngFor=\"let col of columns\">\n                <td\n                    *tuiCell=\"col\"\n                    tuiTd\n                >\n                    {{ item[col] }}\n                </td>\n            </ng-container>\n        </tr>\n    </tbody>\n</table>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\n\n@Component({\n    selector: `example-table`,\n    templateUrl: `./table.template.html`,\n    changeDetection,\n})\nexport class ExampleTuiTableComponent {\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n        LESS: import(`!!raw-loader!./examples/1/index.less`),\n    };\n\n    readonly example2: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/2/index.ts`),\n        HTML: import(`!!raw-loader!./examples/2/index.html`),\n        LESS: import(`!!raw-loader!./examples/2/index.less`),\n    };\n\n    readonly example3: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/3/index.ts`),\n        HTML: import(`!!raw-loader!./examples/3/index.html`),\n        LESS: import(`!!raw-loader!./examples/3/index.less`),\n    };\n\n    readonly example4: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/4/index.ts`),\n        HTML: import(`!!raw-loader!./examples/4/index.html`),\n        LESS: import(`!!raw-loader!./examples/4/index.less`),\n    };\n\n    readonly example5: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/5/index.ts`),\n        HTML: import(`!!raw-loader!./examples/5/index.html`),\n        LESS: import(`!!raw-loader!./examples/5/index.less`),\n    };\n\n    readonly example6: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/6/index.ts`),\n        HTML: import(`!!raw-loader!./examples/6/index.html`),\n        LESS: import(`!!raw-loader!./examples/6/index.less`),\n    };\n\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n}\n","<tui-doc-page\n    header=\"Table\"\n    package=\"ADDON-TABLE\"\n    type=\"components\"\n>\n    <ng-template\n        i18n\n        pageTab\n    >\n        <p>This module allows you to create various tables, both static and editable.</p>\n\n        <tui-doc-example\n            id=\"basic\"\n            i18n-heading\n            heading=\"Basic\"\n            [content]=\"example1\"\n        >\n            <tui-table-example-1></tui-table-example-1>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"custom\"\n            i18n-heading\n            heading=\"Custom\"\n            [content]=\"example2\"\n        >\n            <tui-table-example-2></tui-table-example-2>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"editable\"\n            i18n-heading\n            heading=\"Editable\"\n            [content]=\"example3\"\n        >\n            <tui-table-example-3></tui-table-example-3>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"server\"\n            i18n-heading\n            heading=\"Server sorting\"\n            description=\"With tuiSortBy directive to work with column titles instead of sorters\"\n            [content]=\"example4\"\n        >\n            <tui-table-example-4></tui-table-example-4>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"virtual\"\n            i18n-heading\n            heading=\"Virtual scroll\"\n            [content]=\"example5\"\n        >\n            <tui-table-example-5></tui-table-example-5>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"dynamic\"\n            i18n-heading\n            heading=\"Dynamic columns\"\n            [content]=\"example6\"\n        >\n            <tui-table-example-6></tui-table-example-6>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        <tui-accordion>\n            <tui-accordion-item [open]=\"true\">\n                Directives\n                <ng-template tuiAccordionItemContent>\n                    <h2>table[tuiTable]</h2>\n                    <p>Parent directive that sets the table up.</p>\n                    <tui-doc-documentation [showValues]=\"false\">\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"columns\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"readonly string[]\"\n                        >\n                            An array of keys to set up columns order\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"size\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"TuiSizeS | TuiSizeL\"\n                        >\n                            Cells size\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"sorter\"\n                            documentationPropertyMode=\"input-output\"\n                            documentationPropertyType=\"TuiComparator<T>\"\n                        >\n                            Sort function (basic JavaScript array sort API)\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"direction\"\n                            documentationPropertyMode=\"input-output\"\n                            documentationPropertyType=\"-1 | 1\"\n                        >\n                            Direction for sorting\n                        </ng-template>\n                    </tui-doc-documentation>\n\n                    <hr />\n\n                    <h2>thead[tuiThead]</h2>\n                    <p>\n                        Used on\n                        <code>thead</code>\n                        to make it sticky\n                    </p>\n\n                    <hr />\n\n                    <h2>tr[tuiThGroup]</h2>\n                    <p>\n                        Used inside\n                        <code>thead</code>\n                        to layout headings for the columns. You can have multiple rows and use\n                        <code>rowSpan</code>\n                        on\n                        <code>th</code>\n                        elements if you want to create some complex heading for your table.\n                    </p>\n\n                    <hr />\n\n                    <h2>th[tuiTh]</h2>\n                    <p>\n                        Used inside\n                        <code>tr[tuiThGroup]</code>\n                        to style heading cells.\n                    </p>\n                    <tui-doc-documentation [showValues]=\"false\">\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"resizable\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"boolean\"\n                        >\n                            Makes this column resizable\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"sorter\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"TuiComparator<T> | null\"\n                        >\n                            Sorter function for this column\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"sticky\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"boolean\"\n                        >\n                            Makes heading cell horizontally sticky\n                        </ng-template>\n                    </tui-doc-documentation>\n\n                    <hr />\n\n                    <h2>tbody[tuiTbody]</h2>\n                    <p>\n                        Sets up a group of data. You can have multiple\n                        <code>tbody</code>\n                        inside your table.\n                    </p>\n                    <tui-doc-documentation [showValues]=\"false\">\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"data\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"readonly T[]\"\n                        >\n                            Data to display\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"heading\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"PolymorpheusContent\"\n                        >\n                            Optional heading content for the group that makes it collapsable\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"open\"\n                            documentationPropertyMode=\"input-output\"\n                            documentationPropertyType=\"boolean\"\n                        >\n                            Open/collapsed state of the group\n                        </ng-template>\n                    </tui-doc-documentation>\n\n                    <hr />\n\n                    <h2>tr[tuiTr]</h2>\n                    <p>\n                        Used inside\n                        <code>tbody</code>\n                        to layout cells.\n                    </p>\n\n                    <hr />\n\n                    <h2>td[tuiTd] or th[tuiTd]</h2>\n                    <p>\n                        A cell directive to be placed in\n                        <code>tr</code>\n                        of\n                        <code>tbody</code>\n                        . Use it on\n                        <code>th</code>\n                        if you want to make a sticky column\n                    </p>\n                </ng-template>\n            </tui-accordion-item>\n            <tui-accordion-item>\n                Structural directives\n                <ng-template tuiAccordionItemContent>\n                    <h2>*tuiHead=\"key\"</h2>\n                    <p>\n                        Used to define template for\n                        <em>heading</em>\n                        for particular key\n                    </p>\n                    <p>\n                        Goes inside\n                        <code>tr</code>\n                        element inside\n                        <code>thead</code>\n                    </p>\n\n                    <hr />\n\n                    <h2>*tuiRow=\"let item of data\"</h2>\n                    <p>\n                        Used to define template for a\n                        <em>row</em>\n                    </p>\n\n                    <hr />\n\n                    <h2>*tuiCell=\"key\"</h2>\n                    <p>\n                        Used to define template for\n                        <em>cell</em>\n                        for particular key\n                    </p>\n                    <p>\n                        Goes inside\n                        <code>tr</code>\n                        element\n                    </p>\n                </ng-template>\n            </tui-accordion-item>\n        </tui-accordion>\n    </ng-template>\n\n    <ng-template pageTab>\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Import\n                    <code>TuiTableModule</code>\n                    into a module where you want to use our component\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Add to the template:</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {IntersectionObserverModule} from '@ng-web-apis/intersection-observer';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {\n    TuiReorderModule,\n    TuiTableModule,\n    TuiTablePaginationModule,\n} from '@taiga-ui/addon-table';\nimport {TuiLetModule, TuiValidatorModule} from '@taiga-ui/cdk';\nimport {\n    TuiButtonModule,\n    TuiDataListModule,\n    TuiFormatNumberPipeModule,\n    TuiHostedDropdownModule,\n    TuiLinkModule,\n    TuiLoaderModule,\n    TuiNotificationModule,\n    TuiScrollbarModule,\n    TuiSvgModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {\n    TuiAccordionModule,\n    TuiArrowModule,\n    TuiDataListWrapperModule,\n    TuiInputCountModule,\n    TuiInputDateModule,\n    TuiInputModule,\n    TuiInputNumberModule,\n    TuiSelectModule,\n    TuiTagModule,\n    TuiTextAreaModule,\n} from '@taiga-ui/kit';\n\nimport {TuiTableExample1} from './examples/1';\nimport {TuiTableExample2} from './examples/2';\nimport {TuiTableExample3} from './examples/3';\nimport {TuiTableExample4} from './examples/4';\nimport {TuiTableExample5} from './examples/5';\nimport {TuiTableExample6} from './examples/6';\nimport {ExampleTuiTableComponent} from './table.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ScrollingModule,\n        IntersectionObserverModule,\n        TuiNotificationModule,\n        TuiScrollbarModule,\n        TuiTableModule,\n        TuiInputModule,\n        TuiTextAreaModule,\n        TuiInputNumberModule,\n        TuiInputCountModule,\n        TuiSelectModule,\n        TuiInputDateModule,\n        TuiDataListModule,\n        TuiDataListWrapperModule,\n        TuiFormatNumberPipeModule,\n        TuiValidatorModule,\n        TuiSvgModule,\n        TuiButtonModule,\n        TuiLinkModule,\n        TuiTagModule,\n        TuiAccordionModule,\n        TuiLoaderModule,\n        TuiLetModule,\n        TuiTablePaginationModule,\n        TuiTextfieldControllerModule,\n        TuiHostedDropdownModule,\n        TuiArrowModule,\n        TuiReorderModule,\n        TuiAddonDocModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiTableComponent)),\n    ],\n    declarations: [\n        ExampleTuiTableComponent,\n        TuiTableExample1,\n        TuiTableExample2,\n        TuiTableExample3,\n        TuiTableExample4,\n        TuiTableExample5,\n        TuiTableExample6,\n    ],\n    exports: [ExampleTuiTableComponent],\n})\nexport class ExampleTuiTableModule {}\n"],"sourceRoot":"webpack:///"}