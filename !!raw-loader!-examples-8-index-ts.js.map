{"version":3,"sources":["webpack:///./src/modules/components/input/examples/8/index.ts?0265","webpack:///./src/modules/components/multi-select/examples/8/index.ts?4de3","webpack:///./src/modules/components/select/examples/8/index.ts?7998","webpack:///./src/modules/utils/tokens/examples/8/index.ts?70a7"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,oBAAoB,sBAAsB,UAAU,eAAe,aAAa,UAAU,0BAA0B,uBAAuB,YAAY,kBAAkB,8DAA8D,gBAAgB,qMAAqM,4BAA4B,oBAAoB,eAAe,GAAG,cAAc,EAAE,OAAO,GAAG,oOAAoO,gBAAgB,uJAAuJ,kCAAkC,6CAA6C,uBAAuB,oBAAoB,uLAAuL,mFAAmF,oDAAoD,sCAAsC,uBAAuB,OAAO,0CAA0C,uBAAuB,mBAAmB,gEAAgE,iBAAiB,oBAAoB,eAAe,mCAAmC,qCAAqC,OAAO,+FAA+F,2EAA2E,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAzlE;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,gFAAgF,sBAAsB,UAAU,yBAAyB,sBAAsB,wBAAwB,0BAA0B,4BAA4B,sBAAsB,8BAA8B,iCAAiC,QAAQ,GAAG,+LAA+L,UAAU,IAAI,gBAAgB,iBAAiB,oBAAoB,IAAI,0BAA0B,GAAG,wIAAwI,gBAAgB,+KAA+K,0GAA0G,aAAa,wCAAwC,+CAA+C,0DAA0D,oCAAoC,6BAA6B,YAAY,mCAAmC,4BAA4B,YAAY,uCAAuC,6BAA6B,YAAY,uCAAuC,kCAAkC,YAAY,qCAAqC,6BAA6B,YAAY,wCAAwC,4BAA4B,SAAS,GAAG,GAAG,E;;;;;;;;;;;;ACAz4D;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,wJAAwJ,mCAAmC,mBAAmB,kkLAAkkL,GAAG,GAAG,E;;;;;;;;;;;;ACA39L;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,2CAA2C,uBAAuB,gBAAgB,qHAAqH,mCAAmC,oIAAoI,GAAG,GAAG,E","file":"!!raw-loader!-examples-8-index-ts.js","sourcesContent":["export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_DEFAULT_MATCHER} from '@taiga-ui/cdk';\\nimport {Observable, of} from 'rxjs';\\nimport {map, startWith, switchMap} from 'rxjs/operators';\\n\\nimport {default as avatar} from '!!file-loader!../../../../../assets/images/avatar.jpg';\\n\\nclass User {\\n    constructor(\\n        readonly firstName: string,\\n        readonly lastName: string,\\n        readonly avatarUrl: string | null = null,\\n        readonly disabled: boolean = false,\\n    ) {}\\n\\n    toString(): string {\\n        return `${this.firstName} ${this.lastName}`;\\n    }\\n}\\n\\nconst DATA: readonly User[] = [\\n    new User(`Roman`, `Sedov`, `http://marsibarsi.me/images/1x1small.jpg`),\\n    new User(`Alex`, `Inkin`, avatar),\\n    new User(`Gabriel José`, `de la Concordia «Gabo» García Márquez`),\\n];\\n\\n@Component({\\n    selector: `tui-input-example-8`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputExample8 {\\n    readonly control = new FormControl(``);\\n\\n    firstName = ``;\\n    lastName = ``;\\n\\n    readonly items$ = this.control.valueChanges.pipe(\\n        startWith(``),\\n        switchMap(value =>\\n            this.request(value).pipe(\\n                map(response => {\\n                    if (response.length === 1 && String(response[0]) === value) {\\n                        this.onClick(response[0]);\\n\\n                        return [];\\n                    } else {\\n                        return response;\\n                    }\\n                }),\\n            ),\\n        ),\\n        startWith(DATA),\\n    );\\n\\n    onClick({lastName, firstName}: User): void {\\n        this.lastName = lastName;\\n        this.firstName = firstName;\\n    }\\n\\n    // Request imitation\\n    private request(query: string): Observable<readonly User[]> {\\n        return of(DATA.filter(item => TUI_DEFAULT_MATCHER(item, query)));\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {\\n    TuiContextWithImplicit,\\n    TuiIdentityMatcher,\\n    TuiStringHandler,\\n} from '@taiga-ui/cdk';\\nimport {tuiItemsHandlersProvider} from '@taiga-ui/kit';\\n\\ninterface Employee {\\n    readonly id: number;\\n    readonly name: string;\\n    readonly dept: {\\n        readonly id: number;\\n        readonly title: string;\\n    };\\n}\\n\\nconst STRINGIFY_EMPLOYEE: TuiStringHandler<\\n    Employee | TuiContextWithImplicit<Employee>\\n> = (item: Employee | TuiContextWithImplicit<Employee>) =>\\n    `name` in item\\n        ? `${item.name} (${item.dept.title})`\\n        : `${item.$implicit.name} (${item.$implicit.dept.title})`;\\n\\nconst ID_MATCHER_EMPLOYEE: TuiIdentityMatcher<Employee> = (\\n    item1: Employee,\\n    item2: Employee,\\n) => item1.id === item2.id;\\n\\n@Component({\\n    selector: `tui-multi-select-example-8`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n    providers: [\\n        tuiItemsHandlersProvider({\\n            stringify: STRINGIFY_EMPLOYEE,\\n            identityMatcher: ID_MATCHER_EMPLOYEE,\\n        }),\\n    ],\\n})\\nexport class TuiMultiSelectExample8 {\\n    readonly testValue = new FormControl([]);\\n\\n    readonly items: readonly Employee[] = [\\n        {id: 42, name: `John Cleese`, dept: {id: 566, title: `Financial`}},\\n        {id: 237, name: `Eric Idle`, dept: {id: 560, title: `Staffing`}},\\n        {id: 666, name: `Michael Palin`, dept: {id: 566, title: `Financial`}},\\n        {id: 123, name: `Terry Gilliam`, dept: {id: 500, title: `Administrative`}},\\n        {id: 777, name: `Terry Jones`, dept: {id: 566, title: `Financial`}},\\n        {id: 999, name: `Graham Chapman`, dept: {id: 560, title: `Staffing`}},\\n    ];\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-select-example-8`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiSelectExample8 {\\n    value = null;\\n\\n    readonly countries = [\\n        `Afghanistan`,\\n        `Albania`,\\n        `Algeria`,\\n        `American Samoa`,\\n        `Andorra`,\\n        `Angola`,\\n        `Anguilla`,\\n        `Antarctica`,\\n        `Antigua and Barbuda`,\\n        `Argentina`,\\n        `Armenia`,\\n        `Aruba`,\\n        `Australia`,\\n        `Austria`,\\n        `Azerbaijan`,\\n        `Bahamas`,\\n        `Bahrain`,\\n        `Bangladesh`,\\n        `Barbados`,\\n        `Belarus`,\\n        `Belgium`,\\n        `Belize`,\\n        `Benin`,\\n        `Bermuda`,\\n        `Bhutan`,\\n        `Bolivia`,\\n        `Bonaire, Sint Eustatius and Saba`,\\n        `Bosnia and Herzegovina`,\\n        `Botswana`,\\n        `Bouvet Island`,\\n        `Brazil`,\\n        `British Indian Ocean Territory`,\\n        `Brunei Darussalam`,\\n        `Bulgaria`,\\n        `Burkina Faso`,\\n        `Burundi`,\\n        `Cabo Verde`,\\n        `Cambodia`,\\n        `Cameroon`,\\n        `Canada`,\\n        `Cayman Islands`,\\n        `Central African Republic`,\\n        `Chad`,\\n        `Chile`,\\n        `China`,\\n        `Christmas Island`,\\n        `Cocos (Keeling) Islands`,\\n        `Colombia`,\\n        `Comoros`,\\n        `Congo`,\\n        `Cook Islands`,\\n        `Costa Rica`,\\n        `Croatia`,\\n        `Cuba`,\\n        `Curaçao`,\\n        `Cyprus`,\\n        `Czechia`,\\n        `Côte d'Ivoire`,\\n        `Denmark`,\\n        `Djibouti`,\\n        `Dominica`,\\n        `Dominican Republic`,\\n        `Ecuador`,\\n        `Egypt`,\\n        `El Salvador`,\\n        `Equatorial Guinea`,\\n        `Eritrea`,\\n        `Estonia`,\\n        `Eswatini`,\\n        `Ethiopia`,\\n        `Falkland Islands`,\\n        `Faroe Islands`,\\n        `Fiji`,\\n        `Finland`,\\n        `France`,\\n        `French Guiana`,\\n        `French Polynesia`,\\n        `French Southern Territories`,\\n        `Gabon`,\\n        `Gambia`,\\n        `Georgia`,\\n        `Germany`,\\n        `Ghana`,\\n        `Gibraltar`,\\n        `Greece`,\\n        `Greenland`,\\n        `Grenada`,\\n        `Guadeloupe`,\\n        `Guam`,\\n        `Guatemala`,\\n        `Guernsey`,\\n        `Guinea`,\\n        `Guinea-Bissau`,\\n        `Guyana`,\\n        `Haiti`,\\n        `Heard Island and McDonald Islands`,\\n        `Holy See`,\\n        `Honduras`,\\n        `Hong Kong`,\\n        `Hungary`,\\n        `Iceland`,\\n        `India`,\\n        `Indonesia`,\\n        `Iran`,\\n        `Iraq`,\\n        `Ireland`,\\n        `Isle of Man`,\\n        `Israel`,\\n        `Italy`,\\n        `Jamaica`,\\n        `Japan`,\\n        `Jersey`,\\n        `Jordan`,\\n        `Kazakhstan`,\\n        `Kenya`,\\n        `Kiribati`,\\n        `Korea`,\\n        `Kuwait`,\\n        `Kyrgyzstan`,\\n        `Lao People's Democratic Republic`,\\n        `Latvia`,\\n        `Lebanon`,\\n        `Lesotho`,\\n        `Liberia`,\\n        `Libya`,\\n        `Liechtenstein`,\\n        `Lithuania`,\\n        `Luxembourg`,\\n        `Macao`,\\n        `Madagascar`,\\n        `Malawi`,\\n        `Malaysia`,\\n        `Maldives`,\\n        `Mali`,\\n        `Malta`,\\n        `Marshall Islands`,\\n        `Martinique`,\\n        `Mauritania`,\\n        `Mauritius`,\\n        `Mayotte`,\\n        `Mexico`,\\n        `Micronesia`,\\n        `Moldova`,\\n        `Monaco`,\\n        `Mongolia`,\\n        `Montenegro`,\\n        `Montserrat`,\\n        `Morocco`,\\n        `Mozambique`,\\n        `Myanmar`,\\n        `Namibia`,\\n        `Nauru`,\\n        `Nepal`,\\n        `Netherlands`,\\n        `New Caledonia`,\\n        `New Zealand`,\\n        `Nicaragua`,\\n        `Niger`,\\n        `Nigeria`,\\n        `Niue`,\\n        `Norfolk Island`,\\n        `Northern Mariana Islands`,\\n        `Norway`,\\n        `Oman`,\\n        `Pakistan`,\\n        `Palau`,\\n        `Palestine, State of`,\\n        `Panama`,\\n        `Papua New Guinea`,\\n        `Paraguay`,\\n        `Peru`,\\n        `Philippines`,\\n        `Pitcairn`,\\n        `Poland`,\\n        `Portugal`,\\n        `Puerto Rico`,\\n        `Qatar`,\\n        `Republic of North Macedonia`,\\n        `Romania`,\\n        `Russian Federation`,\\n        `Rwanda`,\\n        `Réunion`,\\n        `Saint Barthélemy`,\\n        `Saint Helena`,\\n        `Saint Kitts and Nevis`,\\n        `Saint Lucia`,\\n        `Saint Martin`,\\n        `Saint Pierre and Miquelon`,\\n        `Saint Vincent and the Grenadines`,\\n        `Samoa`,\\n        `San Marino`,\\n        `Sao Tome and Principe`,\\n        `Saudi Arabia`,\\n        `Senegal`,\\n        `Serbia`,\\n        `Seychelles`,\\n        `Sierra Leone`,\\n        `Singapore`,\\n        `Sint Maarten (Dutch part)`,\\n        `Slovakia`,\\n        `Slovenia`,\\n        `Solomon Islands`,\\n        `Somalia`,\\n        `South Africa`,\\n        `South Georgia`,\\n        `South Sudan`,\\n        `Spain`,\\n        `Sri Lanka`,\\n        `Sudan`,\\n        `Suriname`,\\n        `Svalbard and Jan Mayen`,\\n        `Sweden`,\\n        `Switzerland`,\\n        `Syrian Arab Republic`,\\n        `Taiwan`,\\n        `Tajikistan`,\\n        `Tanzania, United Republic of`,\\n        `Thailand`,\\n        `Timor-Leste`,\\n        `Togo`,\\n        `Tokelau`,\\n        `Tonga`,\\n        `Trinidad and Tobago`,\\n        `Tunisia`,\\n        `Turkey`,\\n        `Turkmenistan`,\\n        `Turks and Caicos Islands`,\\n        `Tuvalu`,\\n        `Uganda`,\\n        `Ukraine`,\\n        `United Arab Emirates`,\\n        `United Kingdom`,\\n        `United States of America`,\\n        `Uruguay`,\\n        `Uzbekistan`,\\n        `Vanuatu`,\\n        `Venezuela`,\\n        `Viet Nam`,\\n        `Virgin Islands (British)`,\\n        `Virgin Islands (U.S.)`,\\n        `Wallis and Futuna`,\\n        `Western Sahara`,\\n        `Yemen`,\\n        `Zambia`,\\n        `Zimbabwe`,\\n        `Åland Islands`,\\n    ];\\n}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_NUMBER_FORMAT, TuiNumberFormatSettings} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-token-example-8`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTokensExample8 {\\n    constructor(\\n        @Inject(TUI_NUMBER_FORMAT)\\n        readonly TuiNumberFormatSettings: TuiNumberFormatSettings,\\n    ) {}\\n}\\n\";"],"sourceRoot":"webpack:///"}