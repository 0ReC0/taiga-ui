{"version":3,"sources":["./src/modules/decorators/default-prop/import/example-decorator.md","./src/modules/decorators/pure/import/example-decorator.md","./src/modules/decorators/required-setter/import/example-decorator.md"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,iGAAkC,0KAA0K,GAAG,QAAQ,E;;;;;;;;;;;;ACAtO;AAAe,iGAAkC,iEAAiE,iBAAiB,mDAAmD,KAAK,EAAE,iBAAiB,GAAG,QAAQ,E;;;;;;;;;;;;ACAzN;AAAe,iGAAkC,gMAAgM,yFAAyF,KAAK,2BAA2B,GAAG,QAAQ,E","file":"!!raw-loader!-import-example-decorator-md.js","sourcesContent":["export default \"```ts\\nexport class MyComponent {\\n  @Input()\\n  @tuiDefaultProp(\\n    quantity => Number.isInteger(quantity) && quantity >= 5,\\n    'Should be integer number more than min value',\\n  )\\n  quantity = 10;\\n}\\n```\\n\";","export default \"```ts\\nexport class MyComponent {\\n  @tuiPure\\n  get complexCalculationWithFixedResult(): number {\\n    // ...\\n  }\\n\\n  @tuiPure\\n  someMethod(arg1: number, arg2: {}): {} {\\n    // ...\\n  }\\n}\\n```\\n\";","export default \"```ts\\nexport class MyComponent {\\n  @Input()\\n  @tuiRequiredSetter(\\n    quantity => Number.isInteger(quantity) && quantity >= 10,\\n    'Should be integer number more than min value',\\n  )\\n  set quantity(quantity: number) {\\n    this.items = new Array(quantity).fill(Math.floor(Math.random() * Math.floor(100)));\\n  }\\n\\n  items: Array<number>;\\n}\\n```\\n\";"],"sourceRoot":"webpack:///"}