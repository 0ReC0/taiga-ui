function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}function _templateObject6(){var e=_taggedTemplateLiteral([":\u241f0dc56b110b85e3f82dc8a031661e63c1bb5ac2c4\u241f4928000514802786074:Material icons"]);return _templateObject6=function(){return e},e}function _templateObject5(){var e=_taggedTemplateLiteral([":\u241f69b2559c3aab1471ba434cae29edf4b61353b396\u241f8273797278283997213: If you want to bundle your icons, you need to provide ",":START_TAG_CODE:TUI_ICONS",":CLOSE_TAG_CODE: token with a dictionary of name to source code. If you want to move your icons to assets you need to process them with ",":START_LINK:this script",":CLOSE_LINK:. Drop it to the folder with your icons and run ",":START_TAG_CODE:node process-icons.js",":CLOSE_TAG_CODE:. Then move your icons to the assets folder and provide ",":START_TAG_CODE:TUI_ICONS_PATH",":CLOSE_TAG_CODE: as seen in example below: "]);return _templateObject5=function(){return e},e}function _templateObject4(){var e=_taggedTemplateLiteral([":\u241f3c22b929ddcf326204f9e406b9e4f2c08f507152\u241f4191926846451272027: There are two ways to add icons: bundled and as assets. Bundled icons have the benefit of immediate display but increase your app size. Assets work like regular ",':START_TAG_CODE:img src="xxx"',":CLOSE_TAG_CODE: with all the benefits of caching. In both cases you can control color with CSS ",":START_TAG_CODE:color",":CLOSE_TAG_CODE: style. "]);return _templateObject4=function(){return e},e}function _templateObject3(){var e=_taggedTemplateLiteral([":\u241fe2163c2ddba5bf475f2ed90897b3a496f7ba87c1\u241f1098592464017048252: These are keys of following dictionaries: ",":START_TAG_CODE:tuiCoreIcons",":CLOSE_TAG_CODE: and ",":START_TAG_CODE:tuiKitIcons",":CLOSE_TAG_CODE:. It is not required to provide all those icons, you can gradually add the ones you need depending on components you use. "]);return _templateObject3=function(){return e},e}function _templateObject2(){var e=_taggedTemplateLiteral([":\u241fab9473704d948dc4c33c0e2e6ad00f96b4888542\u241f7423318878179846861: Taiga UI uses ",":START_LINK:",":START_TAG_CODE:tui-svg",":CLOSE_TAG_CODE:",":CLOSE_LINK: component to display SVG icons. It can show icons by name, link or source code. Several icon names are hardcoded into kit components so if you want to switch to a different icon set you would need to provide a mapping. "]);return _templateObject2=function(){return e},e}function _templateObject(){var e=_taggedTemplateLiteral([":\u241fc08189fb00c55f045ae49b6c01419138998d0e41\u241f8811200965267882277:Icons set"]);return _templateObject=function(){return e},e}function _taggedTemplateLiteral(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{JSON:function(e,t,n){"use strict";n.r(t),n.d(t,"IconSetModule",(function(){return R}));var a=n("HHFY"),r=n("2kYt"),o=n("nIj0"),i=n("sEIs"),c=n("SVIu"),p=n("Qq0t"),l=n("dvRg"),d=n("4C5Q"),s=n("EM62"),u=n("OZlg"),f=n("yZWP"),b=n("zV1d"),m=n("fRC/"),x=n("aPft"),g=n("iyc4"),_=n("Yj6K"),h=n("RlDx"),y=n("eB8V"),C={tuiIconCalendarLarge:"date_range-24px",tuiIconTooltipLarge:"help-24px",tuiIconInfo:"info-16px",tuiIconCloseLarge:"clear-24px",tuiIconChevronLeftLarge:"keyboard_arrow_left-24px",tuiIconChevronRightLarge:"keyboard_arrow_right-24px"};function w(e){return"assets/icons/".concat(C[e],".svg#").concat(C[e])}var O,k,T,S,v,E=((O=function e(){_classCallCheck(this,e),this.date=null}).\u0275fac=function(e){return new(e||O)},O.\u0275cmp=s["\u0275\u0275defineComponent"]({type:O,selectors:[["tui-icon-set-example-1"]],features:[s["\u0275\u0275ProvidersFeature"]([{provide:p.TUI_ICONS_PATH,useValue:w}])],decls:8,vars:2,consts:[[1,"b-form"],["tuiHintContent","You can use any icons you want",1,"tui-space_top-4",3,"tuiTextfieldCleaner","ngModel","ngModelChange"]],template:function(e,t){1&e&&(s["\u0275\u0275elementStart"](0,"div",0),s["\u0275\u0275elementStart"](1,"tui-notification"),s["\u0275\u0275text"](2," As usual with the DI this is hierarchical. Meaning you can provide different "),s["\u0275\u0275elementStart"](3,"code"),s["\u0275\u0275text"](4,"TUI_ICONS_PATH"),s["\u0275\u0275elementEnd"](),s["\u0275\u0275text"](5," and use different icons across your app. "),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](6,"tui-input-date-range",1),s["\u0275\u0275listener"]("ngModelChange",(function(e){return t.date=e})),s["\u0275\u0275text"](7," Pick your favorite date range "),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"]()),2&e&&(s["\u0275\u0275advance"](6),s["\u0275\u0275property"]("tuiTextfieldCleaner",!0)("ngModel",t.date))},directives:[x.a,_.a,h.a,y.b,o.NgControlStatus,o.NgModel],styles:['tui-wrapper[data-appearance=material-textfield][_ngcontent-%COMP%]{background:#f5f5f5;color:rgba(0,0,0,.87);border-radius:4px 4px 0 0}tui-wrapper[data-appearance=material-textfield][_ngcontent-%COMP%]:after{height:1px;background:#8e8e8e;top:auto;border:none;-webkit-transform-origin:bottom;transform-origin:bottom;-webkit-transition:all .3s;transition:all .3s}tui-wrapper[data-appearance=material-textfield][data-state=hovered][_ngcontent-%COMP%]{background:#ececec}tui-wrapper[data-appearance=material-textfield][data-state=hovered][_ngcontent-%COMP%]:after{background:#1f1f1f}tui-wrapper[data-appearance=material-textfield]._focused[_ngcontent-%COMP%]{background:#dcdcdc}tui-wrapper[data-appearance=material-textfield]._focused[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#6200ee!important}tui-wrapper[data-appearance=material-textfield]._focused[_ngcontent-%COMP%]:after{background:#6200ee;-webkit-transform:scaleY(2);transform:scaleY(2)}tui-wrapper[data-appearance=material-button][_ngcontent-%COMP%]{border-radius:4px;background:#6200ee;color:#fff;text-transform:uppercase;font-weight:700;-webkit-box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.0014),0 1px 5px 0 rgba(0,0,0,.12);box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.0014),0 1px 5px 0 rgba(0,0,0,.12);-webkit-transition:all .3s;transition:all .3s}tui-wrapper[data-appearance=material-button][data-state=hovered][_ngcontent-%COMP%]{background:#6e14ef;-webkit-box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12);box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}tui-wrapper[data-appearance=material-button][data-state=pressed][_ngcontent-%COMP%]{background:#6e14ef;-webkit-box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}tui-wrapper[data-appearance=material-button]._focused[_ngcontent-%COMP%]{background:#883df2}tui-wrapper[data-appearance=material-button]._focused[_ngcontent-%COMP%]:after{display:none}tui-wrapper[data-appearance=material-checkbox-off][_ngcontent-%COMP%], tui-wrapper[data-appearance=material-checkbox-on][_ngcontent-%COMP%]{color:#fff}tui-wrapper[data-appearance=material-checkbox-off][_ngcontent-%COMP%]:before, tui-wrapper[data-appearance=material-checkbox-on][_ngcontent-%COMP%]:before{position:absolute;content:"";top:0;left:0;right:0;bottom:0;border-radius:2px;border:2px solid rgba(0,0,0,.54);-webkit-transition:all .3s;transition:all .3s}tui-wrapper[data-appearance=material-checkbox-off][_ngcontent-%COMP%]:after, tui-wrapper[data-appearance=material-checkbox-on][_ngcontent-%COMP%]:after{position:absolute;top:-8px;left:-8px;right:-8px;bottom:-8px;border-radius:100%;background:#000;opacity:0;-webkit-transition:opacity .3s;transition:opacity .3s}tui-wrapper[data-appearance=material-checkbox-off][data-state=hovered][_ngcontent-%COMP%]:after, tui-wrapper[data-appearance=material-checkbox-on][data-state=hovered][_ngcontent-%COMP%]:after{opacity:.05}tui-wrapper[data-appearance=material-checkbox-off]._focused[_ngcontent-%COMP%]:after, tui-wrapper[data-appearance=material-checkbox-off][data-state=pressed][_ngcontent-%COMP%]:after, tui-wrapper[data-appearance=material-checkbox-on]._focused[_ngcontent-%COMP%]:after, tui-wrapper[data-appearance=material-checkbox-on][data-state=pressed][_ngcontent-%COMP%]:after{opacity:.1}tui-wrapper[data-appearance=material-checkbox-on][_ngcontent-%COMP%]:after, tui-wrapper[data-appearance=material-checkbox-on][_ngcontent-%COMP%]:before{background:#6200ee;border-color:transparent}']}),O),I=n("ER+R"),A=["header","Icons set"];k=" Taiga UI uses " + "\ufffd#4\ufffd" + "" + "\ufffd#5\ufffd" + "tui-svg" + "\ufffd/#5\ufffd" + "" + "\ufffd/#4\ufffd" + " component to display SVG icons. It can show icons by name, link or source code. Several icon names are hardcoded into kit components so if you want to switch to a different icon set you would need to provide a mapping. ",T=" These are keys of following dictionaries: " + "[\ufffd#14\ufffd|\ufffd#15\ufffd]" + "tuiCoreIcons" + "[\ufffd/#14\ufffd|\ufffd/#15\ufffd]" + " and " + "[\ufffd#14\ufffd|\ufffd#15\ufffd]" + "tuiKitIcons" + "[\ufffd/#14\ufffd|\ufffd/#15\ufffd]" + ". It is not required to provide all those icons, you can gradually add the ones you need depending on components you use. ",T=s["\u0275\u0275i18nPostprocess"](T),S=" There are two ways to add icons: bundled and as assets. Bundled icons have the benefit of immediate display but increase your app size. Assets work like regular " + "[\ufffd#18\ufffd|\ufffd#19\ufffd]" + "img src=\"xxx\"" + "[\ufffd/#18\ufffd|\ufffd/#19\ufffd]" + " with all the benefits of caching. In both cases you can control color with CSS " + "[\ufffd#18\ufffd|\ufffd#19\ufffd]" + "color" + "[\ufffd/#18\ufffd|\ufffd/#19\ufffd]" + " style. ",S=s["\u0275\u0275i18nPostprocess"](S),v=" If you want to bundle your icons, you need to provide " + "[\ufffd#30\ufffd|\ufffd#32\ufffd|\ufffd#33\ufffd]" + "TUI_ICONS" + "[\ufffd/#30\ufffd|\ufffd/#32\ufffd|\ufffd/#33\ufffd]" + " token with a dictionary of name to source code. If you want to move your icons to assets you need to process them with " + "\ufffd#31\ufffd" + "this script" + "\ufffd/#31\ufffd" + ". Drop it to the folder with your icons and run " + "[\ufffd#30\ufffd|\ufffd#32\ufffd|\ufffd#33\ufffd]" + "node process-icons.js" + "[\ufffd/#30\ufffd|\ufffd/#32\ufffd|\ufffd/#33\ufffd]" + ". Then move your icons to the assets folder and provide " + "[\ufffd#30\ufffd|\ufffd#32\ufffd|\ufffd#33\ufffd]" + "TUI_ICONS_PATH" + "[\ufffd/#30\ufffd|\ufffd/#32\ufffd|\ufffd/#33\ufffd]" + " as seen in example below: ",v=s["\u0275\u0275i18nPostprocess"](v);var P=["heading","Material icons"];function M(e,t){if(1&e&&(s["\u0275\u0275elementStart"](0,"tui-doc-copy",9),s["\u0275\u0275elementStart"](1,"code"),s["\u0275\u0275text"](2),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"]()),2&e){var n=t.$implicit;s["\u0275\u0275property"]("cdkCopyToClipboard",n),s["\u0275\u0275advance"](2),s["\u0275\u0275textInterpolate"](n)}}var L,j,D=((j=function(){function e(){_classCallCheck(this,e),this.example1={TypeScript:"import {Component} from '@angular/core';\nimport {TUI_ICONS_PATH} from '@taiga-ui/core';\n\nconst MAPPER: Record<string, string> = {\n    tuiIconCalendarLarge: 'date_range-24px',\n    tuiIconTooltipLarge: 'help-24px',\n    tuiIconInfo: 'info-16px',\n    tuiIconCloseLarge: 'clear-24px',\n    tuiIconChevronLeftLarge: 'keyboard_arrow_left-24px',\n    tuiIconChevronRightLarge: 'keyboard_arrow_right-24px',\n    // and so on\n};\n\n// This assumes that icons were properly processed\nexport function iconsPath(name: string): string {\n    return `assets/icons/${MAPPER[name]}.svg#${MAPPER[name]}`;\n}\n\n@Component({\n    selector: 'tui-icon-set-example-1',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    providers: [\n        {\n            provide: TUI_ICONS_PATH,\n            useValue: iconsPath,\n        },\n    ],\n})\nexport class TuiIconSetExample1 {\n    date = null;\n}\n",HTML:'<div class="b-form">\n    <tui-notification>\n        As usual with the DI this is hierarchical. Meaning you can provide\n        different <code>TUI_ICONS_PATH</code> and use different icons across\n        your app.\n    </tui-notification>\n    <tui-input-date-range\n        class="tui-space_top-4"\n        tuiHintContent="You can use any icons you want"\n        [tuiTextfieldCleaner]="true"\n        [(ngModel)]="date"\n    >\n        Pick your favorite date range\n    </tui-input-date-range>\n</div>\n',LESS:"tui-wrapper[data-appearance='material-textfield'] {\n    background: #f5f5f5;\n    color: rgba(0, 0, 0, 0.87);\n    border-radius: 4px 4px 0 0;\n\n    &:after {\n        height: 1px;\n        background: #8e8e8e;\n        top: auto;\n        border: none;\n        transform-origin: bottom;\n        transition: all 0.3s;\n    }\n\n    &[data-state='hovered'] {\n        background: #ececec;\n\n        &:after {\n            background: #1f1f1f;\n        }\n    }\n\n    &._focused {\n        background: #dcdcdc;\n\n        // TODO: Better internal elements customization\n        label {\n            color: #6200ee !important;\n        }\n\n        &:after {\n            background: #6200ee;\n            transform: scaleY(2);\n        }\n    }\n}\n\ntui-wrapper[data-appearance='material-button'] {\n    border-radius: 4px;\n    background: #6200ee;\n    color: #fff;\n    text-transform: uppercase;\n    font-weight: bold;\n    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14%),\n        0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    transition: all 0.3s;\n\n    &[data-state='hovered'] {\n        background: #6e14ef;\n        box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n            0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n    }\n\n    &[data-state='pressed'] {\n        background: #6e14ef;\n        box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14),\n            0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n    }\n\n    &._focused {\n        background: #883df2;\n\n        &:after {\n            display: none;\n        }\n    }\n}\n\ntui-wrapper[data-appearance='material-checkbox-on'],\ntui-wrapper[data-appearance='material-checkbox-off'] {\n    color: #fff;\n\n    &:before {\n        position: absolute;\n        content: '';\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        border-radius: 2px;\n        border: 2px solid rgba(0, 0, 0, 0.54);\n        transition: all 0.3s;\n    }\n\n    &:after {\n        position: absolute;\n        top: -8px;\n        left: -8px;\n        right: -8px;\n        bottom: -8px;\n        border-radius: 100%;\n        background: #000;\n        opacity: 0;\n        transition: opacity 0.3s;\n    }\n\n    &[data-state='hovered'] {\n        &:after {\n            opacity: 0.05;\n        }\n    }\n\n    &[data-state='pressed'],\n    &._focused {\n        &:after {\n            opacity: 0.1;\n        }\n    }\n}\n\ntui-wrapper[data-appearance='material-checkbox-on'] {\n    &:before,\n    &:after {\n        background: #6200ee;\n        border-color: transparent;\n    }\n}\n"},this.names=[].concat(_toConsumableArray(Object.keys(d.tuiCoreIcons)),_toConsumableArray(Object.keys(d.tuiKitIcons))),this.expanded=!1}return _createClass(e,[{key:"toggle",value:function(){this.expanded=!this.expanded}}]),e}()).\u0275fac=function(e){return new(e||j)},j.\u0275cmp=s["\u0275\u0275defineComponent"]({type:j,selectors:[["icon-set"]],decls:37,vars:3,consts:[[6,"header"],["tuiLink","","routerLink","/tui-svg"],["tuiButton","",3,"click"],[3,"expanded"],[1,"wrapper"],[3,"cdkCopyToClipboard",4,"ngFor","ngForOf"],["status","warning"],["tuiLink","","download","process-icons.js","href","assets/process-icons.js"],["id","material",3,"content",6,"heading"],[3,"cdkCopyToClipboard"]],template:function(e,t){1&e&&(s["\u0275\u0275elementStart"](0,"tui-doc-page",0),s["\u0275\u0275i18nAttributes"](1,A),s["\u0275\u0275elementStart"](2,"p"),s["\u0275\u0275i18nStart"](3,k),s["\u0275\u0275elementStart"](4,"a",1),s["\u0275\u0275element"](5,"code"),s["\u0275\u0275elementEnd"](),s["\u0275\u0275i18nEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](6,"p"),s["\u0275\u0275elementStart"](7,"button",2),s["\u0275\u0275listener"]("click",(function(){return t.toggle()})),s["\u0275\u0275text"](8,"Show names"),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](9,"tui-expand",3),s["\u0275\u0275elementStart"](10,"div",4),s["\u0275\u0275template"](11,M,3,2,"tui-doc-copy",5),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](12,"p"),s["\u0275\u0275i18nStart"](13,T),s["\u0275\u0275element"](14,"code"),s["\u0275\u0275element"](15,"code"),s["\u0275\u0275i18nEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](16,"p"),s["\u0275\u0275i18nStart"](17,S),s["\u0275\u0275element"](18,"code"),s["\u0275\u0275element"](19,"code"),s["\u0275\u0275i18nEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](20,"tui-notification",6),s["\u0275\u0275text"](21," Make sure you mark regions in your icons that need to be colored with "),s["\u0275\u0275elementStart"](22,"code"),s["\u0275\u0275text"](23,'fill="currentColor"'),s["\u0275\u0275elementEnd"](),s["\u0275\u0275text"](24," or "),s["\u0275\u0275elementStart"](25,"code"),s["\u0275\u0275text"](26,'stroke="currentColor"'),s["\u0275\u0275elementEnd"](),s["\u0275\u0275text"](27,". "),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](28,"p"),s["\u0275\u0275i18nStart"](29,v),s["\u0275\u0275element"](30,"code"),s["\u0275\u0275element"](31,"a",7),s["\u0275\u0275element"](32,"code"),s["\u0275\u0275element"](33,"code"),s["\u0275\u0275i18nEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](34,"tui-doc-example",8),s["\u0275\u0275i18nAttributes"](35,P),s["\u0275\u0275element"](36,"tui-icon-set-example-1"),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"]()),2&e&&(s["\u0275\u0275advance"](9),s["\u0275\u0275property"]("expanded",t.expanded),s["\u0275\u0275advance"](2),s["\u0275\u0275property"]("ngForOf",t.names),s["\u0275\u0275advance"](23),s["\u0275\u0275property"]("content",t.example1))},directives:[u.a,f.a,i.e,b.a,m.a,r.s,x.a,g.a,E,I.a,a.a],styles:[".wrapper[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}"],changeDetection:0}),j),R=((L=function e(){_classCallCheck(this,e)}).\u0275mod=s["\u0275\u0275defineNgModule"]({type:L}),L.\u0275inj=s["\u0275\u0275defineInjector"]({factory:function(e){return new(e||L)},imports:[[r.c,o.FormsModule,a.c,c.h,p.TuiLinkModule,p.TuiExpandModule,p.TuiButtonModule,l.TuiInputDateRangeModule,p.TuiNotificationModule,p.TuiTextfieldControllerModule,p.TuiHintControllerModule].concat(_toConsumableArray(c.d),[i.f.forChild(Object(c.m)(D))])]}),L)}}]);