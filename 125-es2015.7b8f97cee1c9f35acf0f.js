(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{cS37:function(n,e,t){"use strict";t.r(e),t.d(e,"DocModule",(function(){return u}));var o=t("sEIs"),a=t("SVIu"),r=t("DgXe"),i=t("EM62"),p=t("OZlg");let l=(()=>{class n{constructor(){this.docReadme="# Taiga UI \u2014 Doc\n\n[![npm version](https://img.shields.io/npm/v/@taiga-ui/addon-doc.svg)](https://npmjs.com/package/@taiga-ui/addon-doc)\n[![npm bundle size](https://img.shields.io/bundlephobia/minzip/@taiga-ui/addon-doc)](https://bundlephobia.com/result?p=@taiga-ui/addon-doc)\n[![Discord](https://img.shields.io/discord/748677963142135818?color=7289DA&label=%23taiga-ui&logo=discord&logoColor=white)](https://discord.gg/Us8d8JVaTg)\n\n> Taiga UI based library for developing documentation portals for Angular libraries.\n\n## How to install\n\nInstall main packages:\n\n```\nnpm i @taiga-ui/{cdk,core,kit}\n```\n\nInstall doc:\n\n```\nnpm i @taiga-ui/addon-doc\n```\n\n## How to use\n\n1. Include `TuiDocMainModule` in your App module and use in your template:\n\n    ```html\n    <tui-doc-main>\n        You can add content here, it will be shown below navigation in the sidebar\n    </tui-doc-main>\n    ```\n\n2. Configure languages to highlight in your main module:\n\n    ```typescript\n    import * as typescript from 'highlight.js/lib/languages/typescript';\n    import {HighlightLanguage} from 'ngx-highlightjs';\n\n    /**\n     * Import every language you wish to highlight here\n     * NOTE: The name of each language must match the file name its imported from\n     */\n    export function hljsLanguages(): ReadonlyArray<HighlightLanguage> {\n        return [{name: 'typescript', func: typescript}];\n    }\n    ```\n\n    ```typescript\n    import {NgModule} from '@angular/core';\n    import {TuiDocMainModule} from '@taiga-ui/addon-doc';\n    import {hljsLanguages} from './hljsLanguages';\n    import {HIGHLIGHT_OPTIONS} from 'ngx-highlightjs';\n    import {AppComponent} from './app.component';\n\n    @NgModule({\n        bootstrap: [AppComponent],\n        imports: [TuiDocMainModule],\n        declarations: [AppComponent],\n        providers: [\n            {\n                provide: HIGHLIGHT_OPTIONS,\n                useValue: {\n                    languages: hljsLanguages,\n                },\n            },\n        ],\n    })\n    export class AppBrowserModule {}\n    ```\n\n3. Configure documentation providers:\n\n    `TUI_DOC_PAGES` \u2014 an array of pages, see `TuiDocPages` type\n\n    `TUI_DOC_LOGO` \u2014 an src for the SVG logo in the sidebar\n\n    `TUI_DOC_DEFAULT_TABS` \u2014 an array of default named for tabs on your typical page\n\n    `TUI_DOC_TITLE` \u2014 a title prefix for the browser tab\n\n    `TUI_DOC_SEE_ALSO` \u2014 a two dimensional array of related pages by their titles\n\n4. Configure routing:\n\n    ```typescript\n    import {Routes} from '@angular/router';\n\n    const appRoutes: Routes = [\n        {\n            path: 'super-page',\n            loadChildren: '../super-page/super-page.module#SuperModule',\n            data: {\n                title: 'Super Page',\n            },\n        },\n        // ...\n    ];\n    ```\n\n    > You must have title in route data in order for `TUI_DOC_SEE_ALSO` to work.\n    > It would also be automatically added to `TUI_DOC_TITLE` for browser tab title\n    > when navigating to that route.\n\n5. Create pages.\n\n    _Module:_\n\n    ```typescript\n    import {NgModule} from '@angular/core';\n    import {RouterModule} from '@angular/router';\n    import {generateRoutes, TUI_DOC_PAGE_MODULES} from '@taiga-ui/addon-doc';\n    import {SuperComponent} from './super.component';\n\n    @NgModule({\n        imports: [\n            ...TUI_DOC_PAGE_MODULES,\n            RouterModule.forChild(generateRoutes(SuperComponent)),\n        ],\n        declarations: [SuperComponent],\n        exports: [SuperComponent],\n    })\n    export class SuperModule {}\n    ```\n\n    _Component:_\n\n    ```typescript\n    import {Component} from '@angular/core';\n\n    import {default as exampleHtml} from '!!raw-loader!./examples/1/index.html';\n    import {default as exampleTs} from '!!raw-loader!./examples/1/index.ts';\n\n    @Component({\n        selector: 'super-component',\n        templateUrl: './account.template.html',\n    })\n    export class SuperComponent {\n        // Keys would be used as tabs for code example\n        readonly example = {\n            TypeScript: exampleTs,\n            HTML: exampleHtml,\n        };\n\n        readonly inputVariants = ['input 1', 'input 2'];\n    }\n    ```\n\n    _Template:_\n\n    ```html\n    <tui-doc-page header=\"Super\" package=\"SUPER-PACKAGE\" deprecated>\n        <ng-template pageTab>\n            \x3c!-- default tab name would be used --\x3e\n            This would be the content of a first tab\n\n            <tui-doc-example\n                id=\"basic-example\"\n                heading=\"Example of usage\"\n                [content]=\"example\"\n            >\n                <example-1></example-1>\n            </tui-doc-example>\n        </ng-template>\n\n        <ng-template pageTab=\"Documentation\">\n            <tui-doc-demo>\n                <super-component [input]=\"input\"></super-component>\n            </tui-doc-demo>\n            <tui-doc-documentation>\n                <ng-template\n                    documentationPropertyName=\"input\"\n                    documentationPropertyMode=\"input\"\n                    documentationPropertyType=\"T\"\n                    [documentationPropertyValues]=\"inputVariants\"\n                    [(documentationPropertyValue)]=\"input\"\n                >\n                    Some input\n                </ng-template>\n            </tui-doc-documentation>\n        </ng-template>\n    </tui-doc-page>\n    ```\n"}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275cmp=i["\u0275\u0275defineComponent"]({type:n,selectors:[["doc"]],decls:14,vars:1,consts:[["header","\u0421\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0432\u0438\u0442\u0440\u0438\u043d\u0430"],[1,"language-html"],[1,"tui-space_bottom-8"],[3,"data"]],template:function(n,e){1&n&&(i["\u0275\u0275elementStart"](0,"tui-doc-page",0),i["\u0275\u0275elementStart"](1,"p"),i["\u0275\u0275text"](2," \u041f\u0430\u043a\u0435\u0442 "),i["\u0275\u0275elementStart"](3,"strong"),i["\u0275\u0275text"](4,"Angular Doc"),i["\u0275\u0275elementEnd"](),i["\u0275\u0275text"](5," \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0432\u0438\u0442\u0440\u0438\u043d\u044b \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432, \u043a\u0430\u043a \u044d\u0442\u0430. "),i["\u0275\u0275elementEnd"](),i["\u0275\u0275elementStart"](6,"p"),i["\u0275\u0275text"](7,"\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0430\u0434\u0434\u043e\u043d \u0432 \u0441\u0432\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u0438\u0442\u0440\u0438\u043d\u044b:"),i["\u0275\u0275elementEnd"](),i["\u0275\u0275elementStart"](8,"pre",1),i["\u0275\u0275elementStart"](9,"code"),i["\u0275\u0275text"](10,"npm install @taiga-ui/addon-doc --save -E"),i["\u0275\u0275elementEnd"](),i["\u0275\u0275elementEnd"](),i["\u0275\u0275elementStart"](11,"p",2),i["\u0275\u0275text"](12," \u0414\u0430\u043b\u0435\u0435 \u0441\u043b\u0435\u0434\u0443\u0439\u0442\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u043f\u043e \u043e\u0444\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u043c\u0443 README \u043f\u0430\u043a\u0435\u0442\u0430: "),i["\u0275\u0275elementEnd"](),i["\u0275\u0275element"](13,"markdown",3),i["\u0275\u0275elementEnd"]()),2&n&&(i["\u0275\u0275advance"](13),i["\u0275\u0275property"]("data",e.docReadme))},directives:[p.a,r.a],styles:["markdown blockquote{-webkit-box-shadow:inset 4px 0 #f5f5f5;box-shadow:inset 4px 0 #f5f5f5;margin-left:0;padding-left:30px;font-style:italic}"],encapsulation:2,changeDetection:0}),n})(),u=(()=>{class n{}return n.\u0275mod=i["\u0275\u0275defineNgModule"]({type:n}),n.\u0275inj=i["\u0275\u0275defineInjector"]({factory:function(e){return new(e||n)},imports:[[r.b,...a.e,o.g.forChild(Object(a.n)(l))]]}),n})()}}]);