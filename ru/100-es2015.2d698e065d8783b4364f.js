(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{JSON:function(e,t,n){"use strict";n.r(t),n.d(t,"IconSetModule",(function(){return L}));var a=n("HHFY"),o=n("2kYt"),r=n("nIj0"),i=n("sEIs"),c=n("SVIu"),p=n("Qq0t"),d=n("dvRg"),s=n("4C5Q"),l=n("EM62"),u=n("OZlg"),x=n("yZWP"),f=n("zV1d"),b=n("fRC/"),g=n("aPft"),m=n("iyc4"),h=n("Yj6K"),_=n("RlDx"),C=n("eB8V");const w={tuiIconCalendarLarge:"date_range-24px",tuiIconTooltipLarge:"help-24px",tuiIconInfo:"info-16px",tuiIconCloseLarge:"clear-24px",tuiIconChevronLeftLarge:"keyboard_arrow_left-24px",tuiIconChevronRightLarge:"keyboard_arrow_right-24px"};function k(e){return`assets/icons/${w[e]}.svg#${w[e]}`}let y=(()=>{class e{constructor(){this.date=null}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=l["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-icon-set-example-1"]],features:[l["\u0275\u0275ProvidersFeature"]([{provide:p.TUI_ICONS_PATH,useValue:k}])],decls:8,vars:2,consts:[[1,"b-form"],["tuiHintContent","You can use any icons you want",1,"tui-space_top-4",3,"tuiTextfieldCleaner","ngModel","ngModelChange"]],template:function(e,t){1&e&&(l["\u0275\u0275elementStart"](0,"div",0),l["\u0275\u0275elementStart"](1,"tui-notification"),l["\u0275\u0275text"](2," As usual with the DI this is hierarchical. Meaning you can provide different "),l["\u0275\u0275elementStart"](3,"code"),l["\u0275\u0275text"](4,"TUI_ICONS_PATH"),l["\u0275\u0275elementEnd"](),l["\u0275\u0275text"](5," and use different icons across your app. "),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementStart"](6,"tui-input-date-range",1),l["\u0275\u0275listener"]("ngModelChange",(function(e){return t.date=e})),l["\u0275\u0275text"](7," Pick your favorite date range "),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementEnd"]()),2&e&&(l["\u0275\u0275advance"](6),l["\u0275\u0275property"]("tuiTextfieldCleaner",!0)("ngModel",t.date))},directives:[g.a,h.a,_.a,C.b,r.NgControlStatus,r.NgModel],styles:['tui-wrapper[data-appearance=material-textfield][_ngcontent-%COMP%]{background:#f5f5f5;color:rgba(0,0,0,.87);border-radius:4px 4px 0 0}tui-wrapper[data-appearance=material-textfield][_ngcontent-%COMP%]:after{height:1px;background:#8e8e8e;top:auto;border:none;-webkit-transform-origin:bottom;transform-origin:bottom;-webkit-transition:all .3s;transition:all .3s}tui-wrapper[data-appearance=material-textfield][data-state=hovered][_ngcontent-%COMP%]{background:#ececec}tui-wrapper[data-appearance=material-textfield][data-state=hovered][_ngcontent-%COMP%]:after{background:#1f1f1f}tui-wrapper[data-appearance=material-textfield]._focused[_ngcontent-%COMP%]{background:#dcdcdc}tui-wrapper[data-appearance=material-textfield]._focused[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#6200ee!important}tui-wrapper[data-appearance=material-textfield]._focused[_ngcontent-%COMP%]:after{background:#6200ee;-webkit-transform:scaleY(2);transform:scaleY(2)}tui-wrapper[data-appearance=material-button][_ngcontent-%COMP%]{border-radius:4px;background:#6200ee;color:#fff;text-transform:uppercase;font-weight:700;-webkit-box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.0014),0 1px 5px 0 rgba(0,0,0,.12);box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.0014),0 1px 5px 0 rgba(0,0,0,.12);-webkit-transition:all .3s;transition:all .3s}tui-wrapper[data-appearance=material-button][data-state=hovered][_ngcontent-%COMP%]{background:#6e14ef;-webkit-box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12);box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}tui-wrapper[data-appearance=material-button][data-state=pressed][_ngcontent-%COMP%]{background:#6e14ef;-webkit-box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}tui-wrapper[data-appearance=material-button]._focused[_ngcontent-%COMP%]{background:#883df2}tui-wrapper[data-appearance=material-button]._focused[_ngcontent-%COMP%]:after{display:none}tui-wrapper[data-appearance=material-checkbox-off][_ngcontent-%COMP%], tui-wrapper[data-appearance=material-checkbox-on][_ngcontent-%COMP%]{color:#fff}tui-wrapper[data-appearance=material-checkbox-off][_ngcontent-%COMP%]:before, tui-wrapper[data-appearance=material-checkbox-on][_ngcontent-%COMP%]:before{position:absolute;content:"";top:0;left:0;right:0;bottom:0;border-radius:2px;border:2px solid rgba(0,0,0,.54);-webkit-transition:all .3s;transition:all .3s}tui-wrapper[data-appearance=material-checkbox-off][_ngcontent-%COMP%]:after, tui-wrapper[data-appearance=material-checkbox-on][_ngcontent-%COMP%]:after{position:absolute;top:-8px;left:-8px;right:-8px;bottom:-8px;border-radius:100%;background:#000;opacity:0;-webkit-transition:opacity .3s;transition:opacity .3s}tui-wrapper[data-appearance=material-checkbox-off][data-state=hovered][_ngcontent-%COMP%]:after, tui-wrapper[data-appearance=material-checkbox-on][data-state=hovered][_ngcontent-%COMP%]:after{opacity:.05}tui-wrapper[data-appearance=material-checkbox-off]._focused[_ngcontent-%COMP%]:after, tui-wrapper[data-appearance=material-checkbox-off][data-state=pressed][_ngcontent-%COMP%]:after, tui-wrapper[data-appearance=material-checkbox-on]._focused[_ngcontent-%COMP%]:after, tui-wrapper[data-appearance=material-checkbox-on][data-state=pressed][_ngcontent-%COMP%]:after{opacity:.1}tui-wrapper[data-appearance=material-checkbox-on][_ngcontent-%COMP%]:after, tui-wrapper[data-appearance=material-checkbox-on][_ngcontent-%COMP%]:before{background:#6200ee;border-color:transparent}']}),e})();var T=n("ER+R");const O=["header","Icons set"];var S,E,I,M;S=" Taiga UI uses " + "\ufffd#4\ufffd" + "" + "\ufffd#5\ufffd" + "tui-svg" + "\ufffd/#5\ufffd" + "" + "\ufffd/#4\ufffd" + " component to display SVG icons. It can show icons by name, link or source code. Several icon names are hardcoded into kit components so if you want to switch to a different icon set you would need to provide a mapping. ",E=" These are keys of following dictionaries: " + "[\ufffd#14\ufffd|\ufffd#15\ufffd]" + "tuiCoreIcons" + "[\ufffd/#14\ufffd|\ufffd/#15\ufffd]" + " and " + "[\ufffd#14\ufffd|\ufffd#15\ufffd]" + "tuiKitIcons" + "[\ufffd/#14\ufffd|\ufffd/#15\ufffd]" + ". It is not required to provide all those icons, you can gradually add the ones you need depending on components you use. ",E=l["\u0275\u0275i18nPostprocess"](E),I=" There are two ways to add icons: bundled and as assets. Bundled icons have the benefit of immediate display but increase your app size. Assets work like regular " + "[\ufffd#18\ufffd|\ufffd#19\ufffd]" + "img src=\"xxx\"" + "[\ufffd/#18\ufffd|\ufffd/#19\ufffd]" + " with all the benefits of caching. In both cases you can control color with CSS " + "[\ufffd#18\ufffd|\ufffd#19\ufffd]" + "color" + "[\ufffd/#18\ufffd|\ufffd/#19\ufffd]" + " style. ",I=l["\u0275\u0275i18nPostprocess"](I),M=" If you want to bundle your icons, you need to provide " + "[\ufffd#30\ufffd|\ufffd#32\ufffd|\ufffd#33\ufffd]" + "TUI_ICONS" + "[\ufffd/#30\ufffd|\ufffd/#32\ufffd|\ufffd/#33\ufffd]" + " token with a dictionary of name to source code. If you want to move your icons to assets you need to process them with " + "\ufffd#31\ufffd" + "this script" + "\ufffd/#31\ufffd" + ". Drop it to the folder with your icons and run " + "[\ufffd#30\ufffd|\ufffd#32\ufffd|\ufffd#33\ufffd]" + "node process-icons.js" + "[\ufffd/#30\ufffd|\ufffd/#32\ufffd|\ufffd/#33\ufffd]" + ". Then move your icons to the assets folder and provide " + "[\ufffd#30\ufffd|\ufffd#32\ufffd|\ufffd#33\ufffd]" + "TUI_ICONS_PATH" + "[\ufffd/#30\ufffd|\ufffd/#32\ufffd|\ufffd/#33\ufffd]" + " as seen in example below: ",M=l["\u0275\u0275i18nPostprocess"](M);const v=["heading","Material icons"];function P(e,t){if(1&e&&(l["\u0275\u0275elementStart"](0,"tui-doc-copy",9),l["\u0275\u0275elementStart"](1,"code"),l["\u0275\u0275text"](2),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementEnd"]()),2&e){const e=t.$implicit;l["\u0275\u0275property"]("cdkCopyToClipboard",e),l["\u0275\u0275advance"](2),l["\u0275\u0275textInterpolate"](e)}}let A=(()=>{class e{constructor(){this.example1={TypeScript:"import {Component} from '@angular/core';\nimport {TUI_ICONS_PATH} from '@taiga-ui/core';\n\nconst MAPPER: Record<string, string> = {\n    tuiIconCalendarLarge: 'date_range-24px',\n    tuiIconTooltipLarge: 'help-24px',\n    tuiIconInfo: 'info-16px',\n    tuiIconCloseLarge: 'clear-24px',\n    tuiIconChevronLeftLarge: 'keyboard_arrow_left-24px',\n    tuiIconChevronRightLarge: 'keyboard_arrow_right-24px',\n    // and so on\n};\n\n// This assumes that icons were properly processed\nexport function iconsPath(name: string): string {\n    return `assets/icons/${MAPPER[name]}.svg#${MAPPER[name]}`;\n}\n\n@Component({\n    selector: 'tui-icon-set-example-1',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    providers: [\n        {\n            provide: TUI_ICONS_PATH,\n            useValue: iconsPath,\n        },\n    ],\n})\nexport class TuiIconSetExample1 {\n    date = null;\n}\n",HTML:'<div class="b-form">\n    <tui-notification>\n        As usual with the DI this is hierarchical. Meaning you can provide\n        different <code>TUI_ICONS_PATH</code> and use different icons across\n        your app.\n    </tui-notification>\n    <tui-input-date-range\n        class="tui-space_top-4"\n        tuiHintContent="You can use any icons you want"\n        [tuiTextfieldCleaner]="true"\n        [(ngModel)]="date"\n    >\n        Pick your favorite date range\n    </tui-input-date-range>\n</div>\n',LESS:"tui-wrapper[data-appearance='material-textfield'] {\n    background: #f5f5f5;\n    color: rgba(0, 0, 0, 0.87);\n    border-radius: 4px 4px 0 0;\n\n    &:after {\n        height: 1px;\n        background: #8e8e8e;\n        top: auto;\n        border: none;\n        transform-origin: bottom;\n        transition: all 0.3s;\n    }\n\n    &[data-state='hovered'] {\n        background: #ececec;\n\n        &:after {\n            background: #1f1f1f;\n        }\n    }\n\n    &._focused {\n        background: #dcdcdc;\n\n        // TODO: Better internal elements customization\n        label {\n            color: #6200ee !important;\n        }\n\n        &:after {\n            background: #6200ee;\n            transform: scaleY(2);\n        }\n    }\n}\n\ntui-wrapper[data-appearance='material-button'] {\n    border-radius: 4px;\n    background: #6200ee;\n    color: #fff;\n    text-transform: uppercase;\n    font-weight: bold;\n    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14%),\n        0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    transition: all 0.3s;\n\n    &[data-state='hovered'] {\n        background: #6e14ef;\n        box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n            0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n    }\n\n    &[data-state='pressed'] {\n        background: #6e14ef;\n        box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14),\n            0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n    }\n\n    &._focused {\n        background: #883df2;\n\n        &:after {\n            display: none;\n        }\n    }\n}\n\ntui-wrapper[data-appearance='material-checkbox-on'],\ntui-wrapper[data-appearance='material-checkbox-off'] {\n    color: #fff;\n\n    &:before {\n        position: absolute;\n        content: '';\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        border-radius: 2px;\n        border: 2px solid rgba(0, 0, 0, 0.54);\n        transition: all 0.3s;\n    }\n\n    &:after {\n        position: absolute;\n        top: -8px;\n        left: -8px;\n        right: -8px;\n        bottom: -8px;\n        border-radius: 100%;\n        background: #000;\n        opacity: 0;\n        transition: opacity 0.3s;\n    }\n\n    &[data-state='hovered'] {\n        &:after {\n            opacity: 0.05;\n        }\n    }\n\n    &[data-state='pressed'],\n    &._focused {\n        &:after {\n            opacity: 0.1;\n        }\n    }\n}\n\ntui-wrapper[data-appearance='material-checkbox-on'] {\n    &:before,\n    &:after {\n        background: #6200ee;\n        border-color: transparent;\n    }\n}\n"},this.names=[...Object.keys(s.tuiCoreIcons),...Object.keys(s.tuiKitIcons)],this.expanded=!1}toggle(){this.expanded=!this.expanded}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=l["\u0275\u0275defineComponent"]({type:e,selectors:[["icon-set"]],decls:37,vars:3,consts:[[6,"header"],["tuiLink","","routerLink","/tui-svg"],["tuiButton","",3,"click"],[3,"expanded"],[1,"wrapper"],[3,"cdkCopyToClipboard",4,"ngFor","ngForOf"],["status","warning"],["tuiLink","","download","process-icons.js","href","assets/process-icons.js"],["id","material",3,"content",6,"heading"],[3,"cdkCopyToClipboard"]],template:function(e,t){1&e&&(l["\u0275\u0275elementStart"](0,"tui-doc-page",0),l["\u0275\u0275i18nAttributes"](1,O),l["\u0275\u0275elementStart"](2,"p"),l["\u0275\u0275i18nStart"](3,S),l["\u0275\u0275elementStart"](4,"a",1),l["\u0275\u0275element"](5,"code"),l["\u0275\u0275elementEnd"](),l["\u0275\u0275i18nEnd"](),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementStart"](6,"p"),l["\u0275\u0275elementStart"](7,"button",2),l["\u0275\u0275listener"]("click",(function(){return t.toggle()})),l["\u0275\u0275text"](8,"Show names"),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementStart"](9,"tui-expand",3),l["\u0275\u0275elementStart"](10,"div",4),l["\u0275\u0275template"](11,P,3,2,"tui-doc-copy",5),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementStart"](12,"p"),l["\u0275\u0275i18nStart"](13,E),l["\u0275\u0275element"](14,"code"),l["\u0275\u0275element"](15,"code"),l["\u0275\u0275i18nEnd"](),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementStart"](16,"p"),l["\u0275\u0275i18nStart"](17,I),l["\u0275\u0275element"](18,"code"),l["\u0275\u0275element"](19,"code"),l["\u0275\u0275i18nEnd"](),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementStart"](20,"tui-notification",6),l["\u0275\u0275text"](21," Make sure you mark regions in your icons that need to be colored with "),l["\u0275\u0275elementStart"](22,"code"),l["\u0275\u0275text"](23,'fill="currentColor"'),l["\u0275\u0275elementEnd"](),l["\u0275\u0275text"](24," or "),l["\u0275\u0275elementStart"](25,"code"),l["\u0275\u0275text"](26,'stroke="currentColor"'),l["\u0275\u0275elementEnd"](),l["\u0275\u0275text"](27,". "),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementStart"](28,"p"),l["\u0275\u0275i18nStart"](29,M),l["\u0275\u0275element"](30,"code"),l["\u0275\u0275element"](31,"a",7),l["\u0275\u0275element"](32,"code"),l["\u0275\u0275element"](33,"code"),l["\u0275\u0275i18nEnd"](),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementStart"](34,"tui-doc-example",8),l["\u0275\u0275i18nAttributes"](35,v),l["\u0275\u0275element"](36,"tui-icon-set-example-1"),l["\u0275\u0275elementEnd"](),l["\u0275\u0275elementEnd"]()),2&e&&(l["\u0275\u0275advance"](9),l["\u0275\u0275property"]("expanded",t.expanded),l["\u0275\u0275advance"](2),l["\u0275\u0275property"]("ngForOf",t.names),l["\u0275\u0275advance"](23),l["\u0275\u0275property"]("content",t.example1))},directives:[u.a,x.a,i.e,f.a,b.a,o.s,g.a,m.a,y,T.a,a.a],styles:[".wrapper[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}"],changeDetection:0}),e})(),L=(()=>{class e{}return e.\u0275mod=l["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=l["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},imports:[[o.c,r.FormsModule,a.c,c.h,p.TuiLinkModule,p.TuiExpandModule,p.TuiButtonModule,d.TuiInputDateRangeModule,p.TuiNotificationModule,p.TuiTextfieldControllerModule,p.TuiHintControllerModule,...c.d,i.f.forChild(Object(c.m)(A))]]}),e})()}}]);