(self.webpackChunk_taiga_ui_components=self.webpackChunk_taiga_ui_components||[]).push([[47388],{47388:(e,n,t)=>{t.r(n),t.d(n,{IconsMappingModule:()=>k});var o=t(50506),i=t(12057),s=t(24751),a=t(33982),c=t(73961),u=t(73349),r=t(62689),d=t(67065),p=t(74788),l=t(43560),g=t(66596),h=t(76189),Z=t(88618),m=t(33772),_=t(92483),f=t(48706),T=t(64374);const y=Object.assign(Object.assign({},d.tuiKitIcons),{tuiIconCalendarLarge:"date_range-24px",tuiIconHelpCircle:"help-24px",tuiIconInfo:"info-16px",tuiIconXLarge:"clear-24px",tuiIconChevronLeftLarge:"keyboard_arrow_left-24px",tuiIconChevronRightLarge:"keyboard_arrow_right-24px"});let U=(()=>{class e{constructor(){this.date=null}}return e.ɵfac=function(n){return new(n||e)},e.ɵcmp=p.Xpm({type:e,selectors:[["tui-icons-mapping-example-1"]],features:[p._Bn([(0,u.tuiSvgOptionsProvider)({path:e=>`assets/icons/${y[e]}.svg#${y[e]}`})])],decls:3,vars:2,consts:[[1,"b-form"],["tuiHintContent","You can use any icons you want",1,"tui-space_top-4",3,"tuiTextfieldCleaner","ngModel","ngModelChange"]],template:function(e,n){1&e&&(p.TgZ(0,"div",0),p.TgZ(1,"tui-input-date-range",1),p.NdJ("ngModelChange",(function(e){return n.date=e})),p._uU(2," Pick your favorite date range "),p.qZA(),p.qZA()),2&e&&(p.xp6(1),p.Q6J("tuiTextfieldCleaner",!0)("ngModel",n.date))},directives:[_.H,f.d,T.b,s.JJ,s.On],encapsulation:2}),e})();var x=t(34880);let b=(()=>{class e{}return e.ɵfac=function(n){return new(n||e)},e.ɵcmp=p.Xpm({type:e,selectors:[["tui-icons-mapping-example-3"]],decls:20,vars:0,consts:[["tuiLink","","routerLink","/icons/customization"],["src","tuiIconPhone"],["src","assets/icons/polygon.svg"]],template:function(e,n){1&e&&(p._uU(0,"There are two types of SVG gradients:\n"),p.TgZ(1,"code"),p._uU(2,"linear"),p.qZA(),p._uU(3,"\nand\n"),p.TgZ(4,"code"),p._uU(5,"radial"),p.qZA(),p._uU(6,"\n. They are defined separately from where they are used, which promotes reusability. But you should remember that such\nsvg files can't be reusable with tui-svg inside\n"),p.TgZ(7,"code"),p._uU(8,"use"),p.qZA(),p._uU(9,"\ntag. For workaround you need to provide (or\n"),p.TgZ(10,"a",0),p._uU(11," override\n"),p.qZA(),p._uU(12,"\n) src full path to svg file. "),p._UZ(13,"br"),p._UZ(14,"br"),p._uU(15," non gradient icon:\n"),p._UZ(16,"tui-svg",1),p._UZ(17,"br"),p._uU(18,"\ngradient icon:\n"),p._UZ(19,"tui-svg",2))},directives:[g.V,a.yS,x.P],encapsulation:2}),e})();var v=t(83074),w=t(98781);function q(e,n){if(1&e&&(p.TgZ(0,"tui-doc-copy",14),p.TgZ(1,"code"),p._uU(2),p.qZA(),p.qZA()),2&e){const e=n.$implicit;p.Q6J("cdkCopyToClipboard",e),p.xp6(2),p.Oqu(e)}}let A=(()=>{class e{constructor(){this.options=t.e(93362).then(t.t.bind(t,93362,17)),this.example1={HTML:t.e(85886).then(t.t.bind(t,85886,17)),TypeScript:t.e(78900).then(t.t.bind(t,78900,17)),"./assets/icons/keyboard_arrow_right-24px.svg":t.e(33339).then(t.t.bind(t,33339,17))},this.example2={"process-icons.js":t.e(42759).then(t.t.bind(t,42759,17)),"process-icons.ts":t.e(1141).then(t.t.bind(t,1141,17))},this.example3={HTML:t.e(74437).then(t.t.bind(t,74437,17)),TypeScript:t.e(3095).then(t.t.bind(t,3095,17)),"./assets/icons/polygon.svg":t.e(79571).then(t.t.bind(t,79571,17))},this.names=Object.keys(d.tuiKitIcons),this.expanded=!1}toggle(){this.expanded=!this.expanded}}return e.ɵfac=function(n){return new(n||e)},e.ɵcmp=p.Xpm({type:e,selectors:[["icons-mapping"]],decls:69,vars:6,consts:[["header","Icons mapping"],["tuiLink","","routerLink","/icons/overview"],["tuiButton","","size","xs","type","button",3,"click"],[3,"expanded"],[1,"wrapper"],[3,"cdkCopyToClipboard",4,"ngFor","ngForOf"],["id","material","heading","Material icons",3,"content"],["id","processing","heading","Reusable SVG",3,"content"],["width","100%","src","assets/images/mapping.jpg","alt","info",1,"tui-space_bottom-4"],["id","gradient","heading","Gradients in SVG",3,"content"],["id","bundled","heading","Bundled icons"],["tuiLink","","routerLink","/icons/bundled"],["id","di","heading","DI options"],["filename","app.module.ts",3,"code"],[3,"cdkCopyToClipboard"]],template:function(e,n){1&e&&(p.TgZ(0,"tui-doc-page",0),p.TgZ(1,"p"),p._uU(2," Taiga UI uses "),p.TgZ(3,"a",1),p.TgZ(4,"code"),p._uU(5,"tui-svg"),p.qZA(),p.qZA(),p._uU(6," component to display SVG icons. It can show icons by name, link or source code. Several icon names are hardcoded into kit components. "),p.qZA(),p.TgZ(7,"p"),p.TgZ(8,"button",2),p.NdJ("click",(function(){return n.toggle()})),p._uU(9," Show predefined names "),p.qZA(),p.qZA(),p.TgZ(10,"tui-expand",3),p.TgZ(11,"div",4),p.YNc(12,q,3,2,"tui-doc-copy",5),p.qZA(),p.qZA(),p.TgZ(13,"p"),p._uU(14," These predefined names are in "),p.TgZ(15,"code"),p._uU(16,"tuiKitIcons"),p.qZA(),p._uU(17," (included "),p.TgZ(18,"code"),p._uU(19,"tuiCoreIcons"),p.qZA(),p._uU(20," ) dictionary. It is not required to provide all those icons, you can gradually add the ones you need depending on components you use. So if you want to switch to a different icon set you would need to provide own mapping, for example Material icons: "),p.qZA(),p.TgZ(21,"tui-doc-example",6),p._UZ(22,"tui-icons-mapping-example-1"),p.qZA(),p.TgZ(23,"tui-doc-example",7),p._UZ(24,"img",8),p._UZ(25,"br"),p._uU(26," By default all icons from the "),p.TgZ(27,"a",1),p._uU(28," icons pack "),p.qZA(),p._uU(29," are already reusable. But if you use your icons, as you can see in the previous example with the "),p.TgZ(30,"code"),p._uU(31,"keyboard_arrow_right-24px.svg"),p.qZA(),p._uU(32," icon, then you need to prepare svg file especially. In order to prepare such svg files, you can use our preprocessing script from "),p.TgZ(33,"code"),p._uU(34,"@taiga-ui/icons/scripts"),p.qZA(),p._uU(35," . In "),p.TgZ(36,"code"),p._uU(37,"tui-svg"),p.qZA(),p._uU(38," we use tag "),p.TgZ(39,"code"),p._uU(40,"use"),p.qZA(),p._uU(41," . The "),p.TgZ(42,"code"),p._uU(43,"use"),p.qZA(),p._uU(44," element takes nodes from within the SVG document, and duplicates them somewhere else. The effect is the same as if the nodes were deeply cloned into a non-exposed DOM, then pasted where the use element is, much like cloned template elements. This approach allows can help browser fast rendering with effectively reuse of cached svg. "),p.qZA(),p.TgZ(45,"tui-doc-example",9),p._UZ(46,"tui-icons-mapping-example-3"),p.qZA(),p.TgZ(47,"tui-doc-example",10),p.TgZ(48,"p"),p._uU(49," There are two ways to add icons: "),p.TgZ(50,"code"),p._uU(51,"bundled"),p.qZA(),p._uU(52," and as "),p.TgZ(53,"code"),p._uU(54,"assets"),p.qZA(),p._uU(55," (default). Bundled icons have the benefit of immediate display but increase your app size. Assets work like regular "),p.TgZ(56,"code"),p._uU(57,'img src="xxx"'),p.qZA(),p._uU(58," with all the benefits of network caching. In both cases you can control color with CSS "),p.TgZ(59,"code"),p._uU(60,"color"),p.qZA(),p._uU(61," style. Hardcoded icons into a js bundle can be useful if your application does not have access to the network. "),p.qZA(),p.TgZ(62,"p"),p.TgZ(63,"a",11),p._uU(64," If you want to embed icons in a js bundle use "),p.TgZ(65,"code"),p._uU(66,"SvgService"),p.qZA(),p.qZA(),p.qZA(),p.qZA(),p.TgZ(67,"tui-doc-example",12),p._UZ(68,"tui-doc-code",13),p.qZA(),p.qZA()),2&e&&(p.xp6(10),p.Q6J("expanded",n.expanded),p.xp6(2),p.Q6J("ngForOf",n.names),p.xp6(9),p.Q6J("content",n.example1),p.xp6(2),p.Q6J("content",n.example2),p.xp6(22),p.Q6J("content",n.example3),p.xp6(23),p.Q6J("code",n.options))},directives:[l.q,g.V,a.yS,h.v,Z.S,i.sg,m.f,U,b,v.c,w.f,o.i3],styles:[".wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}.sanitizer-example[_ngcontent-%COMP%]{display:block;padding-top:3.5rem}"],changeDetection:0}),e})(),k=(()=>{class e{}return e.ɵfac=function(n){return new(n||e)},e.ɵmod=p.oAB({type:e}),e.ɵinj=p.cJS({imports:[[i.ez,s.u5,o.Iq,c.k7,u.TuiLinkModule,u.TuiExpandModule,u.TuiButtonModule,r.TuiInputDateRangeModule,u.TuiTextfieldControllerModule,c.fV,u.TuiSvgModule,a.Bz.forChild((0,c.Ve)(A))]]}),e})()}}]);