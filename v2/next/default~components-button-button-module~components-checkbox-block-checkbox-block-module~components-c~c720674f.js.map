{"version":3,"sources":["./src/modules/components/abstract/control.ts","./src/modules/components/abstract/interactive.ts","./src/modules/components/abstract/textfield-controller-documentation/textfield-controller-documentation.component.ts","./src/modules/components/abstract/textfield-controller-documentation/textfield-controller-documentation.template.html","./src/modules/components/abstract/textfield-controller-documentation/textfield-controller-documentation.module.ts"],"names":[],"mappings":"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","file":"default~components-button-button-module~components-checkbox-block-checkbox-block-module~components-c~c720674f.js","sourcesContent":["import {AbstractControl} from '@angular/forms';\nimport {TuiAutofillFieldName, TuiInputModeT, TuiInputTypeT} from '@taiga-ui/cdk';\nimport {\n    DEFAULT_MAX_HEIGHT,\n    DEFAULT_MIN_HEIGHT,\n    TuiDirection,\n    TuiDropdownWidthT,\n    TuiHintModeT,\n    TuiHorizontalDirection,\n    TuiSizeL,\n    TuiSizeS,\n    TuiVerticalDirection,\n} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nimport {ExampleTuiDropdown} from './dropdown-controller-documentation/dropdown-controller-documentation.component';\nimport {AbstractExampleTuiInteractive} from './interactive';\n\nconst CUSTOM_SVG = `<svg xmlns=\"http://www.w3.org/2000/svg\"\nwidth=\"24px\"\nheight=\"24px\"\nviewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M10,17v1c0,1.1,0.9,2,2,2h0c1.1,0,2-0.9,2-2l0-1h3.6L17,15.2V11c0-2.2-1.4-4-3-4h-1V5\n   c0-0.6-0.4-1-1-1s-1,0.4-1,1v2h-1c-1.3,0-3,1.9-3,4v4.2L6.4,17H10z M3.6,19L5,14.8V11c0-2.7,1.9-5.2,4-5.8V5c0-1.7,1.3-3,3-3\n   s3,1.3,3,3v0.1c2.3,0.6,4,3,4,5.9v3.8l1.4,4.2h-4.5c-0.4,1.8-2,3-3.9,3c-1.8,0-3.4-1.2-3.9-3H3.6z\"/>\n</svg>`;\n\nconst CUSTOM_SVG_NAME = `Bell`;\n\ntype TuiPossibleGenericType = any;\n\nexport abstract class AbstractExampleTuiControl\n    extends AbstractExampleTuiInteractive\n    implements ExampleTuiDropdown\n{\n    abstract readonly control: AbstractControl;\n\n    readonly sizeVariants: ReadonlyArray<TuiSizeS | TuiSizeL> = [`s`, `m`, `l`];\n\n    readonly hintContentVariants: readonly string[] = [`Some content`];\n\n    readonly hintDirectionVariants: readonly TuiDirection[] = [\n        `left`,\n        `right`,\n        `bottom-left`,\n        `bottom-right`,\n        `bottom-middle`,\n        `top-left`,\n        `top-right`,\n        `top-middle`,\n    ];\n\n    readonly hintModeVariants: readonly TuiHintModeT[] = [`error`, `onDark`];\n\n    readonly typeVariants: readonly TuiInputTypeT[] = [\n        `text`,\n        `email`,\n        `password`,\n        `tel`,\n        `url`,\n    ];\n\n    readonly maxLengthVariants: readonly TuiPossibleGenericType[] = [10];\n\n    readonly autocompleteVariants: Array<TuiAutofillFieldName | ''> = [\n        ``,\n        `off`,\n        `cc-name`,\n        `cc-number`,\n        `cc-exp-month`,\n        `cc-exp-year`,\n        `cc-type`,\n        `given-name`,\n        `additional-name`,\n        `family-name`,\n        `username`,\n        `email`,\n        `street-address`,\n        `postal-code`,\n        `country-name`,\n    ];\n\n    readonly inputModeVariants: readonly TuiInputModeT[] = [`text`, `numeric`];\n\n    readonly customContentVariants: PolymorpheusContent[] = [\n        CUSTOM_SVG_NAME,\n        `tuiIconSearchLarge`,\n        `tuiIconCalendarLarge`,\n        `tuiIconVisaMono`,\n        `tuiIconMastercardMono`,\n    ];\n\n    customContentSelected: PolymorpheusContent | null = null;\n\n    inputMode = this.inputModeVariants[0];\n\n    autocomplete: TuiAutofillFieldName | '' = ``;\n\n    maxLength: TuiPossibleGenericType | null = null;\n\n    type: TuiInputTypeT = this.typeVariants[0];\n\n    cleaner = false;\n\n    pseudoInvalid: boolean | null = null;\n\n    success = false;\n\n    readOnly = false;\n\n    labelOutside = false;\n\n    size: TuiSizeS | TuiSizeL = this.sizeVariants[2];\n\n    exampleText = ``;\n\n    maxHeight: number | null = null;\n\n    hintContent: string | null = null;\n\n    hintDirection: TuiDirection = this.hintDirectionVariants[2];\n\n    hintMode: TuiHintModeT | null = null;\n\n    readonly dropdownAlignVariants: readonly TuiHorizontalDirection[] = [`left`, `right`];\n\n    dropdownAlign: TuiHorizontalDirection = this.dropdownAlignVariants[0];\n\n    readonly dropdownLimitWidthVariants: readonly TuiDropdownWidthT[] = [`fixed`, `min`];\n\n    dropdownLimitWidth: TuiDropdownWidthT = this.dropdownLimitWidthVariants[0];\n\n    readonly dropdownDirectionVariants: readonly TuiVerticalDirection[] = [\n        `top`,\n        `bottom`,\n    ];\n\n    dropdownDirection: TuiVerticalDirection | null = null;\n\n    dropdownSided = false;\n\n    dropdownMinHeight = DEFAULT_MIN_HEIGHT;\n\n    dropdownMaxHeight = DEFAULT_MAX_HEIGHT;\n\n    get customContent(): PolymorpheusContent | null {\n        return this.customContentSelected === CUSTOM_SVG_NAME\n            ? CUSTOM_SVG\n            : this.customContentSelected;\n    }\n\n    get disabled(): boolean {\n        return this.control.disabled;\n    }\n\n    set disabled(value: boolean) {\n        if (value) {\n            this.control.disable();\n        } else {\n            this.control.enable();\n        }\n    }\n}\n","export abstract class AbstractExampleTuiInteractive {\n    readonly pseudoVariants: readonly boolean[] = [false, true];\n\n    focusable = true;\n\n    pseudoFocused: boolean | null = null;\n\n    pseudoHovered: boolean | null = null;\n\n    pseudoPressed: boolean | null = null;\n}\n","import {Component, Inject} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\n\nimport {AbstractExampleTuiControl} from '../control';\nimport {ABSTRACT_PROPS_ACCESSOR} from '../inherited-documentation/abstract-props-accessor';\n\n@Component({\n    selector: `textfield-controller-documentation`,\n    templateUrl: `./textfield-controller-documentation.template.html`,\n    changeDetection,\n})\nexport class TextfieldControllerDocumentationComponent {\n    constructor(\n        @Inject(ABSTRACT_PROPS_ACCESSOR)\n        readonly documentedComponent: AbstractExampleTuiControl,\n    ) {}\n}\n","<h6\n    i18n\n    class=\"tui-text_h6\"\n>\n    Can be expanded with\n    <a\n        tuiLink\n        target=\"_blank\"\n        routerLink=\"/directives/textfield-controller\"\n    >\n        TuiTextfieldController\n    </a>\n</h6>\n\n<p>\n    Requires you to import\n    <code>TuiTextfieldControllerModule</code>\n</p>\n\n<tui-doc-documentation>\n    <ng-template\n        i18n\n        documentationPropertyName=\"tuiTextfieldAutocomplete\"\n        documentationPropertyMode=\"input\"\n        documentationPropertyType=\"TuiAutofillFieldName | null\"\n        [documentationPropertyValues]=\"documentedComponent.autocompleteVariants\"\n        [(documentationPropertyValue)]=\"documentedComponent.autocomplete\"\n    >\n        <code>autocomplete</code>\n        attribute for a native input (\n        <a\n            tuiLink\n            target=\"_blanl\"\n            href=\"https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#inappropriate-for-the-control\"\n        >\n            see names\n        </a>\n        )\n    </ng-template>\n    <ng-template\n        i18n\n        documentationPropertyName=\"tuiTextfieldCleaner\"\n        documentationPropertyMode=\"input\"\n        documentationPropertyType=\"boolean\"\n        [(documentationPropertyValue)]=\"documentedComponent.cleaner\"\n    >\n        Shows a cross to reset a value\n    </ng-template>\n    <ng-template\n        i18n\n        documentationPropertyName=\"tuiTextfieldCustomContent\"\n        documentationPropertyMode=\"input\"\n        documentationPropertyType=\"PolymorpheusContent\"\n        [documentationPropertyValues]=\"documentedComponent.customContentVariants\"\n        [(documentationPropertyValue)]=\"documentedComponent.customContentSelected\"\n    >\n        Right content (e.g. avatar with maximum size 32x32px). If it gets a string, it is inserted as\n        <code>src</code>\n        or as icon name into\n        <a\n            routerLink=\"/components/svg\"\n            tuiLink\n        >\n            tui-svg\n        </a>\n    </ng-template>\n    <ng-template\n        i18n\n        documentationPropertyName=\"tuiTextfieldExampleText\"\n        documentationPropertyMode=\"input\"\n        documentationPropertyType=\"string\"\n        [(documentationPropertyValue)]=\"documentedComponent.exampleText\"\n    >\n        Example text shown on empty focused input\n    </ng-template>\n    <ng-template\n        i18n\n        documentationPropertyName=\"tuiTextfieldInputMode\"\n        documentationPropertyMode=\"input\"\n        documentationPropertyType=\"TuiInputModeT\"\n        [documentationPropertyValues]=\"documentedComponent.inputModeVariants\"\n        [(documentationPropertyValue)]=\"documentedComponent.inputMode\"\n    >\n        <code>inputmode</code>\n        attribute for a native input. You can use it to set screen keyboard view on mobile devices\n    </ng-template>\n    <ng-template\n        i18n\n        documentationPropertyName=\"tuiTextfieldLabelOutside\"\n        documentationPropertyMode=\"input\"\n        documentationPropertyType=\"boolean\"\n        [(documentationPropertyValue)]=\"documentedComponent.labelOutside\"\n    >\n        Label is outside a component and made with\n        <a\n            tuiLink\n            routerLink=\"/components/label\"\n        >\n            <code>Label</code>\n        </a>\n        <p>\n            (\n            <code>labelOutside = false</code>\n            does not work together with\n            <code>size === 's'</code>\n            : for s-size inputs use only outside labels)\n        </p>\n    </ng-template>\n    <ng-template\n        i18n\n        documentationPropertyName=\"tuiTextfieldMaxLength\"\n        documentationPropertyMode=\"input\"\n        documentationPropertyType=\"number | null\"\n        [documentationPropertyValues]=\"documentedComponent.maxLengthVariants\"\n        [(documentationPropertyValue)]=\"documentedComponent.maxLength\"\n    >\n        Maximum number of symbols to type. Does not with with mask together\n    </ng-template>\n    <ng-template\n        i18n\n        documentationPropertyName=\"tuiTextfieldSize\"\n        documentationPropertyMode=\"input\"\n        documentationPropertyType=\"TuiSizeS | TuiSizeL\"\n        [documentationPropertyValues]=\"documentedComponent.sizeVariants\"\n        [(documentationPropertyValue)]=\"documentedComponent.size\"\n    >\n        Size\n    </ng-template>\n    <ng-template\n        i18n\n        documentationPropertyName=\"tuiTextfieldType\"\n        documentationPropertyMode=\"input\"\n        documentationPropertyType=\"TuiInputTypeT\"\n        [documentationPropertyValues]=\"documentedComponent.typeVariants\"\n        [(documentationPropertyValue)]=\"documentedComponent.type\"\n    >\n        <code>type</code>\n        attribute for a native input\n    </ng-template>\n</tui-doc-documentation>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {TuiDocDocumentationModule} from '@taiga-ui/addon-doc';\nimport {TuiLinkModule} from '@taiga-ui/core';\n\nimport {TextfieldControllerDocumentationComponent} from './textfield-controller-documentation.component';\n\n@NgModule({\n    imports: [CommonModule, RouterModule, TuiDocDocumentationModule, TuiLinkModule],\n    declarations: [TextfieldControllerDocumentationComponent],\n    exports: [TextfieldControllerDocumentationComponent],\n})\nexport class TextfieldControllerDocumentationModule {}\n"],"sourceRoot":"webpack:///"}