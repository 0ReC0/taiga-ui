{"version":3,"sources":["webpack:///./src/modules/components/editor-new/examples/7/imgbb.service.ts?cacc"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,wEAAS,WAAW,sBAAsB,UAAU,iBAAiB,aAAa,UAAU,IAAI,uBAAuB,YAAY,YAAY,gDAAgD,6BAA6B,aAAa,qBAAqB,wBAAwB,sBAAsB,wBAAwB,yBAAyB,uBAAuB,uBAAuB,6BAA6B,QAAQ,uBAAuB,qBAAqB,GAAG,iBAAiB,4BAA4B,8BAA8B,kEAAkE,0CAA0C,oEAAoE,wDAAwD,OAAO,kDAAkD,iBAAiB,yBAAyB,qBAAqB,+CAA+C,KAAK,gBAAgB,OAAO,cAAc,WAAW,IAAI,qHAAqH,oDAAoD,gBAAgB,4HAA4H,OAAO,GAAG,GAAG,E","file":"!!raw-loader!-examples-7-imgbb-service.js","sourcesContent":["export default \"import {Injectable} from '@angular/core';\\nimport {from, Observable} from 'rxjs';\\nimport {map} from 'rxjs/operators';\\n\\nimport {environment} from '../../../../../environments/environment';\\n\\ninterface ImgbbResponse {\\n    data: {\\n        id: string;\\n        title: string;\\n        url: string;\\n        width: string;\\n        height: string;\\n        size: number;\\n        time: string;\\n        expiration: string;\\n    };\\n    success: boolean;\\n    status: number;\\n}\\n\\n@Injectable({\\n    providedIn: `root`,\\n})\\nexport class ImgbbService {\\n    private static createBody(base64: string): URLSearchParams {\\n        const formData = new FormData();\\n\\n        formData.append(`image`, base64.split(`,`).pop() || ``);\\n\\n        return new URLSearchParams(formData as any);\\n    }\\n\\n    save(base64: string): Observable<string> {\\n        const {host, apiKey, expiration} = environment.imgbb;\\n\\n        return from(\\n            fetch(`${host}/1/upload?key=${apiKey}&expiration=${expiration}`, {\\n                method: `POST`,\\n                body: ImgbbService.createBody(base64),\\n                headers: {'Content-Type': `application/x-www-form-urlencoded`},\\n            }).then(async (response: Response) => response.json()),\\n        ).pipe(map((response: ImgbbResponse) => response.data.url));\\n    }\\n}\\n\";"],"sourceRoot":"webpack:///"}