{"version":3,"sources":["./src/modules/components/input-slider/examples/1/index.ts","./src/modules/components/input-slider/examples/1/index.html","./src/modules/components/input-slider/examples/2/index.ts","./src/modules/components/input-slider/examples/2/index.html","./src/modules/components/input-slider/examples/3/index.ts","./src/modules/components/input-slider/examples/3/index.html","./src/modules/components/input-slider/examples/4/index.ts","./src/modules/components/input-slider/examples/4/index.html","./src/modules/components/input-slider/examples/5/index.ts","./src/modules/components/input-slider/examples/5/index.html","./src/modules/components/input-slider/input-slider.component.ts","./src/modules/components/input-slider/input-slider.template.html","./src/modules/components/input-slider/input-slider.module.ts"],"names":[],"mappings":"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","file":"components-input-slider-input-slider-module.js","sourcesContent":["import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-slider-example-1`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputSliderExample1 {\n    readonly min = 5;\n    readonly max = 20;\n    readonly sliderStep = 1;\n    readonly steps = (this.max - this.min) / this.sliderStep;\n    readonly quantum = 0.01;\n\n    readonly hint = `Dragging slider change input by ${this.sliderStep}.\\nBut you can type decimal number which is multiple of ${this.quantum}.`;\n\n    readonly control = new FormControl(6.5);\n}\n","<tui-input-slider\n    class=\"control\"\n    [min]=\"min\"\n    [max]=\"max\"\n    [steps]=\"steps\"\n    [quantum]=\"quantum\"\n    [formControl]=\"control\"\n    [tuiHintContent]=\"hint\"\n>\n    Select interest rate\n</tui-input-slider>\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-slider-example-2`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputSliderExample2 {\n    readonly control = new FormControl(40);\n    readonly segments = 5;\n    readonly max = 100;\n    readonly min = 0;\n\n    increase(): void {\n        this.control.patchValue(Math.min(this.control.value + 20, this.max));\n    }\n\n    decrease(): void {\n        this.control.patchValue(Math.max(this.control.value - 20, this.min));\n    }\n}\n","<div class=\"wrapper\">\n    <tui-input-slider\n        new\n        [min]=\"min\"\n        [max]=\"max\"\n        [segments]=\"5\"\n        [formControl]=\"control\"\n    >\n        Rate your mind\n    </tui-input-slider>\n\n    <div class=\"slider-ticks-labels\">\n        <span>\n            <button\n                tuiIconButton\n                type=\"button\"\n                size=\"xs\"\n                icon=\"tuiIconDislikeLarge\"\n                appearance=\"icon\"\n                (click)=\"decrease()\"\n            ></button>\n        </span>\n        <span>20%</span>\n        <span>40%</span>\n        <span>60%</span>\n        <span>80%</span>\n        <span>\n            <button\n                tuiIconButton\n                type=\"button\"\n                size=\"xs\"\n                icon=\"tuiIconLikeLarge\"\n                appearance=\"icon\"\n                (click)=\"increase()\"\n            ></button>\n        </span>\n    </div>\n</div>\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiKeySteps} from '@taiga-ui/kit';\n\n@Component({\n    selector: `tui-input-slider-example-3`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputSliderExample3 {\n    readonly control = new FormControl(10_000);\n    readonly max = 1_000_000;\n    readonly min = 0;\n    readonly totalSteps = 100;\n    readonly ticksLabels = [`0`, `10K`, `100K`, `500k`, `1000K`];\n\n    readonly keySteps: TuiKeySteps = [\n        // [percent, value]\n        [25, 10_000],\n        [50, 100_000],\n        [75, 500_000],\n    ];\n}\n","<div class=\"wrapper\">\n    <tui-input-slider\n        new\n        [min]=\"min\"\n        [max]=\"max\"\n        [steps]=\"totalSteps\"\n        [keySteps]=\"keySteps\"\n        [formControl]=\"control\"\n        [segments]=\"ticksLabels.length - 1\"\n    >\n        Not linear growing slider\n    </tui-input-slider>\n\n    <div class=\"slider-ticks-labels\">\n        <span *ngFor=\"let label of ticksLabels\">{{ label }}</span>\n    </div>\n\n    <p>\n        Control value:\n        <code>{{ control.value }}</code>\n    </p>\n</div>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-slider-example-4`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputSliderExample4 {\n    userAnswer = 2;\n}\n","<tui-input-slider\n    tuiHintContent=\"Select the answer to see how the right custom content changes\"\n    class=\"control\"\n    [min]=\"0\"\n    [max]=\"10\"\n    [tuiTextfieldCustomContent]=\"userAnswer === 4 ? right : wrong\"\n    [(ngModel)]=\"userAnswer\"\n>\n    2+2=?\n</tui-input-slider>\n\n<ng-template #right>\n    <tui-svg\n        src=\"tuiIconCheckCircleLarge\"\n        class=\"success\"\n    ></tui-svg>\n</ng-template>\n\n<ng-template #wrong>\n    <tui-svg\n        src=\"tuiIconCloseCircleLarge\"\n        class=\"error\"\n    ></tui-svg>\n</ng-template>\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiContextWithImplicit} from '@taiga-ui/cdk';\n\n@Component({\n    selector: `tui-input-slider-example-5`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputSliderExample5 {\n    readonly max = 100;\n    readonly min = 0;\n\n    readonly controlWithMinLabel = new FormControl(this.min);\n    readonly controlWithMaxLabel = new FormControl(this.max);\n\n    readonly customLabel = ({\n        $implicit,\n    }: TuiContextWithImplicit<number>): string | number => {\n        switch ($implicit) {\n            case this.max:\n                return `Digits can't describe my love!`;\n            case this.min:\n                return `Just a label for min value`;\n            case (this.max - this.min) / 2:\n                return `Middle`;\n            default:\n                return $implicit;\n        }\n    };\n}\n","<section class=\"control\">\n    <tui-input-slider\n        new\n        tuiTextfieldSize=\"m\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [segments]=\"2\"\n        [valueContent]=\"customLabel\"\n        [formControl]=\"controlWithMinLabel\"\n    ></tui-input-slider>\n\n    <div class=\"slider-ticks-labels\">\n        <span></span>\n        <span>Other custom label</span>\n        <span></span>\n    </div>\n</section>\n\n<tui-input-slider\n    class=\"control\"\n    [min]=\"min\"\n    [max]=\"max\"\n    [valueContent]=\"customLabel\"\n    [formControl]=\"controlWithMaxLabel\"\n>\n    How much do you love Taiga UI?\n</tui-input-slider>\n","import {Component, forwardRef} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\nimport {TuiAutofillFieldName, TuiContextWithImplicit} from '@taiga-ui/cdk';\nimport {TuiPluralize, TuiSizeL} from '@taiga-ui/core';\nimport {TuiKeySteps} from '@taiga-ui/kit';\n\nimport {AbstractExampleTuiControl} from '../abstract/control';\nimport {ABSTRACT_PROPS_ACCESSOR} from '../abstract/inherited-documentation/abstract-props-accessor';\n\n@Component({\n    selector: `example-tui-input-slider`,\n    templateUrl: `./input-slider.template.html`,\n    changeDetection,\n    providers: [\n        {\n            provide: ABSTRACT_PROPS_ACCESSOR,\n            useExisting: forwardRef(() => ExampleTuiInputSliderComponent),\n        },\n    ],\n})\nexport class ExampleTuiInputSliderComponent extends AbstractExampleTuiControl {\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n\n    readonly example1: TuiDocExample = {\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n        TypeScript: import(`!!raw-loader!./examples/1/index`),\n        LESS: import(`!!raw-loader!./examples/1/index.less`),\n    };\n\n    readonly example2: TuiDocExample = {\n        HTML: import(`!!raw-loader!./examples/2/index.html`),\n        LESS: import(`!!raw-loader!./examples/2/index.less`),\n        TypeScript: import(`!!raw-loader!./examples/2/index`),\n    };\n\n    readonly example3: TuiDocExample = {\n        HTML: import(`!!raw-loader!./examples/3/index.html`),\n        TypeScript: import(`!!raw-loader!./examples/3/index`),\n        LESS: import(`!!raw-loader!./examples/3/index.less`),\n    };\n\n    readonly example4: TuiDocExample = {\n        HTML: import(`!!raw-loader!./examples/4/index.html`),\n        TypeScript: import(`!!raw-loader!./examples/4/index`),\n        LESS: import(`!!raw-loader!./examples/4/index.less`),\n    };\n\n    readonly example5: TuiDocExample = {\n        HTML: import(`!!raw-loader!./examples/5/index.html`),\n        TypeScript: import(`!!raw-loader!./examples/5/index`),\n        LESS: import(`!!raw-loader!./examples/5/index.less`),\n    };\n\n    readonly control = new FormControl(0);\n\n    readonly minVariants: readonly number[] = [0, 1, 5, 7.77, -10];\n\n    min = this.minVariants[0];\n\n    readonly maxVariants: readonly number[] = [10, 100, 10000];\n\n    max = this.maxVariants[0];\n\n    readonly segmentsVariants: readonly number[] = [0, 1, 5, 13];\n\n    segments = 1;\n\n    steps = 0;\n\n    readonly quantumVariants: readonly number[] = [1, 0.01, 0.001, 0.0001, 10, 20, 100];\n\n    quantum = this.quantumVariants[0];\n\n    readonly sizeVariants: readonly TuiSizeL[] = [`m`, `l`];\n\n    size = this.sizeVariants[1];\n\n    prefix = ``;\n    postfix = ``;\n\n    readonly pluralizeVariants: ReadonlyArray<TuiPluralize | Record<string, string>> = [\n        [`year`, `years`, `years`],\n        {one: `thing`, few: `things`, many: `things`, other: `things`},\n        {\n            one: `year`,\n            other: `years`,\n        },\n    ];\n\n    pluralize: Record<string, string> | TuiPluralize | null = null;\n\n    segmentsPluralize: Record<string, string> | TuiPluralize | null = null;\n\n    readonly secondaryVariants: readonly string[] = [`getter of percent`, `Something`];\n\n    secondarySelected: string | null = null;\n\n    readonly valueContentVariants = [\n        ``,\n        `TOP SECRET`,\n        ({$implicit: val}: TuiContextWithImplicit<number>) =>\n            val === this.max ? `MAX` : val,\n        ({$implicit: val}: TuiContextWithImplicit<number>) =>\n            val === this.min ? `MIN` : val,\n        ({$implicit: val}: TuiContextWithImplicit<number>) => (val === 5 ? `FIVE` : val),\n    ];\n\n    valueContent = this.valueContentVariants[0];\n\n    readonly minLabelVariants: readonly string[] = [``, `Nothing`];\n\n    minLabel = this.minLabelVariants[0];\n\n    readonly maxLabelVariants: readonly string[] = [``, `Everything`];\n\n    maxLabel = this.maxLabelVariants[0];\n\n    readonly keyStepsVariants: readonly TuiKeySteps[] = [[[50, 1000]]];\n\n    keySteps: TuiKeySteps | null = null;\n\n    readonly autocompleteVariants: TuiAutofillFieldName[] = [`off`, `transaction-amount`];\n    autocomplete: TuiAutofillFieldName | '' = ``;\n\n    readonly customContentVariants: string[] = [\n        `tuiIconVisaMono`,\n        `tuiIconMastercardMono`,\n    ];\n\n    customContentSelected = null;\n\n    get secondary(): string {\n        return this.secondarySelected === this.secondaryVariants[0]\n            ? `${Math.round((this.control.value / this.max) * 100)}%`\n            : this.secondarySelected || ``;\n    }\n}\n","<tui-doc-page\n    header=\"InputSlider\"\n    package=\"KIT\"\n    type=\"components\"\n>\n    <ng-template pageTab>\n        <p i18n>Component to input a limited range</p>\n\n        <p i18n>\n            Number formatting can be customized by using\n            <a\n                tuiLink\n                routerLink=\"/utils/tokens\"\n                fragment=\"number-format\"\n            >\n                TUI_NUMBER_FORMAT\n            </a>\n        </p>\n\n        <tui-notification status=\"warning\">\n            <p\n                i18n\n                class=\"tui-space_top-0\"\n            >\n                This component is being refactored. Soon&nbsp;(next&nbsp;major&nbsp;release) you will see the fresh\n                version of it!\n            </p>\n            <p i18n>\n                Of course, we keep backward compatibility in mind (for 2.x.x). You can still use old version of\n                <code>InputSlider</code>\n                .\n            </p>\n\n            <p i18n>\n                However, if you are going to use this component, we recommend to use new version. To enable the \"new\n                version\"-mode, add\n                <code>new</code>\n                directive. Example:&nbsp;\n                <code>&lt;tui&#8209;input&#8209;slider&nbsp;new&nbsp;...&gt;</code>\n            </p>\n        </tui-notification>\n\n        <tui-doc-example\n            id=\"base\"\n            i18n-heading\n            heading=\"Basic\"\n            [content]=\"example1\"\n            [description]=\"stepQuantumDescription\"\n        >\n            <ng-template #stepQuantumDescription>\n                <p>\n                    Look into this example to understand difference between input-props\n                    <code>[steps]</code>\n                    and\n                    <code>[quantum]</code>\n                    .\n                </p>\n            </ng-template>\n            <tui-input-slider-example-1></tui-input-slider-example-1>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"slider-segments\"\n            i18n-heading\n            heading=\"With slider segments + ticks labels\"\n            [content]=\"example2\"\n        >\n            <tui-notification\n                i18n\n                class=\"tui-space_bottom-8\"\n            >\n                Use mixin\n                <code>tui-slider-ticks-labels</code>\n                to arrange ticks' labels (it places them strictly below ticks).\n            </tui-notification>\n            <tui-input-slider-example-2></tui-input-slider-example-2>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"key-steps\"\n            i18n-heading\n            heading=\"KeySteps\"\n            [content]=\"example3\"\n        >\n            <dl\n                i18n\n                class=\"tui-space_bottom-8 tui-space_top-0\"\n            >\n                <dt><strong>Key steps</strong></dt>\n                <dd>anchor points of non-uniform format between value and position</dd>\n            </dl>\n            <tui-input-slider-example-3></tui-input-slider-example-3>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"right-label\"\n            i18n-heading\n            heading=\"With right label\"\n            [content]=\"example4\"\n        >\n            <tui-input-slider-example-4></tui-input-slider-example-4>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"min-max-labels\"\n            i18n-heading\n            heading=\"With min and max labels\"\n            [content]=\"example5\"\n            [description]=\"valueContentDescription\"\n        >\n            <ng-template #valueContentDescription>\n                <p>\n                    Pass\n                    <a\n                        tuiLink\n                        href=\"https://github.com/tinkoff/ng-polymorpheus\"\n                    >\n                        PolymorpheusContent\n                    </a>\n                    into property\n                    <code>[valueContent]</code>\n                    to create custom label for selected value.\n                </p>\n            </ng-template>\n            <tui-input-slider-example-5></tui-input-slider-example-5>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        <tui-doc-demo [control]=\"control\">\n            <ng-template>\n                <tui-input-slider\n                    new\n                    [formControl]=\"control\"\n                    [min]=\"min\"\n                    [max]=\"max\"\n                    [quantum]=\"quantum\"\n                    [steps]=\"steps\"\n                    [segments]=\"segments\"\n                    [keySteps]=\"keySteps\"\n                    [valueContent]=\"valueContent\"\n                    [prefix]=\"prefix\"\n                    [postfix]=\"postfix\"\n                    [focusable]=\"focusable\"\n                    [readOnly]=\"readOnly\"\n                    [pseudoInvalid]=\"pseudoInvalid\"\n                    [pseudoFocused]=\"pseudoFocused\"\n                    [pseudoHovered]=\"pseudoHovered\"\n                    [pseudoPressed]=\"pseudoPressed\"\n                    [tuiTextfieldAutocomplete]=\"autocomplete\"\n                    [tuiTextfieldCleaner]=\"cleaner\"\n                    [tuiTextfieldCustomContent]=\"customContentSelected\"\n                    [tuiTextfieldExampleText]=\"exampleText\"\n                    [tuiTextfieldSize]=\"size\"\n                    [tuiHintContent]=\"hintContent\"\n                    [tuiHintDirection]=\"hintDirection\"\n                    [tuiHintMode]=\"hintMode\"\n                    [size]=\"size\"\n                    [pluralize]=\"pluralize\"\n                    [segmentsPluralize]=\"segmentsPluralize\"\n                    [minLabel]=\"minLabel\"\n                    [maxLabel]=\"maxLabel\"\n                    [secondary]=\"secondary\"\n                >\n                    Range\n                </tui-input-slider>\n            </ng-template>\n        </tui-doc-demo>\n        <tui-doc-documentation>\n            <ng-template\n                i18n\n                documentationPropertyName=\"\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"disabled\"\n            >\n                Disabled state (use\n                <code>formControl.disable()</code>\n                )\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"min\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"number\"\n                [documentationPropertyValues]=\"minVariants\"\n                [(documentationPropertyValue)]=\"min\"\n            >\n                Min value\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"max\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"number\"\n                [documentationPropertyValues]=\"maxVariants\"\n                [(documentationPropertyValue)]=\"max\"\n            >\n                Max value\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"quantum\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"number\"\n                [documentationPropertyValues]=\"quantumVariants\"\n                [(documentationPropertyValue)]=\"quantum\"\n            >\n                Minimum indivisible value\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"steps\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"number\"\n                [(documentationPropertyValue)]=\"steps\"\n            >\n                Number of actual discrete slider steps\n\n                <p>\n                    If property is not set (i.e. equals to default value\n                    <strong>0</strong>\n                    ), number of steps equals\n                    <code>(max&nbsp;-&nbsp;min)&nbsp;/&nbsp;quantum</code>\n                </p>\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"segments\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"number\"\n                [(documentationPropertyValue)]=\"segments\"\n            >\n                A number of visual segments (use\n                <code>1</code>\n                for no ticks)\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"keySteps\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiKeySteps\"\n                [documentationPropertyValues]=\"keyStepsVariants\"\n                [(documentationPropertyValue)]=\"keySteps\"\n            >\n                Key steps to bind slider position and value\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"valueContent\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"PolymorpheusContent\"\n                [documentationPropertyValues]=\"valueContentVariants\"\n                [(documentationPropertyValue)]=\"valueContent\"\n            >\n                A template for custom view of selected value.\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"prefix\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"string\"\n                [(documentationPropertyValue)]=\"prefix\"\n            >\n                A prefix symbol, like currency\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"postfix\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"string\"\n                [(documentationPropertyValue)]=\"postfix\"\n            >\n                A postfix symbol, like currency\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"minLabel\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"string\"\n                [documentationPropertyDeprecated]=\"true\"\n                [documentationPropertyValues]=\"minLabelVariants\"\n                [(documentationPropertyValue)]=\"minLabel\"\n            >\n                Label for min value.\n\n                <p>\n                    Use\n                    <code>valueContent</code>\n                    instead.\n                </p>\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"maxLabel\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"string\"\n                [documentationPropertyDeprecated]=\"true\"\n                [documentationPropertyValues]=\"maxLabelVariants\"\n                [(documentationPropertyValue)]=\"maxLabel\"\n            >\n                Label for max value.\n\n                <p>\n                    Use\n                    <code>valueContent</code>\n                    instead.\n                </p>\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"size\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiSizeL\"\n                [documentationPropertyDeprecated]=\"true\"\n                [documentationPropertyValues]=\"sizeVariants\"\n                [(documentationPropertyValue)]=\"size\"\n            >\n                Size\n                <p>\n                    Use\n                    <code>tuiTextfieldSize</code>\n                    instead.\n                </p>\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"secondary\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"string\"\n                [documentationPropertyDeprecated]=\"true\"\n                [documentationPropertyValues]=\"secondaryVariants\"\n                [(documentationPropertyValue)]=\"secondarySelected\"\n            >\n                Right label.\n                <p>\n                    Use\n                    <code>tuiTextfieldCustomContent</code>\n                    instead.\n                </p>\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"pluralize\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiPluralize | Record<string, string>\"\n                [documentationPropertyDeprecated]=\"true\"\n                [documentationPropertyValues]=\"pluralizeVariants\"\n                [(documentationPropertyValue)]=\"pluralize\"\n            >\n                Plural forms for labels. TuiPluralize array is deprecated. Use object that mimics the\n                <a\n                    tuiLink\n                    href=\"https://unicode-org.github.io/icu/userguide/format_parse/messages/\"\n                >\n                    ICU format\n                </a>\n                for i18nPlural.\n\n                <p>\n                    Use\n                    <code>postfix</code>\n                    instead.\n                </p>\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"segmentsPluralize\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiPluralize\"\n                [documentationPropertyValues]=\"pluralizeVariants\"\n                [documentationPropertyDeprecated]=\"true\"\n                [(documentationPropertyValue)]=\"segmentsPluralize\"\n            >\n                Plural forms for\n                <code>segments</code>\n\n                <p>See examples how create ticks without this property (outside of the component).</p>\n            </ng-template>\n        </tui-doc-documentation>\n        <inherited-documentation></inherited-documentation>\n    </ng-template>\n\n    <ng-template pageTab>\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Import\n                    <code>TuiInputSliderModule</code>\n                    into a module where you want to use our component\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Add to the template:</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {\n    TuiButtonModule,\n    TuiHintControllerModule,\n    TuiLinkModule,\n    TuiNotificationModule,\n    TuiSvgModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {\n    TuiInputRangeModule,\n    TuiInputSliderModule,\n    TuiRadioListModule,\n} from '@taiga-ui/kit';\n\nimport {InheritedDocumentationModule} from '../abstract/inherited-documentation/inherited-documentation.module';\nimport {TuiInputSliderExample1} from './examples/1';\nimport {TuiInputSliderExample2} from './examples/2';\nimport {TuiInputSliderExample3} from './examples/3';\nimport {TuiInputSliderExample4} from './examples/4';\nimport {TuiInputSliderExample5} from './examples/5';\nimport {ExampleTuiInputSliderComponent} from './input-slider.component';\n\n@NgModule({\n    imports: [\n        TuiInputRangeModule,\n        TuiInputSliderModule,\n        InheritedDocumentationModule,\n        ReactiveFormsModule,\n        FormsModule,\n        CommonModule,\n        TuiRadioListModule,\n        TuiButtonModule,\n        TuiHintControllerModule,\n        TuiAddonDocModule,\n        TuiLinkModule,\n        TuiSvgModule,\n        TuiNotificationModule,\n        TuiTextfieldControllerModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiInputSliderComponent)),\n    ],\n    declarations: [\n        ExampleTuiInputSliderComponent,\n        TuiInputSliderExample1,\n        TuiInputSliderExample2,\n        TuiInputSliderExample3,\n        TuiInputSliderExample4,\n        TuiInputSliderExample5,\n    ],\n    exports: [ExampleTuiInputSliderComponent],\n})\nexport class ExampleTuiInputSliderModule {}\n"],"sourceRoot":"webpack:///"}