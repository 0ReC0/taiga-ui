{"version":3,"sources":["./src/modules/components/input-card/examples/1/index.ts","./src/modules/components/input-card/examples/1/index.html","./src/modules/components/input-card/input-card.component.ts","./src/modules/components/input-card/input-card.template.html","./src/modules/components/input-card/input-card.module.ts"],"names":[],"mappings":"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","file":"components-input-card-input-card-module.js","sourcesContent":["import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-card-example-1`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputCardExample1 {\n    readonly form = new FormGroup({\n        card: new FormControl(``),\n        expire: new FormControl(``),\n        cvc: new FormControl(``),\n    });\n\n    get card(): string | null {\n        const value: string = this.form.get(`card`)!.value;\n\n        if (value.length < 7) {\n            return null;\n        }\n\n        switch (value.charAt(0)) {\n            case `0`:\n            case `1`:\n            case `2`:\n                return `https://ng-web-apis.github.io/dist/assets/images/common.svg`;\n            case `3`:\n            case `4`:\n            case `5`:\n                return `https://ng-web-apis.github.io/dist/assets/images/geolocation.svg`;\n            case `6`:\n            case `7`:\n                return `https://ng-web-apis.github.io/dist/assets/images/intersection-observer.svg`;\n            case `8`:\n            case `9`:\n            default:\n                return `https://ng-web-apis.github.io/dist/assets/images/payment-request.svg`;\n        }\n    }\n}\n","<p i18n>\n    <code>form</code>\n    tag is used for better autocomplete\n</p>\n<form\n    tuiGroup\n    [formGroup]=\"form\"\n>\n    <tui-input-card\n        formControlName=\"card\"\n        [autocompleteEnabled]=\"true\"\n        [cardSrc]=\"card\"\n    >\n        Card number\n    </tui-input-card>\n    <tui-input-expire\n        formControlName=\"expire\"\n        [autocompleteEnabled]=\"true\"\n    >\n        Expire date\n    </tui-input-expire>\n    <tui-input-cvc\n        formControlName=\"cvc\"\n        [autocompleteEnabled]=\"true\"\n    >\n        CVC/CVV\n    </tui-input-cvc>\n</form>\n","import {Component, forwardRef, Inject} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiCodeCVCLength, tuiCreateLuhnValidator} from '@taiga-ui/addon-commerce';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\nimport {TuiAlertService, TuiHintOptions} from '@taiga-ui/core';\n\nimport {AbstractExampleTuiControl} from '../abstract/control';\nimport {ABSTRACT_PROPS_ACCESSOR} from '../abstract/inherited-documentation/abstract-props-accessor';\n\n@Component({\n    selector: `example-input-card`,\n    templateUrl: `./input-card.template.html`,\n    styleUrls: [`./input-card.style.less`],\n    changeDetection,\n    providers: [\n        {\n            provide: ABSTRACT_PROPS_ACCESSOR,\n            useExisting: forwardRef(() => ExampleTuiInputCardComponent),\n        },\n    ],\n})\nexport class ExampleTuiInputCardComponent extends AbstractExampleTuiControl {\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n    };\n\n    card = ``;\n\n    readonly lengthVariants: TuiCodeCVCLength[] = [3, 4];\n\n    length = this.lengthVariants[0];\n\n    cleaner = false;\n\n    exampleText = `0000 0000 0000 0000`;\n\n    hintContentCVC = null;\n\n    hintDirectionCVC: TuiHintOptions['direction'] = `bottom-left`;\n\n    hintModeCVC = null;\n\n    readonly cards: Record<string, string> = {\n        common: `https://ng-web-apis.github.io/dist/assets/images/common.svg`,\n        universal: `https://ng-web-apis.github.io/dist/assets/images/universal.svg`,\n        intersection: `https://ng-web-apis.github.io/dist/assets/images/intersection-observer.svg`,\n        mutation: `https://ng-web-apis.github.io/dist/assets/images/mutation-observer.svg`,\n    };\n\n    cardSrcVariants = Object.keys(this.cards);\n\n    cardSrcSelected: string | null = null;\n\n    autocompleteEnabledCard = false;\n\n    autocompleteEnabledCVC = false;\n\n    autocompleteEnabledExpire = false;\n\n    control = new FormGroup({\n        card: new FormControl(``, [\n            Validators.required,\n            tuiCreateLuhnValidator(`Invalid card number`),\n        ]),\n        expire: new FormControl(``, Validators.required),\n        cvc: new FormControl(``, Validators.required),\n    });\n\n    constructor(\n        @Inject(TuiAlertService)\n        private readonly alertService: TuiAlertService,\n    ) {\n        super();\n    }\n\n    get cardSrc(): string | null {\n        return this.cardSrcSelected === null ? null : this.cards[this.cardSrcSelected];\n    }\n\n    get disabledCard(): boolean {\n        return this.isDisabled(`card`);\n    }\n\n    set disabledCard(value: boolean) {\n        this.toggleDisabled(value, `card`);\n    }\n\n    get disabledExpire(): boolean {\n        return this.isDisabled(`expire`);\n    }\n\n    set disabledExpire(value: boolean) {\n        this.toggleDisabled(value, `expire`);\n    }\n\n    get disabledCVC(): boolean {\n        return this.isDisabled(`cvc`);\n    }\n\n    set disabledCVC(value: boolean) {\n        this.toggleDisabled(value, `cvc`);\n    }\n\n    isDisabled(control: string): boolean {\n        return this.control.get(control)!.disabled;\n    }\n\n    toggleDisabled(value: boolean, control: string): void {\n        if (value) {\n            this.control.get(control)!.disable();\n\n            return;\n        }\n\n        this.control.get(control)!.enable();\n    }\n\n    onBinChange(bin: string | null): void {\n        this.alertService.open(`bin: ${bin}`).subscribe();\n    }\n}\n","<tui-doc-page\n    header=\"InputCard\"\n    package=\"ADDON-COMMERCE\"\n    type=\"components\"\n>\n    <ng-template pageTab>\n        <p i18n>\n            <code>InputCard</code>\n            can be used with\n            <code>InputExpire</code>\n            and\n            <code>InputCVC</code>\n            to input a card\n        </p>\n\n        <tui-doc-example\n            id=\"group\"\n            heading=\"tui-group\"\n            [content]=\"example1\"\n        >\n            <tui-input-card-example-1></tui-input-card-example-1>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        <tui-doc-demo [control]=\"control\">\n            <ng-template>\n                <form\n                    class=\"form\"\n                    [formGroup]=\"control\"\n                >\n                    <tui-input-card\n                        formControlName=\"card\"\n                        class=\"control\"\n                        [autocompleteEnabled]=\"autocompleteEnabledCard\"\n                        [cardSrc]=\"cardSrc\"\n                        [focusable]=\"focusable\"\n                        [readOnly]=\"readOnly\"\n                        [tuiTextfieldSize]=\"size\"\n                        [tuiTextfieldCleaner]=\"cleaner\"\n                        [tuiTextfieldLabelOutside]=\"labelOutside\"\n                        [pseudoInvalid]=\"pseudoInvalid\"\n                        [pseudoHovered]=\"pseudoHovered\"\n                        [pseudoPressed]=\"pseudoPressed\"\n                        [pseudoFocused]=\"pseudoFocused\"\n                        [tuiHintContent]=\"hintContent\"\n                        [tuiHintDirection]=\"hintDirection\"\n                        [tuiHintMode]=\"hintMode\"\n                        (binChange)=\"onBinChange($event)\"\n                    >\n                        Card number\n                    </tui-input-card>\n                    <tui-input-expire\n                        formControlName=\"expire\"\n                        class=\"control\"\n                        [autocompleteEnabled]=\"autocompleteEnabledExpire\"\n                        [focusable]=\"focusable\"\n                        [readOnly]=\"readOnly\"\n                        [tuiTextfieldSize]=\"size\"\n                        [tuiTextfieldLabelOutside]=\"labelOutside\"\n                        [pseudoInvalid]=\"pseudoInvalid\"\n                        [pseudoHovered]=\"pseudoHovered\"\n                        [pseudoPressed]=\"pseudoPressed\"\n                        [pseudoFocused]=\"pseudoFocused\"\n                    >\n                        Expire date\n                    </tui-input-expire>\n                    <tui-input-cvc\n                        formControlName=\"cvc\"\n                        class=\"control\"\n                        [autocompleteEnabled]=\"autocompleteEnabledCVC\"\n                        [focusable]=\"focusable\"\n                        [length]=\"length\"\n                        [readOnly]=\"readOnly\"\n                        [tuiTextfieldSize]=\"size\"\n                        [tuiTextfieldLabelOutside]=\"labelOutside\"\n                        [pseudoInvalid]=\"pseudoInvalid\"\n                        [pseudoHovered]=\"pseudoHovered\"\n                        [pseudoPressed]=\"pseudoPressed\"\n                        [pseudoFocused]=\"pseudoFocused\"\n                        [tuiHintContent]=\"hintContentCVC\"\n                        [tuiHintDirection]=\"hintDirectionCVC\"\n                        [tuiHintMode]=\"hintModeCVC\"\n                    >\n                        CVC/CVV\n                    </tui-input-cvc>\n                    <tui-error\n                        formControlName=\"card\"\n                        class=\"error\"\n                        [error]=\"[] | tuiFieldError | async\"\n                    ></tui-error>\n                </form>\n            </ng-template>\n        </tui-doc-demo>\n        <div class=\"b-full-width tui-space_bottom-6\">\n            <p i18n>\n                Add\n                <code>tuiCreateLuhnValidator(customMessage?)</code>\n                to control validators to validate it with Luhn algorithm\n            </p>\n        </div>\n        <tui-accordion\n            class=\"b-full-width\"\n            [closeOthers]=\"false\"\n        >\n            <tui-accordion-item [open]=\"true\">\n                TuiInputCardComponent\n                <ng-template tuiAccordionItemContent>\n                    <tui-doc-documentation>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"disabledCard\"\n                        >\n                            Disabled state (use\n                            <code>formControl.disable()</code>\n                            )\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"autocompleteEnabled\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"autocompleteEnabledCard\"\n                        >\n                            Browser autocomplete of card\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"cardSrc\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"string | null\"\n                            [documentationPropertyValues]=\"cardSrcVariants\"\n                            [(documentationPropertyValue)]=\"cardSrcSelected\"\n                        >\n                            SVG card icon\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"binChange\"\n                            documentationPropertyMode=\"output\"\n                            documentationPropertyType=\"string | null\"\n                        >\n                            BIN value (card first 6 symbols)\n                        </ng-template>\n                    </tui-doc-documentation>\n                    <inherited-documentation></inherited-documentation>\n                </ng-template>\n            </tui-accordion-item>\n\n            <tui-accordion-item [open]=\"false\">\n                TuiInputExpireComponent\n                <ng-template tuiAccordionItemContent>\n                    <tui-doc-documentation>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"disabledExpire\"\n                        >\n                            Disabled state (use\n                            <code>formControl.disable()</code>\n                            )\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"autocompleteEnabled\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"autocompleteEnabledExpire\"\n                        >\n                            Browser autocomplete of card\n                        </ng-template>\n                    </tui-doc-documentation>\n                    <inherited-documentation></inherited-documentation>\n                </ng-template>\n            </tui-accordion-item>\n\n            <tui-accordion-item [open]=\"false\">\n                TuiInputCVCComponent\n                <ng-template tuiAccordionItemContent>\n                    <tui-doc-documentation>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"disabledCVC\"\n                        >\n                            Disabled state (use\n                            <code>formControl.disable()</code>\n                            )\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"autocompleteEnabled\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"autocompleteEnabledCVC\"\n                        >\n                            Browser autocomplete of card\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"length\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"3 | 4\"\n                            [documentationPropertyValues]=\"lengthVariants\"\n                            [(documentationPropertyValue)]=\"length\"\n                        >\n                            Code length\n                        </ng-template>\n                    </tui-doc-documentation>\n                    <inherited-documentation></inherited-documentation>\n                </ng-template>\n            </tui-accordion-item>\n        </tui-accordion>\n    </ng-template>\n\n    <ng-template pageTab>\n        <ol class=\"b-demo-steps\">\n            <li i18n>\n                Import\n                <code>TuiInputCardModule</code>\n                ,\n                <code>TuiInputCVCModule</code>\n                ,\n                <code>TuiInputExpireModule</code>\n                modules into the module where you want to use them:\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Add to the template:</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {\n    TuiInputCardModule,\n    TuiInputCVCModule,\n    TuiInputExpireModule,\n} from '@taiga-ui/addon-commerce';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {\n    TuiErrorModule,\n    TuiGroupModule,\n    TuiHintControllerModule,\n    TuiLinkModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TuiAccordionModule, TuiFieldErrorPipeModule} from '@taiga-ui/kit';\n\nimport {InheritedDocumentationModule} from '../abstract/inherited-documentation/inherited-documentation.module';\nimport {TuiInputCardExample1} from './examples/1';\nimport {ExampleTuiInputCardComponent} from './input-card.component';\n\n@NgModule({\n    imports: [\n        TuiInputCardModule,\n        TuiInputCVCModule,\n        TuiInputExpireModule,\n        TuiGroupModule,\n        TuiLinkModule,\n        TuiErrorModule,\n        TuiFieldErrorPipeModule,\n        TuiAccordionModule,\n        CommonModule,\n        TuiHintControllerModule,\n        TuiTextfieldControllerModule,\n        ReactiveFormsModule,\n        TuiAddonDocModule,\n        InheritedDocumentationModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiInputCardComponent)),\n    ],\n    declarations: [ExampleTuiInputCardComponent, TuiInputCardExample1],\n    exports: [ExampleTuiInputCardComponent],\n})\nexport class ExampleTuiInputCardModule {}\n"],"sourceRoot":"webpack:///"}