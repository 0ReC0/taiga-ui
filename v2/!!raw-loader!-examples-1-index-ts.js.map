{"version":3,"sources":["webpack:///./src/modules/charts/arc-chart/examples/1/index.ts?9da5","webpack:///./src/modules/charts/axes/examples/1/index.ts?887c","webpack:///./src/modules/charts/bar-chart/examples/1/index.ts?c5f0","webpack:///./src/modules/charts/bar-set/examples/1/index.ts?8739","webpack:///./src/modules/charts/bar/examples/1/index.ts?7a53","webpack:///./src/modules/charts/legend-item/examples/1/index.ts?9ae6","webpack:///./src/modules/charts/line-chart/examples/1/index.ts?21f7","webpack:///./src/modules/charts/line-days-chart/examples/1/index.ts?e06a","webpack:///./src/modules/charts/pie-chart/examples/1/index.ts?f5a1","webpack:///./src/modules/charts/ring-chart/examples/1/index.ts?85fc","webpack:///./src/modules/components/accordion/examples/1/index.ts?7d4a","webpack:///./src/modules/components/action/examples/1/index.ts?e7f8","webpack:///./src/modules/components/avatar/examples/1/index.ts?c502","webpack:///./src/modules/components/badge/examples/1/index.ts?6a69","webpack:///./src/modules/components/badged-content/examples/1/index.ts?26d2","webpack:///./src/modules/components/breadcrumbs/examples/1/index.ts?6ae0","webpack:///./src/modules/components/button/examples/1/index.ts?ec09","webpack:///./src/modules/components/calendar-month/examples/1/index.ts?72ef","webpack:///./src/modules/components/calendar-range/examples/1/index.ts?8d17","webpack:///./src/modules/components/calendar/examples/1/index.ts?bc02","webpack:///./src/modules/components/card/examples/1/index.ts?4e63","webpack:///./src/modules/components/carousel/examples/1/index.ts?ad23","webpack:///./src/modules/components/checkbox-block/examples/1/index.ts?d204","webpack:///./src/modules/components/checkbox-labeled/examples/1/index.ts?4b2b","webpack:///./src/modules/components/checkbox/examples/1/index.ts?a072","webpack:///./src/modules/components/color-picker/examples/1/index.ts?c64b","webpack:///./src/modules/components/combo-box/examples/1/index.ts?f3f4","webpack:///./src/modules/components/data-list/examples/1/index.ts?b5cb","webpack:///./src/modules/components/dialog/examples/1/index.ts?7dcf","webpack:///./src/modules/components/editor-new/examples/1/index.ts?fc9a","webpack:///./src/modules/components/editor/examples/1/index.ts?c002","webpack:///./src/modules/components/error/examples/1/index.ts?966f","webpack:///./src/modules/components/expand/examples/1/index.ts?ad89","webpack:///./src/modules/components/field-error/examples/1/index.ts?2e59","webpack:///./src/modules/components/filter/examples/1/index.ts?ffc6","webpack:///./src/modules/components/group/examples/1/index.ts?b28f","webpack:///./src/modules/components/hosted-dropdown/examples/1/index.ts?dc04","webpack:///./src/modules/components/input-card-grouped/examples/1/index.ts?c266","webpack:///./src/modules/components/input-card/examples/1/index.ts?c644","webpack:///./src/modules/components/input-copy/examples/1/index.ts?a232","webpack:///./src/modules/components/input-count/examples/1/index.ts?5449","webpack:///./src/modules/components/input-date-range/examples/1/index.ts?8f60","webpack:///./src/modules/components/input-date-time/examples/1/index.ts?ec62","webpack:///./src/modules/components/input-date/examples/1/index.ts?dbee","webpack:///./src/modules/components/input-file/examples/1/index.ts?d167","webpack:///./src/modules/components/input-files/examples/1/index.ts?8fe7","webpack:///./src/modules/components/input-month-range/examples/1/index.ts?3dff","webpack:///./src/modules/components/input-month/examples/1/index.ts?98d8","webpack:///./src/modules/components/input-number/examples/1/index.ts?1b92","webpack:///./src/modules/components/input-password/examples/1/index.ts?3d5f","webpack:///./src/modules/components/input-phone-international/examples/1/index.ts?9616","webpack:///./src/modules/components/input-phone/examples/1/index.ts?6cbf","webpack:///./src/modules/components/input-range/examples/1/index.ts?447b","webpack:///./src/modules/components/input-tag/examples/1/index.ts?689f","webpack:///./src/modules/components/input-time/examples/1/index.ts?112e","webpack:///./src/modules/components/input/examples/1/index.ts?69e3","webpack:///./src/modules/components/island/examples/1/index.ts?cb5d","webpack:///./src/modules/components/label/examples/1/index.ts?9aa3","webpack:///./src/modules/components/line-clamp/examples/1/index.ts?6b7a","webpack:///./src/modules/components/link/examples/1/index.ts?e2e7","webpack:///./src/modules/components/loader/examples/1/index.ts?9aac","webpack:///./src/modules/components/marker-icon/examples/1/index.ts?a12d","webpack:///./src/modules/components/mobile-calendar/examples/1/index.ts?7f00","webpack:///./src/modules/components/mobile-dialog/examples/1/index.ts?c61f","webpack:///./src/modules/components/mobile-themes/examples/1/index.ts?2b48","webpack:///./src/modules/components/money/examples/1/index.ts?a446","webpack:///./src/modules/components/multi-select/examples/1/index.ts?b18e","webpack:///./src/modules/components/notification/examples/1/index.ts?3872","webpack:///./src/modules/components/pagination/examples/1/index.ts?0596","webpack:///./src/modules/components/pdf-viewer/examples/1/index.ts?f1ba","webpack:///./src/modules/components/preview/examples/1/index.ts?3630","webpack:///./src/modules/components/primitive-textfield/examples/1/index.ts?2446","webpack:///./src/modules/components/progress-bar/examples/1/index.ts?fcaa","webpack:///./src/modules/components/progress-circle/examples/1/index.ts?a268","webpack:///./src/modules/components/progress-segmented/examples/1/index.ts?9137","webpack:///./src/modules/components/pull-to-refresh/examples/1/index.ts?7cba","webpack:///./src/modules/components/push/examples/1/index.ts?14fa","webpack:///./src/modules/components/radio-block/examples/1/index.ts?f01c","webpack:///./src/modules/components/radio-labeled/examples/1/index.ts?c5d0","webpack:///./src/modules/components/radio-list/examples/1/index.ts?f0b0","webpack:///./src/modules/components/radio/examples/1/index.ts?9ffc","webpack:///./src/modules/components/rating/examples/1/index.ts?6bbf","webpack:///./src/modules/components/select/examples/1/index.ts?6fa3","webpack:///./src/modules/components/sheet/examples/1/index.ts?c6c4","webpack:///./src/modules/components/slider-old/examples/1/index.ts?b62a","webpack:///./src/modules/components/stepper/examples/1/index.ts?1187","webpack:///./src/modules/components/svg/examples/1/index.ts?4fc4","webpack:///./src/modules/components/tabs/examples/1/index.ts?3d3b","webpack:///./src/modules/components/tag/examples/1/index.ts?e2d8","webpack:///./src/modules/components/text-area/examples/1/index.ts?b10f","webpack:///./src/modules/components/toggle/examples/1/index.ts?822b","webpack:///./src/modules/components/toolbar/examples/1/index.ts?af0b","webpack:///./src/modules/components/tooltip/examples/1/index.ts?bc62","webpack:///./src/modules/components/tree/examples/1/index.ts?e603","webpack:///./src/modules/customization/dialogs/examples/1/index.ts?9f8e","webpack:///./src/modules/customization/icon-set/examples/1/index.ts?9a13","webpack:///./src/modules/customization/portals/examples/1/index.ts?281a","webpack:///./src/modules/customization/wrapper/examples/1/index.ts?b2ad","webpack:///./src/modules/directives/active-zone/examples/1/index.ts?a1f8","webpack:///./src/modules/directives/auto-focus/examples/1/index.ts?79ac","webpack:///./src/modules/directives/copy-processor/examples/1/index.ts?11cc","webpack:///./src/modules/directives/described-by/examples/1/index.ts?8082","webpack:///./src/modules/directives/dropdown-context/examples/1/index.ts?5d08","webpack:///./src/modules/directives/dropdown-controller/examples/1/index.ts?9236","webpack:///./src/modules/directives/dropdown-selection/examples/1/index.ts?4f9b","webpack:///./src/modules/directives/dropdown/examples/1/index.ts?0abc","webpack:///./src/modules/directives/elastic-sticky/examples/1/index.ts?64f8","webpack:///./src/modules/directives/element/examples/1/index.ts?9767","webpack:///./src/modules/directives/for/examples/1/index.ts?657b","webpack:///./src/modules/directives/highlight/examples/1/index.ts?876a","webpack:///./src/modules/directives/hint-controller/examples/1/index.ts?55dc","webpack:///./src/modules/directives/hint/examples/1/index.ts?0ea4","webpack:///./src/modules/directives/lazy-loading/examples/1/index.ts?617a","webpack:///./src/modules/directives/let/examples/1/index.ts?c7b4","webpack:///./src/modules/directives/manual-hint/examples/1/index.ts?126f","webpack:///./src/modules/directives/media/examples/1/index.ts?48af","webpack:///./src/modules/directives/mode/examples/1/index.ts?dcbd","webpack:///./src/modules/directives/overscroll/examples/1/index.ts?e197","webpack:///./src/modules/directives/pan/examples/1/index.ts?85f7","webpack:///./src/modules/directives/pointer-hint/examples/1/index.ts?c76e","webpack:///./src/modules/directives/portal/examples/1/index.ts?93ae","webpack:///./src/modules/directives/present/examples/1/index.ts?7b42","webpack:///./src/modules/directives/ripple/examples/1/index.ts?8143","webpack:///./src/modules/directives/sidebar/examples/1/index.ts?3874","webpack:///./src/modules/directives/swipe/examples/1/index.ts?7a07","webpack:///./src/modules/directives/textfield-controller/examples/1/index.ts?32cc","webpack:///./src/modules/directives/touchable/examples/1/index.ts?9953","webpack:///./src/modules/directives/validator/examples/1/index.ts?2c20","webpack:///./src/modules/directives/zoom/examples/1/index.ts?3300","webpack:///./src/modules/markup/breakpoints/examples/1/index.ts?aae4","webpack:///./src/modules/markup/skeleton/examples/1/index.ts?4d13","webpack:///./src/modules/markup/spaces/examples/1/index.ts?741d","webpack:///./src/modules/markup/tables/examples/1/index.ts?ac58","webpack:///./src/modules/pipes/field-error/examples/1/index.ts?b8f8","webpack:///./src/modules/pipes/filter-by-input/examples/1/index.ts?8863","webpack:///./src/modules/pipes/format-date/examples/1/index.ts?4270","webpack:///./src/modules/pipes/format-number/examples/1/index.ts?953a","webpack:///./src/modules/pipes/format-phone/examples/1/index.ts?a36a","webpack:///./src/modules/pipes/stringify-content/examples/1/index.ts?a93a","webpack:///./src/modules/pipes/stringify/examples/1/index.ts?d9d1","webpack:///./src/modules/services/alerts/examples/1/index.ts?4ca1","webpack:///./src/modules/services/scroll/examples/1/index.ts?f5e3","webpack:///./src/modules/services/table-bar/examples/1/index.ts?9807","webpack:///./src/modules/tables/reorder/examples/1/index.ts?8122","webpack:///./src/modules/tables/resizable-column/examples/1/index.ts?0903","webpack:///./src/modules/tables/table-filters/examples/1/index.ts?59bf","webpack:///./src/modules/tables/table-pagination/examples/1/index.ts?fd0c","webpack:///./src/modules/tables/table/examples/1/index.ts?2507","webpack:///./src/modules/utils/browser/examples/1/index.ts?245b","webpack:///./src/modules/utils/format/examples/1/index.ts?d010","webpack:///./src/modules/utils/math/examples/1/index.ts?5abf","webpack:///./src/modules/utils/miscellaneous/examples/1/index.ts?8624","webpack:///./src/modules/utils/tokens/examples/1/index.ts?cceb"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,2JAA2J,qCAAqC,wCAAwC,8BAA8B,GAAG,GAAG,E;;;;;;;;;;;;ACAjd;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,eAAe,+BAA+B,gBAAgB,sJAAsJ,iCAAiC,wDAAwD,+DAA+D,iEAAiE,yHAAyH,GAAG,GAAG,E;;;;;;;;;;;;ACA3uB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,KAAK,sBAAsB,gBAAgB,2JAA2J,qCAAqC,kNAAkN,sDAAsD,yCAAyC,wCAAwC,6CAA6C,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA7zB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,yJAAyJ,mCAAmC,oCAAoC,GAAG,GAAG,E;;;;;;;;;;;;ACA3a;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,qJAAqJ,iCAAiC,GAAG,E;;;;;;;;;;;;ACA9X;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,IAAI,sBAAsB,gBAAgB,6JAA6J,uCAAuC,4BAA4B,2DAA2D,wCAAwC,yEAAyE,8CAA8C,gDAAgD,OAAO,wDAAwD,qDAAqD,OAAO,yCAAyC,oCAAoC,MAAM,GAAG,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAj7B;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,sBAAsB,sBAAsB,UAAU,SAAS,uBAAuB,gBAAgB,4JAA4J,sCAAsC,mMAAmM,mDAAmD,GAAG,GAAG,E;;;;;;;;;;;;ACAnuB;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,uGAAuG,sBAAsB,UAAU,WAAW,uBAAuB,UAAU,WAAW,aAAa,UAAU,IAAI,uBAAuB,6BAA6B,iKAAiK,0CAA0C,sGAAsG,QAAQ,UAAU,0CAA0C,WAAW,gJAAgJ,WAAW,6BAA6B,cAAc,IAAI,IAAI,sBAAsB,oHAAoH,sDAAsD,+CAA+C,OAAO,sCAAsC,SAAS,+CAA+C,kHAAkH,6CAA6C,qDAAqD,SAAS,yDAAyD,OAAO,yEAAyE,kCAAkC,yBAAyB,EAAE,IAAI,4CAA4C,SAAS,iDAAiD,4QAA4Q,OAAO,kKAAkK,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA7zE;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,2JAA2J,qCAAqC,wCAAwC,GAAG,GAAG,E;;;;;;;;;;;;ACAnb;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,4JAA4J,sCAAsC,wCAAwC,GAAG,GAAG,E;;;;;;;;;;;;ACArb;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,2JAA2J,uCAAuC,GAAG,E;;;;;;;;;;;;ACA1Y;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,gBAAgB,uBAAuB,gBAAgB,wJAAwJ,mCAAmC,uHAAuH,uCAAuC,qDAAqD,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAzpB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,sHAAsH,mCAAmC,8EAA8E,GAAG,GAAG,E;;;;;;;;;;;;ACAlb;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,uJAAuJ,mCAAmC,GAAG,E;;;;;;;;;;;;ACAlY;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,8HAA8H,2CAA2C,GAAG,E;;;;;;;;;;;;ACAjX;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,2HAA2H,wCAAwC,0BAA0B,2FAA2F,YAAY,+FAA+F,YAAY,mGAAmG,YAAY,6HAA6H,YAAY,YAAY,SAAS,GAAG,GAAG,E;;;;;;;;;;;;ACAv2B;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,YAAY,kBAAkB,8DAA8D,gBAAgB,sHAAsH,mCAAmC,kCAAkC,0CAA0C,uCAAuC,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA1jB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,SAAS,sBAAsB,gBAAgB,8HAA8H,kCAAkC,oCAAoC,2CAA2C,6CAA6C,6BAA6B,OAAO,sDAAsD,oCAAoC,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACArpB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,qHAAqH,mCAAmC,GAAG,E;;;;;;;;;;;;ACAhW;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,OAAO,sBAAsB,gBAAgB,wHAAwH,qCAAqC,kCAAkC,uCAAuC,2BAA2B,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA1f;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,sJAAsJ,kCAAkC,GAAG,E;;;;;;;;;;;;ACAhY;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,0JAA0J,qCAAqC,gBAAgB,uLAAuL,GAAG,GAAG,E;;;;;;;;;;;;ACAjlB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,8HAA8H,0CAA0C,gCAAgC,8IAA8I,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACA3lB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,kKAAkK,4CAA4C,gCAAgC,6IAA6I,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAhoB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,wHAAwH,qCAAqC,gCAAgC,gIAAgI,4BAA4B,yCAAyC,6BAA6B,SAAS,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACA7qB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,oBAAoB,+BAA+B,gBAAgB,4HAA4H,wCAAwC,wBAAwB,+CAA+C,GAAG,GAAG,E;;;;;;;;;;;;ACAnf;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,oBAAoB,sBAAsB,UAAU,wBAAwB,aAAa,UAAU,oCAAoC,uBAAuB,YAAY,kBAAkB,8DAA8D,gBAAgB,wJAAwJ,4BAA4B,oBAAoB,eAAe,GAAG,cAAc,EAAE,OAAO,GAAG,wKAAwK,gBAAgB,2JAA2J,qCAAqC,+DAA+D,wSAAwS,kEAAkE,0DAA0D,yCAAyC,OAAO,4DAA4D,mEAAmE,OAAO,4IAA4I,+HAA+H,sEAAsE,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAzlE;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,UAAU,sBAAsB,gBAAgB,yHAAyH,qCAAqC,iCAAiC,sCAAsC,oFAAoF,8GAA8G,oBAAoB,gHAAgH,oBAAoB,qHAAqH,4BAA4B,YAAY,gFAAgF,4GAA4G,oBAAoB,sHAAsH,4BAA4B,YAAY,iEAAiE,oHAAoH,4BAA4B,SAAS,GAAG,GAAG,E;;;;;;;;;;;;ACAzhD;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,iBAAiB,uBAAuB,gBAAgB,sHAAsH,4CAA4C,iHAAiH,4BAA4B,kFAAkF,4BAA4B,4BAA4B,OAAO,4CAA4C,wEAAwE,uGAAuG,iBAAiB,gBAAgB,4BAA4B,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAp+B;AAAe,wEAAS,UAAU,sBAAsB,UAAU,wBAAwB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,qCAAqC,+BAA+B,gEAAgE,wFAAwF,GAAG,oEAAoE,4EAA4E,GAAG,gBAAgB,wIAAwI,6HAA6H,sDAAsD,sCAAsC,mDAAmD,kEAAkE,GAAG,GAAG,E;;;;;;;;;;;;ACAtlC;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,wJAAwJ,mCAAmC,6ZAA6Z,kVAAkV,qIAAqI,yBAAyB,0CAA0C,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAp0C;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,mBAAmB,sBAAsB,gBAAgB,qHAAqH,kCAAkC,sBAAsB,mDAAmD,wDAAwD,kDAAkD,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA/kB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,sHAAsH,mCAAmC,uBAAuB,wBAAwB,yCAAyC,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAnc;AAAe,wEAAS,UAAU,sBAAsB,UAAU,oDAAoD,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,qCAAqC,kFAAkF,qFAAqF,sEAAsE,GAAG,uFAAuF,8DAA8D,6CAA6C,GAAG,gBAAgB,2HAA2H,uCAAuC,0FAA0F,2CAA2C,sIAAsI,EAAE,uBAAuB,wDAAwD,8CAA8C,WAAW,EAAE,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA1zC;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,kBAAkB,sBAAsB,gBAAgB,wJAAwJ,mCAAmC,qCAAqC,oDAAoD,EAAE,oMAAoM,iFAAiF,GAAG,GAAG,E;;;;;;;;;;;;ACAh2B;AAAe,wEAAS,UAAU,sBAAsB,UAAU,mCAAmC,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,6JAA6J,kCAAkC,4DAA4D,kCAAkC,2MAA2M,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAzvB;AAAe,wEAAS,qBAAqB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,2BAA2B,uBAAuB,gBAAgB,iKAAiK,2CAA2C,yFAAyF,kEAAkE,qBAAqB,yBAAyB,4BAA4B,0DAA0D,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACApwB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,+CAA+C,iCAAiC,gBAAgB,8GAA8G,6CAA6C,2HAA2H,mCAAmC,0EAA0E,mCAAmC,0BAA0B,WAAW,sCAAsC,4JAA4J,iKAAiK,oJAAoJ,oKAAoK,WAAW,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA94C;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,0HAA0H,sCAAsC,qCAAqC,oHAAoH,EAAE,mCAAmC,6DAA6D,mCAAmC,0BAA0B,WAAW,sCAAsC,4JAA4J,iKAAiK,oJAAoJ,oKAAoK,WAAW,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAn5C;AAAe,wEAAS,UAAU,sBAAsB,UAAU,mCAAmC,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,0HAA0H,sCAAsC,yCAAyC,qEAAqE,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACA/hB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,mCAAmC,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,2HAA2H,uCAAuC,yCAAyC,qMAAqM,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAjqB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,oBAAoB,sBAAsB,gBAAgB,gIAAgI,2CAA2C,yCAAyC,wIAAwI,EAAE,+CAA+C,+CAA+C,GAAG,GAAG,E;;;;;;;;;;;;ACAnvB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,OAAO,sBAAsB,gBAAgB,+HAA+H,0CAA0C,yCAAyC,6EAA6E,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACA3kB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,OAAO,sBAAsB,gBAAgB,0HAA0H,sCAAsC,yCAAyC,qEAAqE,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACA1jB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,QAAQ,sBAAsB,UAAU,YAAY,sBAAsB,UAAU,sBAAsB,aAAa,UAAU,6CAA6C,uBAAuB,wBAAwB,yEAAyE,GAAG,8BAA8B,aAAa,8BAA8B,cAAc,gHAAgH,GAAG,gBAAgB,4JAA4J,sCAAsC,2CAA2C,mEAAmE,6IAA6I,OAAO,2EAA2E,kJAAkJ,OAAO,MAAM,+BAA+B,kDAAkD,mBAAmB,eAAe,0CAA0C,OAAO,uFAAuF,oNAAoN,OAAO,mFAAmF,+DAA+D,6JAA6J,oDAAoD,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAnuE;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,YAAY,sBAAsB,UAAU,QAAQ,aAAa,gBAAgB,2HAA2H,uCAAuC,2CAA2C,kEAAkE,oEAAoE,wDAAwD,OAAO,4BAA4B,sCAAsC,OAAO,+BAA+B,yCAAyC,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA72B;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,iIAAiI,4CAA4C,2CAA2C,GAAG,GAAG,E;;;;;;;;;;;;ACAhd;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,uHAAuH,oCAAoC,2CAA2C,GAAG,GAAG,E;;;;;;;;;;;;ACA9b;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,8JAA8J,wCAAwC,8CAA8C,GAAG,GAAG,E;;;;;;;;;;;;ACA5e;AAAe,wEAAS,UAAU,sBAAsB,UAAU,mCAAmC,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,8HAA8H,0CAA0C,gCAAgC,6EAA6E,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAtiB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,mCAAmC,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,kBAAkB,uBAAuB,gBAAgB,2KAA2K,uCAAuC,yCAAyC,iFAAiF,EAAE,gMAAgM,8CAA8C,mBAAmB,0FAA0F,4BAA4B,8DAA8D,yEAAyE,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACArpC;AAAe,wEAAS,UAAU,sBAAsB,UAAU,mCAAmC,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,2HAA2H,uCAAuC,gCAAgC,iFAAiF,EAAE,0BAA0B,mEAAmE,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAxoB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,uIAAuI,mCAAmC,eAAe,iEAAiE,uCAAuC,uBAAuB,wBAAwB,8BAA8B,+DAA+D,iCAAiC,0DAA0D,GAAG,GAAG,E;;;;;;;;;;;;ACAhwB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,yHAAyH,qCAAqC,6CAA6C,GAAG,GAAG,E;;;;;;;;;;;;ACAnc;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,QAAQ,sBAAsB,gBAAgB,0HAA0H,sCAAsC,yCAAyC,iEAAiE,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAvjB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,qHAAqH,kCAAkC,yCAAyC,4DAA4D,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAjgB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,wJAAwJ,oCAAoC,GAAG,E;;;;;;;;;;;;ACApY;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,qHAAqH,kCAAkC,yCAAyC,8CAA8C,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAnf;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,4JAA4J,uCAAuC,GAAG,E;;;;;;;;;;;;ACA3Y;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,oHAAoH,kCAAkC,GAAG,E;;;;;;;;;;;;ACA9V;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,wJAAwJ,oCAAoC,GAAG,E;;;;;;;;;;;;ACApY;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,2HAA2H,wCAAwC,GAAG,E;;;;;;;;;;;;ACA3W;AAAe,wEAAS,4BAA4B,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,iCAAiC,+BAA+B,UAAU,oCAAoC,sBAAsB,UAAU,6BAA6B,uBAAuB,UAAU,yBAAyB,sBAAsB,UAAU,sBAAsB,iCAAiC,UAAU,WAAW,aAAa,UAAU,+BAA+B,uBAAuB,6BAA6B,iKAAiK,2CAA2C,yEAAyE,qDAAqD,gNAAgN,4NAA4N,uEAAuE,oDAAoD,6CAA6C,sHAAsH,2DAA2D,EAAE,8IAA8I,wDAAwD,qFAAqF,4DAA4D,YAAY,EAAE,OAAO,8BAA8B,qCAAqC,OAAO,4DAA4D,uBAAuB,qCAAqC,WAAW,mBAAmB,iBAAiB,mBAAmB,sBAAsB,cAAc,GAAG,IAAI,IAAI,KAAK,EAAE,OAAO,yBAAyB,2CAA2C,2CAA2C,WAAW,EAAE,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAhkF;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,uBAAuB,+BAA+B,UAAU,WAAW,sBAAsB,UAAU,gBAAgB,uBAAuB,UAAU,UAAU,uBAAuB,gBAAgB,uJAAuJ,2EAA2E,YAAY,yCAAyC,iOAAiO,sBAAsB,uEAAuE,gKAAgK,mGAAmG,6GAA6G,eAAe,8CAA8C,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAn6C;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,0CAA0C,sBAAsB,gBAAgB,uJAAuJ,6EAA6E,YAAY,8EAA8E,YAAY,2EAA2E,YAAY,0CAA0C,GAAG,E;;;;;;;;;;;;ACA7tB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,qHAAqH,mCAAmC,GAAG,E;;;;;;;;;;;;ACAhW;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,6BAA6B,sBAAsB,mKAAmK,gBAAgB,4HAA4H,wCAAwC,iCAAiC,uDAAuD,wEAAwE,+EAA+E,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAl3B;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,8JAA8J,0CAA0C,GAAG,E;;;;;;;;;;;;ACAhZ;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,4JAA4J,uCAAuC,kBAAkB,mBAAmB,uCAAuC,6BAA6B,2CAA2C,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAziB;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,aAAa,kCAAkC,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,yCAAyC,sBAAsB,UAAU,oBAAoB,iCAAiC,gBAAgB,0HAA0H,sCAAsC,6LAA6L,uEAAuE,2JAA2J,yFAAyF,2CAA2C,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA9lC;AAAe,wEAAS,0CAA0C,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,qBAAqB,gCAAgC,UAAU,gBAAgB,sBAAsB,UAAU,kCAAkC,uBAAuB,UAAU,oBAAoB,iCAAiC,gBAAgB,yJAAyJ,oCAAoC,wFAAwF,uGAAuG,kBAAkB,iBAAiB,gOAAgO,6BAA6B,2EAA2E,OAAO,mDAAmD,oJAAoJ,OAAO,sBAAsB,kEAAkE,kEAAkE,EAAE,OAAO,0BAA0B,+DAA+D,OAAO,wBAAwB,4DAA4D,OAAO,wCAAwC,2CAA2C,qEAAqE,WAAW,8CAA8C,qEAAqE,WAAW,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA9hE;AAAe,wEAAS,kGAAkG,sBAAsB,UAAU,UAAU,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,8CAA8C,sBAAsB,UAAU,+BAA+B,uBAAuB,gBAAgB,qKAAqK,kFAAkF,kHAAkH,wCAAwC,6MAA6M,4CAA4C,OAAO,wEAAwE,mIAAmI,OAAO,gCAAgC,4DAA4D,OAAO,4BAA4B,iFAAiF,OAAO,4BAA4B,2EAA2E,OAAO,iCAAiC,6DAA6D,OAAO,gDAAgD,sCAAsC,OAAO,2CAA2C,sCAAsC,OAAO,0CAA0C,yDAAyD,OAAO,8CAA8C,oBAAoB,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAjlE;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,eAAe,sBAAsB,UAAU,UAAU,aAAa,UAAU,eAAe,uBAAuB,gBAAgB,8JAA8J,wCAAwC,sKAAsK,mFAAmF,GAAG,GAAG,E;;;;;;;;;;;;ACAlxB;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,eAAe,sBAAsB,UAAU,UAAU,aAAa,UAAU,0BAA0B,uBAAuB,gBAAgB,+HAA+H,2CAA2C,yBAAyB,4NAA4N,mFAAmF,GAAG,GAAG,E;;;;;;;;;;;;ACAh1B;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,oKAAoK,+CAA+C,GAAG,E;;;;;;;;;;;;ACA3Z;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,WAAW,+BAA+B,UAAU,2BAA2B,sBAAsB,UAAU,gBAAgB,uBAAuB,UAAU,QAAQ,aAAa,wCAAwC,gBAAgB,yJAAyJ,2EAA2E,YAAY,8EAA8E,YAAY,4FAA4F,YAAY,0CAA0C,uHAAuH,wBAAwB,2DAA2D,OAAO,+BAA+B,yBAAyB,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAtqC;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,gBAAgB,uBAAuB,gBAAgB,sJAAsJ,iCAAiC,sFAAsF,yBAAyB,kIAAkI,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAnrB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,2HAA2H,uCAAuC,yCAAyC,sDAAsD,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAtgB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,6HAA6H,yCAAyC,gBAAgB,gBAAgB,GAAG,gBAAgB,GAAG,gBAAgB,EAAE,kCAAkC,4DAA4D,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAjlB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,4JAA4J,sCAAsC,mCAAmC,qFAAqF,YAAY,wFAAwF,YAAY,iFAAiF,SAAS,2CAA2C,wDAAwD,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACA52B;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,qHAAqH,kCAAkC,gCAAgC,oFAAoF,6BAA6B,SAAS,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAtjB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,gBAAgB,oIAAoI,mCAAmC,uCAAuC,oBAAoB,iCAAiC,0CAA0C,wCAAwC,WAAW,OAAO,yCAAyC,WAAW,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA9lB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,sHAAsH,mCAAmC,wKAAwK,sCAAsC,GAAG,GAAG,E;;;;;;;;;;;;ACA/lB;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,gBAAgB,+BAA+B,UAAU,kBAAkB,sBAAsB,UAAU,2BAA2B,aAAa,UAAU,mCAAmC,uBAAuB,gBAAgB,0JAA0J,kCAAkC,uCAAuC,4JAA4J,qMAAqM,cAAc,8IAA8I,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA3pC;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,sHAAsH,mCAAmC,oCAAoC,GAAG,GAAG,E;;;;;;;;;;;;ACArb;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,uHAAuH,qCAAqC,GAAG,E;;;;;;;;;;;;ACApW;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,cAAc,uBAAuB,UAAU,oDAAoD,wBAAwB,UAAU,MAAM,aAAa,UAAU,MAAM,uBAAuB,YAAY,oBAAoB,0DAA0D,gBAAgB,qJAAqJ,gCAAgC,qDAAqD,+BAA+B,SAAS,KAAK,qDAAqD,uEAAuE,6BAA6B,uHAAuH,EAAE,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAtiC;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,2BAA2B,sBAAsB,UAAU,gBAAgB,uBAAuB,gBAAgB,8IAA8I,2EAA2E,YAAY,8EAA8E,YAAY,iCAAiC,mCAAmC,wEAAwE,YAAY,yEAAyE,YAAY,gFAAgF,SAAS,4BAA4B,yFAAyF,qCAAqC,6CAA6C,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAlpC;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,mHAAmH,gCAAgC,oBAAoB,GAAG,GAAG,E;;;;;;;;;;;;ACAlX;AAAe,wEAAS,UAAU,sBAAsB,UAAU,mCAAmC,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,2JAA2J,qCAAqC,gCAAgC,oKAAoK,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACArpB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,sHAAsH,mCAAmC,gCAAgC,2WAA2W,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAzyB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,yJAAyJ,oCAAoC,mBAAmB,8DAA8D,6CAA6C,6BAA6B,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA1iB;AAAe,wEAAS,qCAAqC,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,yBAAyB,sBAAsB,UAAU,SAAS,aAAa,UAAU,UAAU,uBAAuB,gBAAgB,8LAA8L,oCAAoC,oBAAoB,kBAAkB,wKAAwK,0HAA0H,6CAA6C,wEAAwE,eAAe,EAAE,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAjiC;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,oHAAoH,kCAAkC,GAAG,E;;;;;;;;;;;;ACA9V;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,iCAAiC,uBAAuB,UAAU,oBAAoB,iCAAiC,UAAU,UAAU,uBAAuB,YAAY,cAAc,gCAAgC,gBAAgB,qIAAqI,oCAAoC,sMAAsM,gKAAgK,yDAAyD,uHAAuH,sJAAsJ,6FAA6F,6DAA6D,2FAA2F,gEAAgE,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA9gD;AAAe,wEAAS,UAAU,sBAAsB,UAAU,eAAe,uBAAuB,4CAA4C,sSAAsS,yGAAyG,6BAA6B,aAAa,OAAO,aAAa,EAAE,GAAG,gBAAgB,wGAAwG,mFAAmF,YAAY,oCAAoC,kBAAkB,GAAG,GAAG,E;;;;;;;;;;;;ACAz3B;AAAe,wEAAS,gDAAgD,sBAAsB,UAAU,gBAAgB,uCAAuC,YAAY,oBAAoB,uCAAuC,gBAAgB,qIAAqI,oCAAoC,sDAAsD,wIAAwI,2DAA2D,8EAA8E,OAAO,gCAAgC,+CAA+C,0BAA0B,+DAA+D,WAAW,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA76B;AAAe,wEAAS,6BAA6B,sBAAsB,UAAU,qDAAqD,uBAAuB,gBAAgB,qLAAqL,wGAAwG,uCAAuC,4BAA4B,8KAA8K,YAAY,aAAa,oCAAoC,iBAAiB,uBAAuB,GAAG,GAAG,E;;;;;;;;;;;;ACA1yB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,iBAAiB,sBAAsB,UAAU,kBAAkB,sBAAsB,gBAAgB,6JAA6J,uCAAuC,0BAA0B,6BAA6B,0BAA0B,mDAAmD,qCAAqC,OAAO,kDAAkD,oCAAoC,OAAO,iBAAiB,uBAAuB,4BAA4B,uCAAuC,uDAAuD,WAAW,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAn7B;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,0HAA0H,sCAAsC,wBAAwB,6CAA6C,yBAAyB,gCAAgC,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAhf;AAAe,wEAAS,gCAAgC,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,iBAAiB,sBAAsB,UAAU,+EAA+E,uBAAuB,gBAAgB,gKAAgK,0CAA0C,uBAAuB,+MAA+M,oFAAoF,2HAA2H,OAAO,sNAAsN,sFAAsF,GAAG,GAAG,E;;;;;;;;;;;;ACApzC;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,4HAA4H,yCAAyC,GAAG,E;;;;;;;;;;;;ACA7W;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,kKAAkK,6CAA6C,GAAG,E;;;;;;;;;;;;ACAvZ;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,qKAAqK,+CAA+C,mBAAmB,yBAAyB,iCAAiC,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAnf;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,kIAAkI,+CAA+C,GAAG,E;;;;;;;;;;;;ACAzX;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,0JAA0J,qCAAqC,mBAAmB,yBAAyB,iCAAiC,OAAO,6CAA6C,yBAAyB,gCAAgC,WAAW,OAAO,6CAA6C,0CAA0C,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAprB;AAAe,wEAAS,oCAAoC,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,0BAA0B,+BAA+B,UAAU,MAAM,sBAAsB,UAAU,WAAW,aAAa,UAAU,qCAAqC,uBAAuB,gBAAgB,gKAAgK,mEAAmE,oGAAoG,oCAAoC,iCAAiC,oCAAoC,qBAAqB,WAAW,sXAAsX,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAnwC;AAAe,wEAAS,sBAAsB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,mBAAmB,uBAAuB,gBAAgB,uHAAuH,oCAAoC,6CAA6C,yDAAyD,OAAO,8CAA8C,+CAA+C,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAvnB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,gBAAgB,aAAa,gBAAgB,mHAAmH,gCAAgC,0EAA0E,yBAAyB,iCAAiC,2DAA2D,8BAA8B,2LAA2L,WAAW,SAAS,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAxzB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,2JAA2J,sCAAsC,kBAAkB,iTAAiT,GAAG,GAAG,E;;;;;;;;;;;;ACA/sB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,iKAAiK,2CAA2C,4CAA4C,GAAG,GAAG,E;;;;;;;;;;;;ACAnc;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,sJAAsJ,kCAAkC,GAAG,E;;;;;;;;;;;;ACAhY;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,4HAA4H,wCAAwC,6CAA6C,YAAY,8CAA8C,QAAQ,cAAc,GAAG,GAAG,E;;;;;;;;;;;;ACA5e;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,SAAS,aAAa,UAAU,UAAU,uBAAuB,gBAAgB,mHAAmH,gCAAgC,iDAAiD,GAAG,GAAG,E;;;;;;;;;;;;ACA1d;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,gBAAgB,yIAAyI,uCAAuC,wBAAwB,4BAA4B,2CAA2C,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAra;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,uJAAuJ,kCAAkC,sBAAsB,iBAAiB,oBAAoB,GAAG,GAAG,E;;;;;;;;;;;;ACA/b;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,sJAAsJ,iCAAiC,qBAAqB,kBAAkB,oBAAoB,GAAG,GAAG,E;;;;;;;;;;;;ACA7b;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,4JAA4J,wCAAwC,GAAG,E;;;;;;;;;;;;ACA5Y;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,aAAa,kCAAkC,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,gBAAgB,aAAa,UAAU,IAAI,uBAAuB,gBAAgB,qJAAqJ,gCAAgC,0DAA0D,iKAAiK,UAAU,MAAM,UAAU,yCAAyC,sFAAsF,uDAAuD,6IAA6I,OAAO,uCAAuC,yCAAyC,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAnqC;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,gBAAgB,0IAA0I,yCAAyC,GAAG,E;;;;;;;;;;;;ACA/T;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,wJAAwJ,mCAAmC,mBAAmB,GAAG,GAAG,E;;;;;;;;;;;;ACAzZ;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,yJAAyJ,oCAAoC,qBAAqB,sBAAsB,wBAAwB,2CAA2C,iCAAiC,OAAO,uCAAuC,8CAA8C,OAAO,sCAAsC,6CAA6C,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAptB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,sHAAsH,oCAAoC,GAAG,E;;;;;;;;;;;;ACAlW;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,yJAAyJ,oCAAoC,mBAAmB,2FAA2F,2IAA2I,qCAAqC,2BAA2B,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAxsB;AAAe,wEAAS,uBAAuB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,SAAS,uCAAuC,gBAAgB,uJAAuJ,kCAAkC,oDAAoD,wCAAwC,wCAAwC,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAtlB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,oIAAoI,iDAAiD,GAAG,E;;;;;;;;;;;;ACA7X;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,yHAAyH,uCAAuC,GAAG,E;;;;;;;;;;;;ACAxW;AAAe,wEAAS,UAAU,sBAAsB,UAAU,mCAAmC,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,yHAAyH,sCAAsC,0CAA0C,6BAA6B,wCAAwC,4HAA4H,EAAE,8CAA8C,GAAG,GAAG,E;;;;;;;;;;;;ACAzsB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,eAAe,sBAAsB,UAAU,QAAQ,aAAa,UAAU,qBAAqB,uBAAuB,gBAAgB,sJAAsJ,iCAAiC,8CAA8C,0IAA0I,qEAAqE,MAAM,KAAK,gBAAgB,MAAM,kBAAkB,kCAAkC,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA/1B;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,6JAA6J,8CAA8C,0SAA0S,GAAG,GAAG,E;;;;;;;;;;;;ACAhsB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,0JAA0J,qCAAqC,gCAAgC,kDAAkD,EAAE,gCAAgC,wBAAwB,sDAAsD,8BAA8B,uDAAuD,OAAO,6BAA6B,2CAA2C,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA/yB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,8JAA8J,qCAAqC,GAAG,E;;;;;;;;;;;;ACA3Y;AAAe,wEAAS,UAAU,sBAAsB,UAAU,YAAY,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,sHAAsH,mCAAmC,wCAAwC,GAAG,GAAG,E;;;;;;;;;;;;ACAzb;AAAe,wEAAS,UAAU,sBAAsB,UAAU,oDAAoD,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,qCAAqC,kFAAkF,qFAAqF,sEAAsE,GAAG,uFAAuF,8DAA8D,6CAA6C,GAAG,gBAAgB,gIAAgI,2CAA2C,0FAA0F,4FAA4F,2CAA2C,sIAAsI,EAAE,uBAAuB,wDAAwD,8CAA8C,WAAW,EAAE,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA/5C;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,+HAA+H,0CAA0C,qLAAqL,uCAAuC,yCAAyC,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAnrB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,qBAAqB,uBAAuB,YAAY,cAAc,kBAAkB,gBAAgB,qJAAqJ,6FAA6F,YAAY,uCAAuC,gCAAgC,GAAG,GAAG,E;;;;;;;;;;;;ACAlnB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,6HAA6H,0CAA0C,GAAG,E;;;;;;;;;;;;ACA/W;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,4HAA4H,wCAAwC,6BAA6B,GAAG,GAAG,E;;;;;;;;;;;;ACA5Y;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,oBAAoB,4BAA4B,+BAA+B,GAAG,gBAAgB,gIAAgI,6CAA6C,mBAAmB,qCAAqC,sEAAsE,YAAY,oEAAoE,SAAS,+BAA+B,cAAc,sBAAsB,KAAK,GAAG,QAAQ,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACAtvB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,wHAAwH,sCAAsC,mBAAmB,qCAAqC,gFAAgF,YAAY,gFAAgF,kBAAkB,GAAG,GAAG,E;;;;;;;;;;;;ACA/lB;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,gBAAgB,uBAAuB,gBAAgB,sHAAsH,4CAA4C,uHAAuH,kCAAkC,qDAAqD,yBAAyB,cAAc,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAlqB;AAAe,wEAAS,8BAA8B,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,iBAAiB,sBAAsB,gBAAgB,wJAAwJ,mCAAmC,oBAAoB,qBAAqB,qBAAqB,mHAAmH,iBAAiB,cAAc,kCAAkC,4IAA4I,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAh1B;AAAe,wEAAS,6BAA6B,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,oBAAoB,kCAAkC,UAAU,oBAAoB,iCAAiC,UAAU,aAAa,aAAa,gBAAgB,2JAA2J,8CAA8C,qFAAqF,0CAA0C,qIAAqI,8BAA8B,0CAA0C,uGAAuG,uFAAuF,4BAA4B,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAvnC;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,yJAAyJ,oCAAoC,+LAA+L,6BAA6B,GAAG,GAAG,E;;;;;;;;;;;;ACApmB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,kKAAkK,4CAA4C,+SAA+S,GAAG,GAAG,E;;;;;;;;;;;;ACAxsB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,+JAA+J,yCAAyC,qCAAqC,6CAA6C,EAAE,oCAAoC,qCAAqC,YAAY,qCAAqC,YAAY,2CAA2C,YAAY,yCAAyC,YAAY,sCAAsC,kBAAkB,qDAAqD,kFAAkF,0CAA0C,wBAAwB,iCAAiC,WAAW,OAAO,kCAAkC,WAAW,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAznC;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,gIAAgI,4CAA4C,eAAe,gBAAgB,GAAG,GAAG,E;;;;;;;;;;;;ACAtZ;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,uJAAuJ,kCAAkC,kCAAkC,2EAA2E,YAAY,2EAA2E,kBAAkB,qDAAqD,GAAG,GAAG,E;;;;;;;;;;;;ACA/oB;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,WAAW,4BAA4B,UAAU,yCAAyC,sBAAsB,gBAAgB,uHAAuH,oCAAoC,4EAA4E,sCAAsC,uCAAuC,wDAAwD,8CAA8C,eAAe,uCAAuC,WAAW,uCAAuC,oDAAoD,WAAW,4CAA4C,+CAA+C,WAAW,4DAA4D,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAvjC;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,GAAG,sBAAsB,gBAAgB,wJAAwJ,mCAAmC,sCAAsC,4CAA4C,EAAE,0BAA0B,iBAAiB,MAAM,6BAA6B,6BAA6B,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACAvqB;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,mBAAmB,sBAAsB,gBAAgB,sJAAsJ,iCAAiC,sCAAsC,uFAAuF,EAAE,+BAA+B,iBAAiB,iBAAiB,6BAA6B,2CAA2C,OAAO,+BAA+B,iBAAiB,iBAAiB,6BAA6B,2CAA2C,OAAO,8BAA8B,iBAAiB,iBAAiB,6BAA6B,0CAA0C,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA1hC;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,UAAU,sBAAsB,gBAAgB,6HAA6H,0CAA0C,kCAAkC,gDAAgD,2CAA2C,gEAAgE,oIAAoI,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACApuB;AAAe,wEAAS,6BAA6B,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,qBAAqB,6BAA6B,gBAAgB,qHAAqH,mCAAmC,mDAAmD,0FAA0F,GAAG,GAAG,E","file":"!!raw-loader!-examples-1-index-ts.js","sourcesContent":["export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-arc-chart-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiArcChartExample1 {\\n    readonly value = [40, 30, 20, 10];\\n\\n    activeItemIndex = NaN;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiLineHandler} from '@taiga-ui/addon-charts';\\n\\n@Component({\\n    selector: `tui-axes-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiAxesExample1 {\\n    readonly axisXLabels = [`Jan 2019`, `Feb`, `Mar`];\\n    readonly axisYLabels = [``, `25%`, `50%`, `75%`, `100%`];\\n    readonly axisYSecondaryLabels = [`80 k`, `100 k`, `120 k`];\\n    readonly verticalLinesHandler: TuiLineHandler = (index, total) =>\\n        index === total - 1 ? `none` : `dashed`;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {ceil} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-bar-chart-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiBarChartExample1 {\\n    readonly value = [\\n        [3660, 8281, 1069, 9034, 5797, 6918, 8495, 3234, 6204, 1392, 2088, 8637, 8779],\\n        [3952, 3671, 3781, 5323, 3537, 4107, 2962, 3320, 8632, 4755, 9130, 1195, 3574],\\n    ];\\n\\n    readonly labelsX = [`Jan 2019`, `Feb`, `Mar`];\\n    readonly labelsY = [`0`, `10 000`];\\n\\n    getHeight(max: number): number {\\n        return (max / ceil(max, -3)) * 100;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-bar-set-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiBarSetExample1 {\\n    readonly value = [30, 15, 10];\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-bar-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiBarExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {sum} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-legend-item-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiLegendItemExample1 {\\n    activeItemIndex = NaN;\\n\\n    readonly value = [13769, 12367, 10172, 3018, 2592];\\n    readonly sum = sum(...this.value);\\n    readonly labels = [`Food`, `Cafe`, `Open Source`, `Taxi`, `Other`];\\n\\n    isItemActive(index: number): boolean {\\n        return this.activeItemIndex === index;\\n    }\\n\\n    onHover(index: number, hovered: boolean): void {\\n        this.activeItemIndex = hovered ? index : 0;\\n    }\\n\\n    getColor(index: number): string {\\n        return `var(--tui-chart-${index})`;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_DEFAULT_STRINGIFY} from '@taiga-ui/cdk';\\nimport {TuiPoint} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-line-chart-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiLineChartExample1 {\\n    readonly value: readonly TuiPoint[] = [\\n        [50, 50],\\n        [100, 75],\\n        [150, 50],\\n        [200, 150],\\n        [250, 155],\\n        [300, 190],\\n        [350, 90],\\n    ];\\n\\n    readonly stringify = TUI_DEFAULT_STRINGIFY;\\n}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {\\n    TuiDay,\\n    TuiDayLike,\\n    TuiDayRange,\\n    TuiMonth,\\n    tuiPure,\\n    TuiStringHandler,\\n} from '@taiga-ui/cdk';\\nimport {TUI_MONTHS} from '@taiga-ui/core';\\nimport {Observable} from 'rxjs';\\nimport {map} from 'rxjs/operators';\\n\\n// @dynamic\\n@Component({\\n    selector: `tui-line-days-chart-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiLineDaysChartExample1 {\\n    range = new TuiDayRange(\\n        TuiDay.currentLocal(),\\n        TuiDay.currentLocal().append({year: 1}),\\n    );\\n\\n    readonly maxLength: TuiDayLike = {month: 12};\\n\\n    readonly xStringify$: Observable<TuiStringHandler<TuiDay>> = this.months$.pipe(\\n        map(\\n            months =>\\n                ({month, day}) =>\\n                    `${months[month]}, ${day}`,\\n        ),\\n    );\\n\\n    constructor(\\n        @Inject(TUI_MONTHS) private readonly months$: Observable<readonly string[]>,\\n    ) {}\\n\\n    get value(): ReadonlyArray<[TuiDay, number]> {\\n        return this.computeValue(this.range);\\n    }\\n\\n    @tuiPure\\n    computeLabels$({from, to}: TuiDayRange): Observable<readonly string[]> {\\n        return this.months$.pipe(\\n            map(months =>\\n                Array.from(\\n                    {length: TuiMonth.lengthBetween(from, to) + 1},\\n                    (_, i) => months[from.append({month: i}).month],\\n                ),\\n            ),\\n        );\\n    }\\n\\n    readonly yStringify: TuiStringHandler<number> = y =>\\n        `${(10 * y).toLocaleString(`en-US`, {maximumFractionDigits: 0})} $`;\\n\\n    @tuiPure\\n    private computeValue({from, to}: TuiDayRange): ReadonlyArray<[TuiDay, number]> {\\n        return new Array(TuiDay.lengthBetween(from, to) + 1)\\n            .fill(0)\\n            .reduce<ReadonlyArray<[TuiDay, number]>>(\\n                (array, _, i) => [\\n                    ...array,\\n                    [\\n                        from.append({day: i}),\\n                        (i ? array[i - 1][1] : 100) + Math.random() * 10 - 5,\\n                    ],\\n                ],\\n                [],\\n            );\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-pie-chart-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiPieChartExample1 {\\n    readonly value = [40, 30, 20, 10];\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-ring-chart-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiRingChartExample1 {\\n    readonly value = [40, 30, 20, 10];\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-accordion-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiAccordionExample1 {}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiAlertService} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-action-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiActionExample1 {\\n    constructor(\\n        @Inject(TuiAlertService)\\n        private readonly alertService: TuiAlertService,\\n    ) {}\\n\\n    onClick(result: string): void {\\n        this.alertService.open(result).subscribe();\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-avatar-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiAvatarExample1 {\\n    avatar = `https://ng-web-apis.github.io/dist/assets/images/web-api.svg`;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-badge-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiBadgeExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-badged-content-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiBadgedContentExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-breadcrumbs-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiBreadcrumbsExample1 {\\n    items = [\\n        {\\n            caption: `Selects`,\\n            routerLink: `/components/select`,\\n        },\\n        {\\n            caption: `Multi`,\\n            routerLink: `/components/multi-select`,\\n        },\\n        {\\n            caption: `With tags`,\\n            routerLink: `/components/multi-select`,\\n        },\\n        {\\n            caption: `Current`,\\n            routerLink: `/navigation/breadcrumbs`,\\n            routerLinkActiveOptions: {exact: true},\\n        },\\n    ];\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\nimport {default as avatar} from '!!file-loader!../../../../../assets/images/avatar.jpg';\\n\\n@Component({\\n    selector: `tui-button-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiButtonExample1 {\\n    readonly avatarUrl = avatar;\\n\\n    onClick(event: MouseEvent): void {\\n        console.info(`click`, event);\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiMonth} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-calendar-month-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiMonthExample1 {\\n    value: TuiMonth | null = null;\\n    hoveredMonth: TuiMonth | null = null;\\n\\n    onMonthClick(month: TuiMonth): void {\\n        this.value = month;\\n    }\\n\\n    onMonthHovered(month: TuiMonth | null): void {\\n        this.hoveredMonth = month;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-range-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiRangeExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiDay} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-calendar-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiCalendarExample1 {\\n    value: TuiDay | null = null;\\n\\n    onDayClick(day: TuiDay): void {\\n        this.value = day;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-card-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiCardExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-carousel-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiCarouselExample1 {\\n    index = 2;\\n\\n    readonly items = [\\n        `John Cleese`,\\n        `Eric Idle`,\\n        `Michael Palin`,\\n        `Graham Chapman`,\\n        `Terry Gilliam`,\\n        `Terry Jones`,\\n    ];\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-checkbox-block-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiCheckboxBlockExample1 {\\n    testForm = new FormGroup({\\n        testValue1: new FormControl(false),\\n        testValue2: new FormControl(false),\\n        testValue3: new FormControl(false),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-checkbox-labeled-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiCheckboxLabeledExample1 {\\n    testForm = new FormGroup({\\n        testValue1: new FormControl(true),\\n        testValue2: new FormControl(false),\\n        testValue3: new FormControl(false),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-checkbox-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiCheckboxExample1 {\\n    testForm = new FormGroup({\\n        testValue1: new FormControl(true),\\n        testValue2: new FormControl(false),\\n        testValue3: new FormControl({value: true, disabled: true}),\\n        testValue4: new FormControl({value: false, disabled: true}),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {defaultEditorColors} from '@taiga-ui/addon-editor';\\n\\n@Component({\\n    selector: `tui-color-picker-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiColorPickerExample1 {\\n    color = `#ffdd2d`;\\n\\n    readonly palette = defaultEditorColors;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_DEFAULT_MATCHER} from '@taiga-ui/cdk';\\nimport {Observable, of, Subject} from 'rxjs';\\nimport {delay, filter, startWith, switchMap} from 'rxjs/operators';\\n\\nimport {default as avatar} from '!!file-loader!../../../../../assets/images/avatar.jpg';\\n\\nclass User {\\n    constructor(\\n        readonly firstName: string,\\n        readonly lastName: string,\\n        readonly avatarUrl: string | null = null,\\n    ) {}\\n\\n    toString(): string {\\n        return `${this.firstName} ${this.lastName}`;\\n    }\\n}\\n\\nconst databaseMockData: readonly User[] = [\\n    new User(`Roman`, `Sedov`, `http://marsibarsi.me/images/1x1small.jpg`),\\n    new User(`Alex`, `Inkin`, avatar),\\n];\\n\\n@Component({\\n    selector: `tui-combo-box-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiComboBoxExample1 {\\n    readonly search$: Subject<string | null> = new Subject();\\n\\n    readonly items$: Observable<readonly User[] | null> = this.search$.pipe(\\n        filter(value => value !== null),\\n        switchMap(search =>\\n            this.serverRequest(search).pipe(startWith<readonly User[] | null>(null)),\\n        ),\\n        startWith(databaseMockData),\\n    );\\n\\n    readonly testValue = new FormControl(databaseMockData[1]);\\n\\n    onSearchChange(searchQuery: string | null): void {\\n        this.search$.next(searchQuery);\\n    }\\n\\n    extractValueFromEvent(event: Event): string | null {\\n        return (event.target as HTMLInputElement)?.value || null;\\n    }\\n\\n    /**\\n     * Service request emulation\\n     */\\n    private serverRequest(searchQuery: string | null): Observable<readonly User[]> {\\n        const result = databaseMockData.filter(user =>\\n            TUI_DEFAULT_MATCHER(user, searchQuery || ``),\\n        );\\n\\n        return of(result).pipe(delay(Math.random() * 1000 + 500));\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_ARROW} from '@taiga-ui/kit';\\n\\n@Component({\\n    selector: `tui-data-list-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiDataListExample1 {\\n    readonly arrow = TUI_ARROW;\\n\\n    readonly groups = [\\n        {\\n            label: $localize`Components`,\\n            items: [\\n                {\\n                    label: `Input`,\\n                    routerLink: `/components/input`,\\n                },\\n                {\\n                    label: `Select`,\\n                    routerLink: `/components/select`,\\n                },\\n                {\\n                    label: `DataList`,\\n                    routerLink: `/components/data-list`,\\n                },\\n            ],\\n        },\\n        {\\n            label: $localize`Styles`,\\n            items: [\\n                {\\n                    label: $localize`Icons`,\\n                    routerLink: `/icons`,\\n                },\\n                {\\n                    label: $localize`Typography`,\\n                    routerLink: `/typography`,\\n                },\\n            ],\\n        },\\n        {\\n            label: ``,\\n            items: [\\n                {\\n                    label: $localize`Changelog`,\\n                    routerLink: `/changelog`,\\n                },\\n            ],\\n        },\\n    ];\\n}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiDialogService} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-dialog-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiDialogExampleComponent1 {\\n    constructor(\\n        @Inject(TuiDialogService) private readonly dialogService: TuiDialogService,\\n    ) {}\\n\\n    showDialog(): void {\\n        this.dialogService\\n            .open(`This is a plain string dialog`, {label: `Heading`, size: `s`})\\n            .subscribe();\\n    }\\n\\n    showDialogWithCustomButton(): void {\\n        this.dialogService\\n            .open(`Good, Anakin, Good!`, {\\n                label: `Star wars. Episode III`,\\n                size: `s`,\\n                data: {button: `Do it!`},\\n            })\\n            .subscribe();\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, Validators} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_EDITOR_EXTENSIONS, TuiEditorTool} from '@taiga-ui/addon-editor';\\n\\nexport async function importStarterKit(): Promise<unknown> {\\n    return (await import(`@taiga-ui/addon-editor/extensions/starter-kit`)).StarterKit;\\n}\\n\\nexport async function importEmojiExtension(): Promise<unknown> {\\n    return (await import(`./smiles-tool/emoji.extension`)).EmojiExtension;\\n}\\n\\n@Component({\\n    selector: `tui-editor-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    providers: [\\n        {\\n            provide: TUI_EDITOR_EXTENSIONS,\\n            useValue: [importStarterKit(), importEmojiExtension()],\\n        },\\n    ],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiEditorNewExample1 {\\n    readonly builtInTools = [TuiEditorTool.Undo];\\n    readonly control = new FormControl(``, Validators.required);\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-editor-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiEditorExample1 {\\n    model =\\n        `WYSIWYG (What you see is what you get) — Rich Text Editor for using with Angular forms.` +\\n        `<p><font size=\\\"6\\\">Heading</font></p><font size=\\\"4\\\">Lorem ipsum dolor sit amet <font color=\\\"#ff78a7\\\">` +\\n        `consectetur adipiscing elit</font>, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ` +\\n        `<span style=\\\"background-color: rgb(163, 129, 255);\\\">Ut enim </span></font><blockquote>ad minim veniam, ` +\\n        `<u>quis nostrud exercitation</u> <b>ullamco</b>, laboris nisi ut aliquip ex ea commodo consequat. ` +\\n        `Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</blockquote>` +\\n        `<p style=\\\"text-align: right;\\\">Excepteur sint occaecat ` +\\n        `cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>`;\\n\\n    onClick(): void {\\n        this.model = `<b>HTML FTW!</b>`;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiValidationError} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-error-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiErrorExample1 {\\n    enabled = false;\\n\\n    error = new TuiValidationError(`An error`);\\n\\n    get computedError(): TuiValidationError | null {\\n        return this.enabled ? this.error : null;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-expand-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiExpandExample1 {\\n    expanded = false;\\n\\n    toggle(): void {\\n        this.expanded = !this.expanded;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\nconst latinChars = /^[a-zA-Z]+$/;\\n\\nexport function passwordValidator(field: AbstractControl): Validators | null {\\n    return field.value && latinChars.test(field.value)\\n        ? null\\n        : {\\n              other: `Only latin letters are allowed`,\\n          };\\n}\\n\\nexport function superComputerValidator(field: AbstractControl): Validators | null {\\n    return field.value === `42`\\n        ? null\\n        : {\\n              other: `Wrong`,\\n          };\\n}\\n\\n@Component({\\n    selector: `tui-field-error-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiFieldErrorExample1 {\\n    readonly testValue1 = new FormControl(``, [Validators.required, passwordValidator]);\\n\\n    readonly testForm = new FormGroup({\\n        testValue1: this.testValue1,\\n        testValue2: new FormControl(``, [Validators.required, superComputerValidator]),\\n    });\\n\\n    constructor() {\\n        this.testValue1.valueChanges.subscribe(() => {\\n            this.testValue1.markAsTouched();\\n        });\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiBooleanHandler} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-filter-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiFilterExample1 {\\n    readonly form = new FormGroup({\\n        filters: new FormControl([`Food`]),\\n    });\\n\\n    readonly items = [\\n        `News`,\\n        `Food`,\\n        `Clothes`,\\n        `Popular`,\\n        `Goods`,\\n        `Furniture`,\\n        `Tech`,\\n        `Building materials`,\\n    ];\\n\\n    disabledItemHandler: TuiBooleanHandler<string> = item => item.length < 7;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-group-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.style.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiGroupExample1 {\\n    readonly items = [`Option 1`, `Option 2`, `Option 3`];\\n\\n    testForm = new FormGroup({\\n        testValue: new FormControl(``, Validators.required),\\n        multiSelectControl: new FormControl([], Validators.required),\\n        testValue3: new FormControl(``, Validators.required),\\n    });\\n}\\n\";","export default \"import {Component, ViewChild} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiHostedDropdownComponent} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-hosted-dropdown-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiHostedDropdownExample1 {\\n    @ViewChild(TuiHostedDropdownComponent)\\n    component?: TuiHostedDropdownComponent;\\n\\n    readonly items = [`Edit`, `Download`, `Rename`, `Delete`];\\n\\n    open = false;\\n\\n    onClick(): void {\\n        this.open = false;\\n        this.component?.nativeFocusableElement?.focus();\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {tuiCardExpireValidator, tuiCardNumberValidator} from '@taiga-ui/addon-commerce';\\n\\n@Component({\\n    selector: `tui-input-card-grouped-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n})\\nexport class TuiInputCardGroupedExample1 {\\n    readonly control = new FormControl(null, [\\n        tuiCardNumberValidator,\\n        tuiCardExpireValidator,\\n    ]);\\n\\n    get card(): string | null {\\n        const value = this.control.value ? this.control.value.card : ``;\\n\\n        if (value.length < 7) {\\n            return null;\\n        }\\n\\n        switch (value.charAt(0)) {\\n            case `0`:\\n            case `1`:\\n            case `2`:\\n                return `https://ng-web-apis.github.io/dist/assets/images/common.svg`;\\n            case `3`:\\n            case `4`:\\n            case `5`:\\n                return `https://ng-web-apis.github.io/dist/assets/images/geolocation.svg`;\\n            case `6`:\\n            case `7`:\\n                return `https://ng-web-apis.github.io/dist/assets/images/intersection-observer.svg`;\\n            case `8`:\\n            case `9`:\\n            default:\\n                return `https://ng-web-apis.github.io/dist/assets/images/payment-request.svg`;\\n        }\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-input-card-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputCardExample1 {\\n    readonly form = new FormGroup({\\n        card: new FormControl(``),\\n        expire: new FormControl(``),\\n        cvc: new FormControl(``),\\n    });\\n\\n    get card(): string | null {\\n        const value: string = this.form.get(`card`)!.value;\\n\\n        if (value.length < 7) {\\n            return null;\\n        }\\n\\n        switch (value.charAt(0)) {\\n            case `0`:\\n            case `1`:\\n            case `2`:\\n                return `https://ng-web-apis.github.io/dist/assets/images/common.svg`;\\n            case `3`:\\n            case `4`:\\n            case `5`:\\n                return `https://ng-web-apis.github.io/dist/assets/images/geolocation.svg`;\\n            case `6`:\\n            case `7`:\\n                return `https://ng-web-apis.github.io/dist/assets/images/intersection-observer.svg`;\\n            case `8`:\\n            case `9`:\\n            default:\\n                return `https://ng-web-apis.github.io/dist/assets/images/payment-request.svg`;\\n        }\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-input-copy-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputCopyExample1 {\\n    readonly testForm = new FormGroup({\\n        testValue: new FormControl(``, Validators.required),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-input-count-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputCountExample1 {\\n    readonly testForm = new FormGroup({\\n        testValue1: new FormControl(10, Validators.required),\\n        testValue2: new FormControl(10, Validators.required),\\n        testValue3: new FormControl(-10, Validators.required),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiDay, TuiDayRange} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-input-date-range-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputDateRangeExample1 {\\n    readonly testForm = new FormGroup({\\n        testValue: new FormControl(\\n            new TuiDayRange(new TuiDay(2018, 2, 10), new TuiDay(2018, 3, 20)),\\n        ),\\n    });\\n\\n    readonly min = new TuiDay(2000, 2, 20);\\n\\n    readonly max = new TuiDay(2040, 2, 20);\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiDay} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-input-date-time-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputDateTimeExample1 {\\n    readonly testForm = new FormGroup({\\n        testValue: new FormControl([new TuiDay(2017, 2, 15), null]),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiDay} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-input-date-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputDateExample1 {\\n    readonly testForm = new FormGroup({\\n        testValue: new FormControl(new TuiDay(2017, 0, 15)),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {tuiPure} from '@taiga-ui/cdk';\\nimport {TuiFileLike} from '@taiga-ui/kit';\\nimport {Observable, of, timer} from 'rxjs';\\nimport {map, mapTo, share, startWith, switchMap, tap} from 'rxjs/operators';\\n\\nclass RejectedFile {\\n    constructor(readonly file: TuiFileLike, readonly reason: string) {}\\n}\\n\\nfunction convertRejected({file, reason}: RejectedFile): TuiFileLike {\\n    return {\\n        name: file.name,\\n        size: file.size,\\n        type: file.type,\\n        content: reason,\\n    };\\n}\\n\\n@Component({\\n    selector: `tui-input-file-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputFileExample1 {\\n    readonly control = new FormControl();\\n\\n    @tuiPure\\n    get loading$(): Observable<readonly File[]> {\\n        return this.requests$.pipe(\\n            map(file => (file instanceof File ? [file] : [])),\\n            startWith([]),\\n        );\\n    }\\n\\n    @tuiPure\\n    get rejected$(): Observable<readonly TuiFileLike[]> {\\n        return this.requests$.pipe(\\n            map(file => (file instanceof RejectedFile ? [convertRejected(file)] : [])),\\n            tap(({length}) => {\\n                if (length) {\\n                    this.control.setValue(null);\\n                }\\n            }),\\n            startWith([]),\\n        );\\n    }\\n\\n    @tuiPure\\n    private get requests$(): Observable<RejectedFile | File | null> {\\n        return this.control.valueChanges.pipe(\\n            switchMap(file =>\\n                file ? this.serverRequest(file).pipe(startWith(file)) : of(null),\\n            ),\\n            share(),\\n        );\\n    }\\n\\n    private serverRequest(file: File): Observable<RejectedFile | File | null> {\\n        const delay = Math.round(Math.random() * 5000 + 500);\\n        const result =\\n            delay % 2\\n                ? null\\n                : new RejectedFile(file, `Server responded for odd number of time`);\\n\\n        return timer(delay).pipe(mapTo(result));\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiFileLike} from '@taiga-ui/kit';\\nimport {Subject} from 'rxjs';\\n\\n@Component({\\n    selector: `tui-input-files-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputFilesExample1 {\\n    readonly control = new FormControl();\\n    readonly rejectedFiles$ = new Subject<TuiFileLike | null>();\\n\\n    onReject(file: TuiFileLike | readonly TuiFileLike[]): void {\\n        this.rejectedFiles$.next(file as TuiFileLike);\\n    }\\n\\n    removeFile(): void {\\n        this.control.setValue(null);\\n    }\\n\\n    clearRejected(): void {\\n        this.rejectedFiles$.next(null);\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-input-month-range-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputMonthRangeExample1 {\\n    readonly control = new FormControl();\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `input-month-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class InputMonthExample1 {\\n    readonly control = new FormControl();\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-input-number-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputNumberExample1 {\\n    readonly control = new FormControl(100);\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-input-password-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputPasswordExample1 {\\n    testForm = new FormGroup({\\n        testValue: new FormControl(`password`, Validators.required),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiCountryIsoCode} from '@taiga-ui/i18n';\\n\\n@Component({\\n    selector: `tui-input-phone-international-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputPhoneExample1 {\\n    readonly testForm = new FormGroup({\\n        testValue: new FormControl(`+77777777777`, Validators.required),\\n    });\\n\\n    readonly countries: readonly TuiCountryIsoCode[] = [\\n        TuiCountryIsoCode.RU,\\n        TuiCountryIsoCode.KZ,\\n        TuiCountryIsoCode.UA,\\n        TuiCountryIsoCode.BY,\\n    ];\\n\\n    countryIsoCode = TuiCountryIsoCode.RU;\\n\\n    contact = {\\n        phone: `+375123456789`,\\n        phoneCountryCode: TuiCountryIsoCode.BY,\\n    };\\n\\n    patchValue(): void {\\n        this.countryIsoCode = this.contact.phoneCountryCode;\\n        this.testForm.get(`testValue`)?.patchValue(this.contact.phone);\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-input-phone-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputPhoneExample1 {\\n    testForm = new FormGroup({\\n        testValue: new FormControl(`+77777777777`, Validators.required),\\n    });\\n\\n    setValue(): void {\\n        this.testForm.get(`testValue`)!.setValue(`+79926775676`);\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-input-range-example-1`,\\n    templateUrl: `./index.html`,\\n    styles: [\\n        `\\n            tui-input-range {\\n                max-width: 30rem;\\n            }\\n        `,\\n    ],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputRangeExample1 {\\n    readonly min = 0;\\n    readonly max = 20;\\n    readonly sliderStep = 1;\\n    readonly steps = (this.max - this.min) / this.sliderStep;\\n    readonly quantum = 0.00001;\\n\\n    readonly control = new FormControl([3.14159, 15]);\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-input-tag-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputTagExample1 {\\n    readonly control = new FormControl([]);\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiTime} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-input-time-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputTimeExample1 {\\n    readonly testForm = new FormGroup({\\n        testValue: new FormControl(new TuiTime(12, 30)),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-input-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiInputExample1 {\\n    readonly testForm = new FormGroup({\\n        testValue: new FormControl(`mail@mail.ru`),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-island-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiIslandExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-label-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiLabelExample1 {\\n    readonly testForm = new FormGroup({\\n        testValue: new FormControl(),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-line-clamp-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiLineClampExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-link-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiLinkExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-loader-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiLoaderExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-marker-icon-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiMarkerIconExample1 {}\\n\";","export default \"import {Component, Inject, Injector} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiMobileCalendarDialogComponent} from '@taiga-ui/addon-mobile';\\nimport {TuiDay, tuiReplayedValueChangesFrom} from '@taiga-ui/cdk';\\nimport {TUI_MONTHS, TuiDialogService} from '@taiga-ui/core';\\nimport {TUI_CALENDAR_DATA_STREAM} from '@taiga-ui/kit';\\nimport {PolymorpheusComponent} from '@tinkoff/ng-polymorpheus';\\nimport {Observable} from 'rxjs';\\nimport {map, startWith, withLatestFrom} from 'rxjs/operators';\\n\\n// @dynamic\\n@Component({\\n    selector: `tui-mobile-calendar-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiMobileCalendarExample1 {\\n    private readonly control = new FormControl(new TuiDay(2020, 9, 3));\\n\\n    private readonly dialog$: Observable<TuiDay>;\\n\\n    readonly date$ = this.control.valueChanges.pipe(\\n        startWith(this.control.value),\\n        withLatestFrom(this.months),\\n        map(([value, months]) => this.getParsed(value, months)),\\n    );\\n\\n    constructor(\\n        @Inject(TuiDialogService) dialogService: TuiDialogService,\\n        @Inject(Injector) injector: Injector,\\n        @Inject(TUI_MONTHS) private readonly months: Observable<string[]>,\\n    ) {\\n        const dataStream = tuiReplayedValueChangesFrom(this.control);\\n        const computedInjector = Injector.create({\\n            providers: [\\n                {\\n                    provide: TUI_CALENDAR_DATA_STREAM,\\n                    useValue: dataStream,\\n                },\\n            ],\\n            parent: injector,\\n        });\\n        const content = new PolymorpheusComponent(\\n            TuiMobileCalendarDialogComponent,\\n            computedInjector,\\n        );\\n\\n        this.dialog$ = dialogService.open(content, {\\n            size: `fullscreen`,\\n            closeable: false,\\n            data: {\\n                min: TuiDay.currentLocal(),\\n            },\\n        });\\n    }\\n\\n    get empty(): boolean {\\n        return !this.control.value;\\n    }\\n\\n    getParsed(value: TuiDay, months: string[]): string {\\n        if (!value) {\\n            return `Choose a date`;\\n        }\\n\\n        const {month, day, year} = value as TuiDay;\\n\\n        return `${months[month]} ${day}, ${year}`;\\n    }\\n\\n    onClick(): void {\\n        this.dialog$.subscribe(value => {\\n            this.control.setValue(value);\\n        });\\n    }\\n}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiMobileDialogService} from '@taiga-ui/addon-mobile';\\nimport {TUI_IS_IOS} from '@taiga-ui/cdk';\\nimport {TuiAlertService} from '@taiga-ui/core';\\nimport {switchMap} from 'rxjs/operators';\\n\\n@Component({\\n    selector: `tui-mobile-dialog-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n    providers: [\\n        {\\n            provide: TUI_IS_IOS,\\n            useValue: false,\\n        },\\n    ],\\n})\\nexport class TuiMobileDialogExample1 {\\n    constructor(\\n        @Inject(TuiMobileDialogService)\\n        private readonly dialogService: TuiMobileDialogService,\\n        @Inject(TuiAlertService)\\n        private readonly alertService: TuiAlertService,\\n    ) {}\\n\\n    show(): void {\\n        const actions = [`No thanks`, `Remind me later`, `Rate now`];\\n\\n        this.dialogService\\n            .open(\\n                `If you like this app, please take a moment to leave a positive rating.`,\\n                {\\n                    label: `What do you think?`,\\n                    actions,\\n                },\\n            )\\n            .pipe(\\n                switchMap(index => this.alertService.open(`Selected: ${actions[index]}`)),\\n            )\\n            .subscribe();\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_IS_ANDROID, TUI_IS_IOS, TUI_IS_MOBILE} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-mobile-themes-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n    providers: [\\n        {\\n            provide: TUI_IS_MOBILE,\\n            useValue: true,\\n        },\\n        {\\n            provide: TUI_IS_ANDROID,\\n            useValue: true,\\n        },\\n        {\\n            provide: TUI_IS_IOS,\\n            useValue: false,\\n        },\\n    ],\\n})\\nexport class TuiMobileThemesExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-money-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiMoneyExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_DEFAULT_MATCHER, tuiPure} from '@taiga-ui/cdk';\\n\\nconst ITEMS: readonly string[] = [\\n    `Luke Skywalker`,\\n    `Leia Organa Solo`,\\n    `Darth Vader`,\\n    `Han Solo`,\\n    `Obi-Wan Kenobi`,\\n    `Yoda`,\\n];\\n\\n@Component({\\n    selector: `tui-multi-select-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiMultiSelectExample1 {\\n    search: string | null = ``;\\n\\n    readonly control = new FormControl([ITEMS[0]]);\\n\\n    @tuiPure\\n    filter(search: string | null): readonly string[] {\\n        return ITEMS.filter(item => TUI_DEFAULT_MATCHER(item, search || ``));\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-notification-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiNotificationExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-pagination-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiPaginationExample1 {\\n    length = 64;\\n\\n    index = 10;\\n\\n    goToPage(index: number): void {\\n        this.index = index;\\n        console.info(`New page:`, index);\\n    }\\n}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {DomSanitizer} from '@angular/platform-browser';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiPdfViewerOptions, TuiPdfViewerService} from '@taiga-ui/kit';\\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\\n\\n@Component({\\n    selector: `tui-pdf-viewer-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiPdfViewerExample1 {\\n    constructor(\\n        @Inject(DomSanitizer) private readonly sanitizer: DomSanitizer,\\n        @Inject(TuiPdfViewerService) private readonly pdfService: TuiPdfViewerService,\\n    ) {}\\n\\n    show(actions: PolymorpheusContent<TuiPdfViewerOptions>): void {\\n        this.pdfService\\n            .open(\\n                this.sanitizer.bypassSecurityTrustResourceUrl(`/assets/media/taiga.pdf`),\\n                {\\n                    label: `Taiga UI`,\\n                    actions,\\n                },\\n            )\\n            .subscribe();\\n    }\\n}\\n\";","export default \"import {Component, Inject, TemplateRef, ViewChild} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {PreviewDialogService} from '@taiga-ui/addon-preview';\\nimport {clamp, TuiSwipe} from '@taiga-ui/cdk';\\nimport {TuiAlertService, TuiDialogContext} from '@taiga-ui/core';\\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\\n\\n@Component({\\n    selector: `tui-preview-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiPreviewExample1 {\\n    @ViewChild(`preview`)\\n    readonly preview?: TemplateRef<TuiDialogContext<void>>;\\n\\n    @ViewChild(`contentSample`)\\n    readonly contentSample?: TemplateRef<Record<string, unknown>>;\\n\\n    index = 0;\\n    length = 2;\\n\\n    constructor(\\n        @Inject(PreviewDialogService)\\n        private readonly previewService: PreviewDialogService,\\n        @Inject(TuiAlertService)\\n        private readonly alertService: TuiAlertService,\\n    ) {}\\n\\n    get title(): string {\\n        return this.index === 0 ? `Transaction cert.jpg` : `My face.jpg`;\\n    }\\n\\n    get previewContent(): PolymorpheusContent {\\n        return this.index === 0 && this.contentSample\\n            ? this.contentSample\\n            : `http://marsibarsi.me/images/1x1small.jpg`;\\n    }\\n\\n    show(): void {\\n        this.previewService.open(this.preview || ``).subscribe({\\n            complete: () => console.info(`complete`),\\n        });\\n    }\\n\\n    download(): void {\\n        this.alertService.open(`Downloading...`).subscribe();\\n    }\\n\\n    delete(): void {\\n        this.alertService.open(`Deleting...`).subscribe();\\n    }\\n\\n    onSwipe(swipe: TuiSwipe): void {\\n        if (swipe.direction === `left`) {\\n            this.index = clamp(this.index + 1, 0, this.length - 1);\\n        }\\n\\n        if (swipe.direction === `right`) {\\n            this.index = clamp(this.index - 1, 0, this.length - 1);\\n        }\\n    }\\n}\\n\";","export default \"import {\\n    ChangeDetectorRef,\\n    Component,\\n    Inject,\\n    Optional,\\n    Self,\\n    ViewChild,\\n} from '@angular/core';\\nimport {NgControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {AbstractTuiControl, TuiNativeFocusableElement} from '@taiga-ui/cdk';\\nimport {TuiPrimitiveTextfieldComponent} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-primitive-textfield-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiPrimitiveTextfieldExample1 extends AbstractTuiControl<string> {\\n    @ViewChild(TuiPrimitiveTextfieldComponent)\\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\\n\\n    private isPasswordHidden = true;\\n\\n    constructor(\\n        @Optional()\\n        @Self()\\n        @Inject(NgControl)\\n        control: NgControl | null,\\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\\n    ) {\\n        super(control, changeDetectorRef);\\n    }\\n\\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\\n        return this.computedDisabled || !this.textfield\\n            ? null\\n            : this.textfield.nativeFocusableElement;\\n    }\\n\\n    get focused(): boolean {\\n        return !!this.textfield && this.textfield.focused;\\n    }\\n\\n    get icon(): string {\\n        return this.isPasswordHidden ? `tuiIconHideLarge` : `tuiIconShowLarge`;\\n    }\\n\\n    get hint(): string {\\n        return this.isPasswordHidden ? `Show password` : `Hide password`;\\n    }\\n\\n    get inputType(): string {\\n        return this.isPasswordHidden ? `password` : `text`;\\n    }\\n\\n    onValueChange(textValue: string): void {\\n        this.updateValue(textValue);\\n    }\\n\\n    onFocused(focused: boolean): void {\\n        this.updateFocused(focused);\\n    }\\n\\n    togglePasswordVisibility(): void {\\n        this.isPasswordHidden = !this.isPasswordHidden;\\n    }\\n\\n    protected getFallbackValue(): string {\\n        return ``;\\n    }\\n}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_IS_CYPRESS} from '@taiga-ui/cdk';\\nimport {of, timer} from 'rxjs';\\nimport {map, startWith} from 'rxjs/operators';\\n\\n@Component({\\n    selector: `tui-progress-bar-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiProgressBarExample1 {\\n    readonly value$ = this.isCypress\\n        ? of(40)\\n        : timer(300, 300).pipe(\\n              map(i => i + 30),\\n              startWith(30),\\n          );\\n\\n    constructor(@Inject(TUI_IS_CYPRESS) private readonly isCypress: boolean) {}\\n}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_IS_CYPRESS} from '@taiga-ui/cdk';\\nimport {of, timer} from 'rxjs';\\nimport {map, startWith, takeWhile} from 'rxjs/operators';\\n\\n@Component({\\n    selector: `tui-progress-circle-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiProgressCircleExample1 {\\n    readonly max = 100;\\n    readonly value$ = this.isCypress\\n        ? of(30)\\n        : timer(300, 200).pipe(\\n              map(i => i + 30),\\n              startWith(30),\\n              takeWhile(value => value <= this.max),\\n          );\\n\\n    constructor(@Inject(TUI_IS_CYPRESS) private readonly isCypress: boolean) {}\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-progress-segmented-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiProgressSegmentedExample1 {}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_LOADED} from '@taiga-ui/addon-mobile';\\nimport {TUI_IS_ANDROID, TUI_IS_IOS} from '@taiga-ui/cdk';\\nimport {TuiAlertService} from '@taiga-ui/core';\\nimport {Subject} from 'rxjs';\\n\\nconst loaded$ = new Subject<void>();\\n\\n@Component({\\n    selector: `tui-pull-to-refresh-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n    providers: [\\n        {\\n            provide: TUI_IS_IOS,\\n            useValue: false,\\n        },\\n        {\\n            provide: TUI_IS_ANDROID,\\n            useValue: true,\\n        },\\n        {\\n            provide: TUI_LOADED,\\n            useValue: loaded$.asObservable(),\\n        },\\n    ],\\n})\\nexport class TuiPullToRefreshExample1 {\\n    constructor(\\n        @Inject(TuiAlertService)\\n        private readonly alertService: TuiAlertService,\\n    ) {}\\n\\n    onPull(): void {\\n        this.alertService.open(`Loading...`).subscribe();\\n    }\\n\\n    finishLoading(): void {\\n        loaded$.next();\\n    }\\n}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiAlertService} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-push-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiPushExample1 {\\n    constructor(@Inject(TuiAlertService) private readonly alert: TuiAlertService) {}\\n\\n    onClose(): void {\\n        this.alert\\n            .open(`Close button is visible when you subscribe to (close) output`)\\n            .subscribe();\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-radio-block-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiRadioBlockExample1 {\\n    readonly testForm = new FormGroup({\\n        testValue: new FormControl(`orange`),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-radio-labeled-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiRadioLabeledExample1 {\\n    items = [{name: `tariff1`}, {name: `tariff2`}, {name: `tariff3`}];\\n\\n    testForm = new FormGroup({\\n        testValue1: new FormControl(this.items[0]),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-radio-list-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiRadioListExample1 {\\n    readonly items = [\\n        {\\n            name: `Simple`,\\n            description: `Something usual`,\\n        },\\n        {\\n            name: `Advanced`,\\n            description: `Something better`,\\n        },\\n        {\\n            name: `PRO`,\\n            description: `Something cool`,\\n        },\\n    ];\\n\\n    readonly testForm = new FormGroup({\\n        tariff: new FormControl(this.items[0]),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-radio-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiRadioExample1 {\\n    testForm = new FormGroup({\\n        testValue1: new FormControl(`One`),\\n        testValue2: new FormControl({value: `One`, disabled: true}),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\n\\n@Component({\\n    selector: `tui-rating-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n})\\nexport class TuiRatingExample1 {\\n    rateControl = new FormControl(2);\\n    rateValue = 2;\\n\\n    enableOrDisable(): void {\\n        if (this.rateControl.disabled) {\\n            this.rateControl.enable();\\n        } else {\\n            this.rateControl.disable();\\n        }\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-select-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiSelectExample1 {\\n    items = [\\n        `Luke Skywalker`,\\n        `Leia Organa Solo`,\\n        `Darth Vader`,\\n        `Han Solo`,\\n        `Obi-Wan Kenobi`,\\n        `Yoda`,\\n    ];\\n\\n    testValue = new FormControl();\\n}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiSheetService} from '@taiga-ui/addon-mobile';\\nimport {TuiDestroyService} from '@taiga-ui/cdk';\\nimport {EMPTY, Observable, Subject} from 'rxjs';\\nimport {first, retry, switchMap, takeUntil} from 'rxjs/operators';\\n\\n@Component({\\n    selector: `tui-sheet-example-1`,\\n    templateUrl: `./index.html`,\\n    providers: [TuiDestroyService],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiSheetExample1 {\\n    readonly stream$ = new Subject();\\n\\n    constructor(\\n        @Inject(TuiDestroyService) destroy$: Observable<unknown>,\\n        @Inject(TuiSheetService) service: TuiSheetService,\\n    ) {\\n        this.stream$\\n            .pipe(\\n                switchMap((_, i) =>\\n                    i % 2\\n                        ? EMPTY\\n                        : service.open(`Simple sheet`, {overlay: true}).pipe(first()),\\n                ),\\n                retry(),\\n                takeUntil(destroy$),\\n            )\\n            .subscribe();\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-slider-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiSliderExample1 {\\n    testValue = new FormControl();\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-stepper-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiStepperExample1 {}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiSvgService} from '@taiga-ui/core';\\nimport {tuiIconMaestro, tuiIconMastercard, tuiIconTimeLarge} from '@taiga-ui/icons';\\nimport {timer} from 'rxjs';\\nimport {mapTo} from 'rxjs/operators';\\n\\nimport {default as imageUrl} from '!!file-loader!../../../../../assets/images/ts.svg';\\n\\n@Component({\\n    selector: `tui-svg-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiSvgExample1 {\\n    readonly timeout$ = timer(0).pipe(mapTo(true));\\n\\n    readonly imageUrl = `${imageUrl}#ts`;\\n\\n    readonly tuiIconTimeLarge = tuiIconTimeLarge;\\n\\n    constructor(@Inject(TuiSvgService) svgService: TuiSvgService) {\\n        svgService.define({\\n            customTuiIconMaestro: tuiIconMaestro,\\n            customTuiIconMastercard: tuiIconMastercard,\\n        });\\n    }\\n}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_IS_ANDROID, TUI_IS_IOS} from '@taiga-ui/cdk';\\nimport {TuiAlertService} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-tabs-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n    providers: [\\n        {\\n            provide: TUI_IS_IOS,\\n            useValue: false,\\n        },\\n        {\\n            provide: TUI_IS_ANDROID,\\n            useValue: true,\\n        },\\n    ],\\n})\\nexport class TuiTabsExample1 {\\n    readonly items = [\\n        {\\n            text: `Maps`,\\n            icon: `tuiIconCard`,\\n        },\\n        {\\n            text: `Calls`,\\n            icon: `tuiIconCall`,\\n        },\\n        {\\n            text: `Settings`,\\n            icon: `tuiIconSettings`,\\n        },\\n    ];\\n\\n    activeItemIndex = 0;\\n\\n    constructor(@Inject(TuiAlertService) private readonly alerts: TuiAlertService) {}\\n\\n    onClick(item: string): void {\\n        this.alerts.open(item).subscribe();\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-tag-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTagExample1 {\\n    tag = `Hello`;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-text-area-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTextAreaExample1 {\\n    testForm = new FormGroup({\\n        testValue1: new FormControl(`A field`, Validators.required),\\n        testValue2: new FormControl(`This one can be expanded`, Validators.required),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-toggle-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiToggleExample1 {\\n    testForm = new FormGroup({\\n        testValue1: new FormControl(true),\\n        testValue2: new FormControl(false),\\n        testValue3: new FormControl(true),\\n        testValue4: new FormControl(false),\\n        testValue5: new FormControl(true),\\n        testValue6: new FormControl(false),\\n        testValue7: new FormControl(true),\\n        testValue8: new FormControl(false),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-toolbar-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiToolbarExample1 {\\n    open = false;\\n\\n    model = `<p>Lorem ipsum</p><p><b>Lorem ipsum</b></p>`;\\n\\n    onActiveZone(active: boolean): void {\\n        this.open = active;\\n    }\\n}\\n\";","export default \"import {ChangeDetectorRef, Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiDestroyService, watch} from '@taiga-ui/cdk';\\nimport {interval} from 'rxjs';\\nimport {takeUntil} from 'rxjs/operators';\\n\\n@Component({\\n    selector: `tui-tooltip-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    providers: [TuiDestroyService],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTooltipExample1 {\\n    loader = true;\\n\\n    text = ``;\\n\\n    constructor(\\n        @Inject(TuiDestroyService) destroy$: TuiDestroyService,\\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\\n    ) {\\n        interval(2000)\\n            .pipe(watch(changeDetectorRef), takeUntil(destroy$))\\n            .subscribe(() => {\\n                this.loader = !this.loader;\\n                this.text = this.text ? `` : `Error 502: Bad Gateway`;\\n            });\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-tree-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTreeExample1 {}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {TuiAlertService, TuiNotification} from '@taiga-ui/core';\\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\\nimport {switchMap} from 'rxjs/operators';\\n\\nimport {PromptService} from './prompt/prompt.service';\\n\\n@Component({\\n    selector: `tui-dialogs-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n})\\nexport class TuiDialogsExample1 {\\n    constructor(\\n        @Inject(TuiAlertService)\\n        private readonly alertService: TuiAlertService,\\n        @Inject(PromptService) private readonly promptService: PromptService,\\n    ) {}\\n\\n    onClick(\\n        choose: PolymorpheusContent<any>,\\n        poorly: PolymorpheusContent<any>,\\n        wisely: PolymorpheusContent<any>,\\n    ): void {\\n        this.promptService\\n            .open(choose, {\\n                heading: `Taiga UI is the best`,\\n                buttons: [`Absolutely!`, `No way!`],\\n            })\\n            .pipe(\\n                switchMap(response =>\\n                    response\\n                        ? this.alertService.open(wisely, {\\n                              status: TuiNotification.Success,\\n                          })\\n                        : this.alertService.open(poorly, {\\n                              status: TuiNotification.Error,\\n                          }),\\n                ),\\n            )\\n            .subscribe();\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {TUI_ICONS_PATH} from '@taiga-ui/core';\\n\\nconst MAPPER: Record<string, string> = {\\n    tuiIconCalendarLarge: `date_range-24px`,\\n    tuiIconTooltipLarge: `help-24px`,\\n    tuiIconInfo: `info-16px`,\\n    tuiIconCloseLarge: `clear-24px`,\\n    tuiIconChevronLeftLarge: `keyboard_arrow_left-24px`,\\n    tuiIconChevronRightLarge: `keyboard_arrow_right-24px`,\\n    // and so on\\n};\\n\\n// This assumes that icons were properly processed\\nexport function iconsPath(name: string): string {\\n    return `assets/icons/${MAPPER[name]}.svg#${MAPPER[name]}`;\\n}\\n\\n@Component({\\n    selector: `tui-icon-set-example-1`,\\n    templateUrl: `./index.html`,\\n    providers: [\\n        {\\n            provide: TUI_ICONS_PATH,\\n            useValue: iconsPath,\\n        },\\n    ],\\n})\\nexport class TuiIconSetExample1 {\\n    date = null;\\n}\\n\";","export default \"import {Component, EmbeddedViewRef, Inject, TemplateRef} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\n\\nimport {CustomPortalService} from './portal/custom-portal.service';\\n\\n@Component({\\n    selector: `tui-portals-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n})\\nexport class TuiPortalsExample1 {\\n    templates: Array<EmbeddedViewRef<unknown>> = [];\\n\\n    constructor(\\n        @Inject(CustomPortalService)\\n        private readonly customPortalService: CustomPortalService,\\n    ) {}\\n\\n    addTemplate(template: TemplateRef<unknown>): void {\\n        this.templates.push(this.customPortalService.addTemplate(template));\\n    }\\n\\n    removeTemplate(): void {\\n        const viewRef = this.templates.pop();\\n\\n        if (viewRef) {\\n            this.customPortalService.removeTemplate(viewRef);\\n        }\\n    }\\n}\\n\";","export default \"import {Component, ViewEncapsulation} from '@angular/core';\\nimport {TUI_TEXTFIELD_APPEARANCE, tuiCheckboxOptionsProvider} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-wrapper-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    encapsulation: ViewEncapsulation.None,\\n    providers: [\\n        {\\n            provide: TUI_TEXTFIELD_APPEARANCE,\\n            useValue: `material-textfield`,\\n        },\\n        tuiCheckboxOptionsProvider({\\n            appearances: {\\n                unchecked: `material-checkbox-off`,\\n                checked: `material-checkbox-on`,\\n                indeterminate: `material-checkbox-on`,\\n            },\\n        }),\\n    ],\\n})\\nexport class TuiWrapperExample1 {\\n    value = ``;\\n    checkbox = false;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {setNativeFocused} from '@taiga-ui/cdk';\\nimport {TuiInputComponent} from '@taiga-ui/kit';\\n\\n@Component({\\n    selector: `tui-active-zone-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiActiveZoneExample1 {\\n    childActive = false;\\n\\n    parentActive = false;\\n\\n    items = [1, 2, 3];\\n\\n    onParentActiveZone(active: boolean): void {\\n        this.parentActive = active;\\n    }\\n\\n    onChildActiveZone(active: boolean): void {\\n        this.childActive = active;\\n    }\\n\\n    onClick({nativeFocusableElement}: TuiInputComponent): void {\\n        if (nativeFocusableElement) {\\n            setNativeFocused(nativeFocusableElement);\\n        }\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-auto-focus-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiAutoFocusExample1 {\\n    showInput = false;\\n    model = `Focused after its appearance`;\\n\\n    onClick(): void {\\n        this.showInput = true;\\n    }\\n}\\n\";","export default \"import {Component, HostListener, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiStringHandler} from '@taiga-ui/cdk';\\nimport {\\n    TUI_NUMBER_FORMAT,\\n    TuiAlertService,\\n    TuiNumberFormatSettings,\\n} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-copy-processor-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiCopyProcessorExample1 {\\n    value = 12345.67;\\n\\n    constructor(\\n        @Inject(TUI_NUMBER_FORMAT) private readonly format: TuiNumberFormatSettings,\\n        @Inject(TuiAlertService)\\n        private readonly alertService: TuiAlertService,\\n    ) {}\\n\\n    @HostListener(`copy`, [`$event`])\\n    onCopy(event: ClipboardEvent): void {\\n        this.alertService\\n            .open(event.clipboardData?.getData(`text/plain`) ?? ``)\\n            .subscribe();\\n    }\\n\\n    readonly numberProcessor: TuiStringHandler<string> = text =>\\n        text\\n            .replace(this.format.decimalSeparator, `.`)\\n            .replace(new RegExp(this.format.thousandSeparator, `g`), ``);\\n\\n    readonly textProcessor: TuiStringHandler<string> = text => text.toUpperCase();\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-described-by-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiDescribedByExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-dropdown-context-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiDropdownContextExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-dropdown-controller-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiDropdownControllerExample1 {\\n    open = false;\\n\\n    onClick(): void {\\n        this.open = !this.open;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-dropdown-selection-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiDropdownSelectionExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-dropdown-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiDropdownExample1 {\\n    open = false;\\n\\n    onClick(): void {\\n        this.open = !this.open;\\n    }\\n\\n    onObscured(obscured: boolean): void {\\n        if (obscured) {\\n            this.open = false;\\n        }\\n    }\\n\\n    onActiveZone(active: boolean): void {\\n        this.open = active && this.open;\\n    }\\n}\\n\";","export default \"import {AfterViewInit, Component, ViewChild} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiElasticStickyDirective} from '@taiga-ui/addon-mobile';\\nimport {clamp} from '@taiga-ui/cdk';\\nimport {Observable} from 'rxjs';\\nimport {distinctUntilChanged, map, startWith} from 'rxjs/operators';\\n\\n@Component({\\n    selector: `tui-elastic-sticky-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiElasticStickyExample1 implements AfterViewInit {\\n    @ViewChild(TuiElasticStickyDirective)\\n    readonly elasticSticky?: TuiElasticStickyDirective;\\n\\n    scale$?: Observable<number>;\\n\\n    ngAfterViewInit(): void {\\n        if (!this.elasticSticky) {\\n            return;\\n        }\\n\\n        // If we use it like that instead of (tuiElasticSticky)=\\\"onElasticSticky($event)\\\"\\n        // we will not trigger unnecessary change detection when scale is less than 0.5\\n        this.scale$ = this.elasticSticky.tuiElasticSticky.pipe(\\n            map(scale => clamp(scale, 0.5, 1)),\\n            startWith(1),\\n            distinctUntilChanged(),\\n        );\\n    }\\n}\\n\";","export default \"import {Component, ElementRef} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiButtonComponent} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-element-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiElementExample1 {\\n    isButton(component: unknown): boolean {\\n        return component instanceof TuiButtonComponent;\\n    }\\n\\n    isElement(element: unknown): boolean {\\n        return element instanceof ElementRef;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {BehaviorSubject} from 'rxjs';\\n\\n@Component({\\n    selector: `tui-for-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiForExample1 {\\n    readonly items$ = new BehaviorSubject<readonly string[] | null>([]);\\n\\n    refresh(): void {\\n        this.items$.next(null);\\n\\n        const delay = Math.round(Math.random() * 2000);\\n\\n        setTimeout(() => {\\n            this.items$.next(\\n                delay % 2\\n                    ? []\\n                    : [`William \\\"Bill\\\" S. Preston Esq.`, `Ted \\\"Theodore\\\" Logan`],\\n            );\\n        }, delay);\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-highlight-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiHighlightExample1 {\\n    search = ``;\\n\\n    readonly rows = [\\n        [`King Arthur`, `-`, `Arrested`],\\n        [`Sir Bedevere`, `The Wise`, `Arrested`],\\n        [`Sir Lancelot`, `The Brave`, `Arrested`],\\n        [`Sir Galahad`, `The Chaste`, `Killed`],\\n        [`Sir Robin`, `The Not-Quite-So-Brave-As-Sir-Lancelot`, `Killed`],\\n    ];\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-hint-controller-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiHintControllerExample1 {\\n    text = `Do What the #@*% You Want to`;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-hint-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiHintExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-lazy-loading-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiLazyLoadingExample1 {\\n    readonly array = Array.from(\\n        {length: 100},\\n        (_, i) => `https://picsum.photos/${250 + i}/200`,\\n    );\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {interval} from 'rxjs';\\nimport {startWith} from 'rxjs/operators';\\n\\n@Component({\\n    selector: `tui-let-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiLetExample1 {\\n    timer$ = interval(1000).pipe(startWith(0));\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\n\\n@Component({\\n    selector: `tui-manual-hint-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n})\\nexport class TuiManualHintExample1 {\\n    hintShown = false;\\n\\n    toggleHint(): void {\\n        this.hintShown = !this.hintShown;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-media-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiMediaExample1 {\\n    currentTime = 0;\\n    volume = 1;\\n    paused = true;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-mode-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiModeExample1 {\\n    toggle = false;\\n\\n    text = ``;\\n\\n    money = 237;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-overscroll-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiOverscrollExample1 {}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {DomSanitizer} from '@angular/platform-browser';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {BehaviorSubject} from 'rxjs';\\nimport {map} from 'rxjs/operators';\\n\\n@Component({\\n    selector: `tui-pan-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiPanExample1 {\\n    readonly coordinates$ = new BehaviorSubject([0, 0]);\\n\\n    readonly transform$ = this.coordinates$.pipe(\\n        map(coords =>\\n            this.sanitizer.bypassSecurityTrustStyle(\\n                `translate(${coords[0]}px, ${coords[1]}px)`,\\n            ),\\n        ),\\n    );\\n\\n    constructor(@Inject(DomSanitizer) private readonly sanitizer: DomSanitizer) {}\\n\\n    onPan(delta: readonly [number, number]): void {\\n        this.coordinates$.next([\\n            this.currentCoords[0] + delta[0],\\n            this.currentCoords[1] + delta[1],\\n        ]);\\n    }\\n\\n    get currentCoords(): number[] {\\n        return this.coordinates$.value;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\n\\n@Component({\\n    selector: `tui-pointer-hint-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n})\\nexport class TuiPointerHintExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-portal-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiPortalExample1 {\\n    show = false;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-present-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiPresentExample1 {\\n    counterCSS = 0;\\n\\n    counterIf = 0;\\n\\n    hovered = false;\\n\\n    onHovered(hovered: boolean): void {\\n        this.hovered = hovered;\\n    }\\n\\n    onCSS(visible: boolean): void {\\n        this.counterCSS += visible ? 1 : -1;\\n    }\\n\\n    onIf(visible: boolean): void {\\n        this.counterIf += visible ? 1 : -1;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-ripple-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiRippleExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-sidebar-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiSidebarExample1 {\\n    open = false;\\n\\n    readonly webApis = [`Common`, `Audio`, `Canvas`, `Geolocation`, `MIDI`, `Workers`];\\n\\n    readonly tinkoff = [\\n        `Taiga-UI`,\\n        `ng-event-plugins`,\\n        `ng-polymorpheus`,\\n        `ng-dompurify`,\\n    ];\\n\\n    toggle(open: boolean): void {\\n        this.open = open;\\n    }\\n}\\n\";","export default \"import {Component, HostBinding} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiSwipe} from '@taiga-ui/cdk/interfaces/swipe';\\n\\n@Component({\\n    selector: `tui-swipe-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiSwipeExample1 {\\n    @HostBinding(`class`)\\n    swiped = `default`;\\n\\n    onSwipe(swipe: TuiSwipe): void {\\n        this.swiped = swipe.direction;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-textfield-controller-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTextfieldControllerExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-touchable-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTouchableExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-validator-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiValidatorExample1 {\\n    readonly items = [`Email`, `Phone`];\\n\\n    type = this.items[0];\\n\\n    readonly group = new FormGroup({\\n        name: new FormControl(``, Validators.required),\\n        contact: new FormControl(``, Validators.required),\\n    });\\n\\n    readonly validator = Validators.email;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {clamp, TuiZoom} from '@taiga-ui/cdk';\\nimport {Subject} from 'rxjs';\\nimport {map, scan, startWith} from 'rxjs/operators';\\n\\n@Component({\\n    selector: `tui-zoom-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiZoomExample1 {\\n    readonly delta$ = new Subject<number>();\\n\\n    readonly scale$ = this.delta$.pipe(\\n        scan((scale, next) => clamp(scale + next, 0.5, 3), 1),\\n        startWith(1),\\n    );\\n\\n    readonly transform$ = this.scale$.pipe(map(scale => `scale(${scale})`));\\n\\n    onZoom({delta}: TuiZoom): void {\\n        this.delta$.next(delta);\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `example-css-breakpoints-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class ExampleBreakpointsComponent1 {\\n    breakpoints = [\\n        `mobile-m`,\\n        `mobile-m-min`,\\n        `mobile-m-interval`,\\n        `tablet-lg`,\\n        `tablet-lg-min`,\\n        `tablet-lg-interval`,\\n        `desktop-s`,\\n        `desktop-s-min`,\\n        `desktop-s-interval`,\\n        `desktop-m-min`,\\n    ] as const;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-skeleton-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiSkeletonExample1 {\\n    testForm = new FormGroup({\\n        testValue: new FormControl(true),\\n    });\\n\\n    skeletonVisible = false;\\n    lightMode = false;\\n    placeholder = `Some paragraph with information`;\\n\\n    showSkeleton(): void {\\n        this.skeletonVisible = !this.skeletonVisible;\\n    }\\n\\n    toggleLight(): void {\\n        this.lightMode = !this.lightMode;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-spaces-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.style.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiSpacingExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-tables-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTablesExample1 {\\n    testValue = new FormControl(true);\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\nconst latinChars = /^[a-zA-Z]+$/;\\n\\nexport function passwordValidator(field: AbstractControl): Validators | null {\\n    return field.value && latinChars.test(field.value)\\n        ? null\\n        : {\\n              other: `Only latin letters are allowed`,\\n          };\\n}\\n\\nexport function superComputerValidator(field: AbstractControl): Validators | null {\\n    return field.value === `42`\\n        ? null\\n        : {\\n              other: `Wrong`,\\n          };\\n}\\n\\n@Component({\\n    selector: `tui-field-error-pipe-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiFieldErrorPipeExample1 {\\n    readonly testValue1 = new FormControl(``, [Validators.required, passwordValidator]);\\n\\n    readonly testValue3 = new FormControl(``, [Validators.required, passwordValidator]);\\n\\n    readonly testForm = new FormGroup({\\n        testValue1: this.testValue1,\\n        testValue2: new FormControl(``, [Validators.required, superComputerValidator]),\\n    });\\n\\n    constructor() {\\n        this.testValue1.valueChanges.subscribe(() => {\\n            this.testValue1.markAsTouched();\\n        });\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-filter-by-input-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiFilterByInputExample1 {\\n    readonly items = [\\n        `John Cleese`,\\n        `Eric Idle`,\\n        `Graham Chapman`,\\n        `Michael Palin`,\\n        `Terry Gilliam`,\\n        `Terry Jones`,\\n    ];\\n\\n    readonly form = new FormGroup({\\n        user: new FormControl(),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiFormatDateService} from '@taiga-ui/core';\\n\\nimport {FormatService} from './service';\\n\\n@Component({\\n    selector: `tui-format-date-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n    providers: [\\n        {\\n            provide: TuiFormatDateService,\\n            useClass: FormatService,\\n        },\\n    ],\\n})\\nexport class TuiFormatDateExample1 {\\n    readonly now = Date.now();\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-format-number-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiFormatNumberExample1 {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-format-phone-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiFormatPhoneExample1 {\\n    phone = `+78005557778`;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\ninterface User {\\n    readonly name: string;\\n    readonly surname: string;\\n}\\n\\n@Component({\\n    selector: `tui-stringify-content-example1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiStringifyContentExample1 {\\n    value = null;\\n\\n    readonly items = [\\n        {\\n            name: `John`,\\n            surname: `Cleese`,\\n        },\\n        {\\n            name: `Eric`,\\n            surname: `Idle`,\\n        },\\n    ];\\n\\n    readonly stringify = ({name, surname}: User): string => `${name} ${surname}`;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-stringify-example1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiStringifyExample1 {\\n    value = null;\\n\\n    readonly items = [\\n        {\\n            name: `John Cleese`,\\n            role: `Black Knight`,\\n        },\\n        {\\n            name: `Eric Idle`,\\n            role: `Dead collector`,\\n        },\\n    ] as const;\\n}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiAlertService} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-alerts-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiAlertsExampleComponent1 {\\n    constructor(\\n        @Inject(TuiAlertService)\\n        private readonly alertService: TuiAlertService,\\n    ) {}\\n\\n    showNotification(): void {\\n        this.alertService.open(`A simple option`, {label: `With a heading!`}).subscribe();\\n    }\\n}\\n\";","export default \"import {Component, ElementRef, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiScrollService} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-scroll-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiScrollExample1 {\\n    scrollTop = 0;\\n    scrollLeft = 0;\\n    duration = 300;\\n\\n    constructor(\\n        @Inject(TuiScrollService) private readonly scrollService: TuiScrollService,\\n    ) {}\\n\\n    onClick({nativeElement}: ElementRef<HTMLElement>): void {\\n        this.scrollService\\n            .scroll$(nativeElement, this.scrollTop, this.scrollLeft, this.duration)\\n            .subscribe();\\n    }\\n}\\n\";","export default \"import {Component, Inject, ViewChild} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiTableBarsService} from '@taiga-ui/addon-tablebars';\\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\\nimport {Subscription} from 'rxjs';\\n\\n@Component({\\n    selector: `tui-table-bar-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTableBarExampleComponent1 {\\n    @ViewChild(`tableBarTemplate`)\\n    tableBarTemplate: PolymorpheusContent = ``;\\n\\n    subscription = new Subscription();\\n\\n    constructor(\\n        @Inject(TuiTableBarsService)\\n        private readonly tableBarsService: TuiTableBarsService,\\n    ) {}\\n\\n    showTableBar(): void {\\n        this.subscription.unsubscribe();\\n\\n        this.subscription = this.tableBarsService\\n            .open(this.tableBarTemplate || ``, {\\n                hasCloseButton: true,\\n                adaptive: true,\\n            })\\n            .subscribe();\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-reorder-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiReorderExample1 {\\n    items: readonly string[] = [\\n        `John Cleese`,\\n        `Eric Idle`,\\n        `Michael Palin`,\\n        `Terry Gilliam`,\\n        `Terry Jones`,\\n        `Graham Chapman`,\\n    ];\\n\\n    enabled = this.items;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-resizable-column-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiResizableColumnExample1 {\\n    readonly rows = [\\n        [`King Arthur`, `-`, `Arrested`],\\n        [`Sir Bedevere`, `The Wise`, `Arrested`],\\n        [`Sir Lancelot`, `The Brave`, `Arrested`],\\n        [`Sir Galahad`, `The Chaste`, `Killed`],\\n        [`Sir Robin`, `The Not-Quite-So-Brave-As-Sir-Lancelot`, `Killed`],\\n    ];\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-table-filters-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTableFiltersExample1 {\\n    readonly form = new FormGroup({\\n        balance: new FormControl(0),\\n    });\\n\\n    readonly data = [\\n        {name: `Alex Inkin`, balance: 1323525},\\n        {name: `Roman Sedov`, balance: 523242},\\n        {name: `Vladimir Potekhin`, balance: 645465},\\n        {name: `Nikita Barsukov`, balance: 468468},\\n        {name: `Maxim Ivanov`, balance: 498654},\\n    ] as const;\\n\\n    readonly columns = Object.keys(this.data[0]);\\n\\n    readonly filter = (item: number, value: number): boolean => item >= value;\\n\\n    onToggle(enabled: boolean): void {\\n        if (enabled) {\\n            this.form.enable();\\n        } else {\\n            this.form.disable();\\n        }\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-table-pagination-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTablePaginationExample1 {\\n    page = 3;\\n    size = 10;\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-table-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTableExample1 {\\n    readonly data = [\\n        {\\n            name: `Alex Inkin`,\\n            balance: 1323525,\\n        },\\n        {\\n            name: `Roman Sedov`,\\n            balance: 423242,\\n        },\\n    ] as const;\\n\\n    readonly columns = Object.keys(this.data[0]);\\n}\\n\";","export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {USER_AGENT} from '@ng-web-apis/common';\\nimport {isEdge, isEdgeOlderThan, isFirefox, isIE} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-browser-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiBrowserExample1 {\\n    constructor(@Inject(USER_AGENT) private readonly userAgent: string) {}\\n\\n    get aboutMyBrowser(): string {\\n        if (isEdge(this.userAgent)) {\\n            if (isEdgeOlderThan(13, this.userAgent)) {\\n                return `Edge older than 13`;\\n            }\\n\\n            return `Edge until 13`;\\n        }\\n\\n        if (isIE(this.userAgent)) {\\n            return `Unfortunately, you have IE11`;\\n        }\\n\\n        if (isFirefox(this.userAgent)) {\\n            return `Okay, you have Firefox!`;\\n        }\\n\\n        return `You have Chromium based browser, cool!`;\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {px} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-format-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiFormatExample1 {\\n    parametersForm = new FormGroup({\\n        value: new FormControl(11),\\n    });\\n\\n    get px(): string {\\n        const {value} = this.parametersForm.value;\\n\\n        return px(value);\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {ceil, floor, round} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-math-example-1`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiMathExample1 {\\n    parametersForm = new FormGroup({\\n        value: new FormControl(1.005),\\n        precision: new FormControl(2),\\n    });\\n\\n    get rounded(): number {\\n        const {value, precision} = this.parametersForm.value;\\n\\n        return round(value, precision);\\n    }\\n\\n    get floored(): number {\\n        const {value, precision} = this.parametersForm.value;\\n\\n        return floor(value, precision);\\n    }\\n\\n    get ceiled(): number {\\n        const {value, precision} = this.parametersForm.value;\\n\\n        return ceil(value, precision);\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {tuiAssert} from '@taiga-ui/cdk';\\n\\n@Component({\\n    selector: `tui-miscellaneous-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiMiscellaneousExample1 {\\n    get assertResult(): string {\\n        const dayOfWeek = new Date().getDay();\\n        const isFriday = dayOfWeek === 5;\\n\\n        tuiAssert.assert(isFriday, `Today is not a friday`);\\n\\n        return isFriday\\n            ? `Nothing in console`\\n            : `There is a console assert: 'Today is not a friday'`;\\n    }\\n}\\n\";","export default \"import {Component, Inject, Renderer2} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TUI_DEFAULT_RENDERER} from '@taiga-ui/cdk/tokens';\\n\\n@Component({\\n    selector: `tui-token-example-1`,\\n    templateUrl: `./index.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiTokensExample1 {\\n    style = this.renderer.createElement(`style`);\\n\\n    constructor(@Inject(TUI_DEFAULT_RENDERER) private readonly renderer: Renderer2) {}\\n}\\n\";"],"sourceRoot":"webpack:///"}