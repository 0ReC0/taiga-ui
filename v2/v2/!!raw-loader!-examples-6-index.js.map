{"version":3,"sources":["webpack:///./src/modules/components/slider/examples/6/index.ts?c8bf"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,wEAAS,wBAAwB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,SAAS,sBAAsB,UAAU,2BAA2B,aAAa,UAAU,uCAAuC,uBAAuB,gBAAgB,wJAAwJ,mCAAmC,gBAAgB,cAAc,gBAAgB,sDAAsD,0KAA0K,wIAAwI,kCAAkC,OAAO,oCAAoC,uEAAuE,OAAO,GAAG,GAAG,E","file":"!!raw-loader!-examples-6-index.js","sourcesContent":["export default \"import {Component, HostListener} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {tuiClamp} from '@taiga-ui/cdk';\\nimport {BehaviorSubject, of, timer} from 'rxjs';\\nimport {distinctUntilChanged, mapTo, switchMap} from 'rxjs/operators';\\n\\n@Component({\\n    selector: `tui-slider-example-6`,\\n    templateUrl: `./index.html`,\\n    styleUrls: [`./index.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiSliderExample6 {\\n    min = 0.5;\\n    max = 2;\\n    value = 1;\\n\\n    readonly active$ = new BehaviorSubject(false);\\n    readonly showHint$ = this.active$.pipe(\\n        distinctUntilChanged(),\\n        switchMap(active => (active ? of(true) : timer(1000).pipe(mapTo(false)))),\\n    );\\n\\n    @HostListener(`pointerdown`, [`true`])\\n    @HostListener(`document:pointerup`, [`false`])\\n    onKeydown(show: boolean): void {\\n        this.active$.next(show);\\n    }\\n\\n    change(step: number): void {\\n        this.value = tuiClamp(this.value + step, this.min, this.max);\\n    }\\n}\\n\";"],"sourceRoot":"webpack:///"}