{"version":3,"sources":["./src/modules/pipes/field-error/examples/1/index.ts","./src/modules/pipes/field-error/examples/1/index.html","./src/modules/pipes/field-error/examples/2/index.ts","./src/modules/pipes/field-error/examples/2/index.html","./src/modules/pipes/field-error/examples/3/index.ts","./src/modules/pipes/field-error/examples/3/index.html","./src/modules/pipes/field-error/examples/4/index.ts","./src/modules/pipes/field-error/examples/4/index.html","./src/modules/pipes/field-error/examples/5/index.ts","./src/modules/pipes/field-error/examples/5/index.html","./src/modules/pipes/field-error/examples/6/index.ts","./src/modules/pipes/field-error/examples/6/index.html","./src/modules/pipes/field-error/field-error.component.ts","./src/modules/pipes/field-error/field-error.template.html","./src/modules/pipes/field-error/field-error.module.ts"],"names":[],"mappings":"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","file":"pipes-field-error-field-error-module.js","sourcesContent":["import {Component} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\nconst latinChars = /^[a-zA-Z]+$/;\n\nexport function passwordValidator(field: AbstractControl): Validators | null {\n    return field.value && latinChars.test(field.value)\n        ? null\n        : {\n              other: `Only latin letters are allowed`,\n          };\n}\n\nexport function superComputerValidator(field: AbstractControl): Validators | null {\n    return field.value === `42`\n        ? null\n        : {\n              other: `Wrong`,\n          };\n}\n\n@Component({\n    selector: `tui-field-error-pipe-example-1`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiFieldErrorPipeExample1 {\n    readonly testValue1 = new FormControl(``, [Validators.required, passwordValidator]);\n\n    readonly testValue3 = new FormControl(``, [Validators.required, passwordValidator]);\n\n    readonly testForm = new FormGroup({\n        testValue1: this.testValue1,\n        testValue2: new FormControl(``, [Validators.required, superComputerValidator]),\n    });\n\n    constructor() {\n        this.testValue1.valueChanges.subscribe(() => {\n            this.testValue1.markAsTouched();\n        });\n    }\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <label\n        i18n-label\n        tuiLabel\n        label=\"Type the ultimate answer\"\n        class=\"tui-space_bottom-4\"\n    >\n        <tui-input\n            formControlName=\"testValue2\"\n            tuiTextfieldSize=\"m\"\n            [tuiTextfieldLabelOutside]=\"true\"\n        >\n            to the Question of Life, the Universe, and Everything\n        </tui-input>\n\n        <tui-error\n            formControlName=\"testValue2\"\n            [error]=\"[] | tuiFieldError | async\"\n        ></tui-error>\n    </label>\n\n    <label\n        tuiLabel\n        i18n-label\n        label=\"Set a password\"\n    >\n        <tui-input\n            formControlName=\"testValue1\"\n            tuiTextfieldSize=\"m\"\n            [tuiTextfieldLabelOutside]=\"true\"\n        >\n            Latin letters only\n        </tui-input>\n\n        <tui-error\n            formControlName=\"testValue1\"\n            [error]=\"[] | tuiFieldError | async\"\n        ></tui-error>\n    </label>\n\n    <p i18n>\n        If you need to show validation message as early as a user started to type something, subscribe on form value\n        changes and call markAsTouched on control on first value change\n    </p>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TUI_VALIDATION_ERRORS} from '@taiga-ui/kit';\nimport {interval} from 'rxjs';\nimport {map, scan, startWith} from 'rxjs/operators';\n\nexport function maxLengthValidator(context: {requiredLength: string}): string {\n    return `Maximum length — ${context.requiredLength}`;\n}\n\nexport function minLengthValidator(context: {requiredLength: string}): string {\n    return `Minimum length — ${context.requiredLength}`;\n}\n\n@Component({\n    selector: `tui-field-error-pipe-example-2`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n    providers: [\n        {\n            provide: TUI_VALIDATION_ERRORS,\n            useValue: {\n                required: `Enter this!`,\n                email: `Enter a valid email`,\n                maxlength: maxLengthValidator,\n                minlength: minLengthValidator,\n                min: interval(2000).pipe(\n                    scan(acc => !acc, false),\n                    map(val => (val ? `Fix please` : `Min number 3`)),\n                    startWith(`Min number 3`),\n                ),\n            },\n        },\n    ],\n})\nexport class TuiFieldErrorPipeExample2 {\n    readonly testValue1 = new FormControl(``, [\n        Validators.minLength(4),\n        Validators.maxLength(4),\n    ]);\n\n    readonly testValue2 = new FormControl(``, [Validators.required, Validators.email]);\n\n    readonly testValue3 = new FormControl(2, [Validators.min(3)]);\n\n    readonly testForm = new FormGroup({\n        testValue1: this.testValue1,\n        testValue2: this.testValue2,\n        testValue3: this.testValue3,\n    });\n\n    constructor() {\n        this.testValue1.valueChanges.subscribe(() => {\n            this.testValue1.markAsTouched();\n        });\n    }\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <label\n        tuiLabel\n        label=\"Enter an email\"\n        class=\"tui-space_bottom-4\"\n    >\n        <tui-input\n            i18n\n            formControlName=\"testValue2\"\n            tuiTextfieldSize=\"m\"\n            [tuiTextfieldLabelOutside]=\"true\"\n        >\n            Required\n        </tui-input>\n\n        <tui-error\n            formControlName=\"testValue2\"\n            [error]=\"[] | tuiFieldError | async\"\n        ></tui-error>\n    </label>\n\n    <label\n        tuiLabel\n        label=\"Minimum and maximum length\"\n        class=\"tui-space_bottom-4\"\n    >\n        <tui-input\n            formControlName=\"testValue1\"\n            tuiTextfieldSize=\"m\"\n        >\n            4 letters word...\n        </tui-input>\n\n        <tui-error\n            formControlName=\"testValue1\"\n            [error]=\"[] | tuiFieldError | async\"\n        ></tui-error>\n    </label>\n\n    <label\n        tuiLabel\n        label=\"Minimum number\"\n    >\n        <tui-input-count\n            formControlName=\"testValue3\"\n            tuiTextfieldSize=\"m\"\n        >\n            number\n        </tui-input-count>\n\n        <tui-error\n            formControlName=\"testValue3\"\n            [error]=\"[] | tuiFieldError | async\"\n        ></tui-error>\n    </label>\n</form>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    ValidationErrors,\n    Validators,\n} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiValidationError} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nconst secretRegexTen = /^\\d{10}$/;\nconst secretRegexTwelve = /^\\d{12}$/;\n\nexport function innValidator(field: AbstractControl): unknown {\n    return field.value &&\n        (secretRegexTen.test(field.value) || secretRegexTwelve.test(field.value))\n        ? null\n        : {\n              inn: new TuiValidationError(`Secret number contains 10 or 12 digits`),\n          };\n}\n\n@Component({\n    selector: `tui-field-error-pipe-example-3`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiFieldErrorPipeExample3 implements OnInit {\n    @ViewChild(`errorContent`)\n    errorContent: PolymorpheusContent = ``;\n\n    @ViewChild(`bigErrorContent`)\n    bigErrorContent: PolymorpheusContent = ``;\n\n    readonly testValue2 = new FormControl(``);\n\n    readonly testForm = new FormGroup({\n        testValue1: new FormControl(``, [Validators.required, this.getSecretValidator()]),\n        testValue2: this.testValue2,\n    });\n\n    ngOnInit(): void {\n        this.testValue2.setValidators([Validators.required, this.companyValidator]);\n    }\n\n    private readonly companyValidator = (\n        field: AbstractControl,\n    ): ValidationErrors | null =>\n        field.value\n            ? {\n                  inn: new TuiValidationError(this.bigErrorContent),\n              }\n            : null;\n\n    private getSecretValidator(): (field: AbstractControl) => ValidationErrors | null {\n        return (field: AbstractControl): ValidationErrors | null =>\n            field.value &&\n            (secretRegexTen.test(field.value) || secretRegexTwelve.test(field.value))\n                ? null\n                : {\n                      secret: new TuiValidationError(this.errorContent),\n                  };\n    }\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <label\n        tuiLabel\n        label=\"Secret number\"\n    >\n        <tui-input\n            formControlName=\"testValue1\"\n            tuiTextfieldSize=\"m\"\n            [tuiTextfieldLabelOutside]=\"true\"\n        ></tui-input>\n\n        <ng-template #errorContent>\n            Secret number must contain\n            <strong>10 or 12 digits</strong>\n            .\n        </ng-template>\n\n        <tui-error\n            formControlName=\"testValue1\"\n            [error]=\"['required', 'inn'] | tuiFieldError | async\"\n        ></tui-error>\n    </label>\n\n    <label\n        tuiLabel\n        i18n-label\n        label=\"Enter company name\"\n        class=\"tui-space_top-4\"\n    >\n        <tui-input\n            formControlName=\"testValue2\"\n            tuiTextfieldSize=\"m\"\n            [tuiTextfieldLabelOutside]=\"true\"\n        ></tui-input>\n\n        <ng-template #bigErrorContent>\n            This company is already registered\n            <button\n                tuiButton\n                type=\"button\"\n                class=\"tui-space_top-2\"\n            >\n                It is mine\n            </button>\n        </ng-template>\n\n        <tui-error\n            formControlName=\"testValue2\"\n            [error]=\"[] | tuiFieldError | async\"\n        ></tui-error>\n    </label>\n</form>\n","import {Component, ViewChild} from '@angular/core';\nimport {\n    AbstractControl,\n    FormArray,\n    FormControl,\n    FormGroup,\n    ValidationErrors,\n    ValidatorFn,\n    Validators,\n} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiValidationError} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\n@Component({\n    selector: `tui-field-error-pipe-example-4`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiFieldErrorPipeExample4 {\n    @ViewChild(`phoneErrorContent`)\n    phoneErrorContent: PolymorpheusContent = ``;\n\n    testForm = new FormGroup({\n        phones: new FormArray(\n            [new FormControl(``, [Validators.required, this.getPhoneLengthValidator()])],\n            [this.getPhoneArrayValidator()],\n        ),\n    });\n\n    get formData(): FormArray {\n        return <FormArray>this.testForm.get(`phones`);\n    }\n\n    addPhone(): void {\n        this.formData.push(new FormControl(``, this.addValidators()));\n    }\n\n    removePhone(index: number): void {\n        this.formData.removeAt(index);\n\n        let n = 0;\n\n        while (n <= 1 && this.formData.controls[n]) {\n            this.formData.controls[n].setValidators([\n                Validators.required,\n                this.getPhoneLengthValidator(),\n            ]);\n            n++;\n        }\n    }\n\n    addValidators(): ValidationErrors | null {\n        return this.formData.controls.length < 2\n            ? [Validators.required, this.getPhoneLengthValidator()]\n            : null;\n    }\n\n    private getPhoneLengthValidator(): (\n        field: AbstractControl,\n    ) => ValidationErrors | null {\n        return (field: AbstractControl): ValidationErrors | null =>\n            field.value.length !== 12\n                ? {\n                      length: new TuiValidationError(this.phoneErrorContent),\n                  }\n                : null;\n    }\n\n    private getPhoneArrayValidator(): ValidatorFn {\n        return ((array: FormArray): ValidationErrors | null =>\n            array.controls.length < 2 ||\n            (!!array.controls.filter(item => item.errors).length && array.controls.length)\n                ? {\n                      length: new TuiValidationError(\n                          `You should add at least 2 phone number`,\n                      ),\n                  }\n                : null) as ValidatorFn;\n    }\n}\n","<form [formGroup]=\"testForm\">\n    <label\n        *ngFor=\"let phone of formData.controls; let i = index\"\n        tuiLabel\n        label=\"Phone number {{ i + 1 }}\"\n        formArrayName=\"phones\"\n        class=\"tui-space_bottom-4\"\n    >\n        <span class=\"row\">\n            <tui-input-phone\n                formControlName=\"{{ i }}\"\n                tuiTextfieldAutocomplete=\"off\"\n                tuiTextfieldSize=\"m\"\n                class=\"input\"\n                [tuiTextfieldLabelOutside]=\"true\"\n            ></tui-input-phone>\n            <button\n                tuiIconButton\n                type=\"button\"\n                size=\"m\"\n                title=\"Delete phone number\"\n                appearance=\"icon\"\n                icon=\"tuiIconTrash\"\n                class=\"tui-space_left-2 icon\"\n                (click)=\"removePhone(i)\"\n            ></button>\n        </span>\n        <ng-template #phoneErrorContent>Invalid phone number length</ng-template>\n        <tui-error\n            formControlName=\"{{ i }}\"\n            [error]=\"[] | tuiFieldError | async\"\n        ></tui-error>\n    </label>\n\n    <tui-error\n        formArrayName=\"phones\"\n        class=\"form-array-error\"\n        [error]=\"[] | tuiFieldError | async\"\n    ></tui-error>\n\n    <button\n        tuiButton\n        type=\"button\"\n        size=\"s\"\n        class=\"tui-space_top-4\"\n        (click)=\"addPhone()\"\n    >\n        Add a phone number\n    </button>\n</form>\n","import {Component, Inject} from '@angular/core';\nimport {\n    AbstractControl,\n    AsyncValidatorFn,\n    FormBuilder,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TUI_IS_CYPRESS, TuiValidationError} from '@taiga-ui/cdk';\nimport {of} from 'rxjs';\nimport {delay} from 'rxjs/operators';\n\nconst latinChars = /^[a-zA-Z]+$/;\n\nfunction asyncValidatorFn(isCypress: boolean): AsyncValidatorFn {\n    return (field: AbstractControl) => {\n        return field.value && latinChars.test(field.value)\n            ? of(null)\n            : of({\n                  error: new TuiValidationError(`Only latin letters allowed`),\n              }).pipe(isCypress ? delay(0) : delay(5000));\n    };\n}\n\n@Component({\n    selector: `tui-field-error-pipe-example-5`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiFieldErrorPipeExample5 {\n    readonly form: FormGroup;\n\n    constructor(\n        @Inject(FormBuilder) private readonly fb: FormBuilder,\n        @Inject(TUI_IS_CYPRESS) isCypress: boolean,\n    ) {\n        this.form = this.fb.group({\n            text: [`русский текст`, Validators.required],\n        });\n\n        this.form.controls[`text`].setAsyncValidators(asyncValidatorFn(isCypress));\n        this.form.controls[`text`].markAsTouched();\n    }\n}\n","<form [formGroup]=\"form\">\n    <div class=\"tui-form__row\">\n        <tui-input\n            formControlName=\"text\"\n            class=\"input\"\n        >\n            Enter some text\n        </tui-input>\n\n        <tui-error\n            formControlName=\"text\"\n            [error]=\"[] | tuiFieldError | async\"\n        ></tui-error>\n    </div>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TUI_VALIDATION_ERRORS} from '@taiga-ui/kit';\n\n@Component({\n    selector: `tui-field-error-content-pipe-example-6`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n    providers: [\n        {\n            provide: TUI_VALIDATION_ERRORS,\n            useValue: {\n                required: `Enter this!`,\n                max: (context: {max: number}): string =>\n                    `Too expensive, max ${context.max}`,\n            },\n        },\n    ],\n})\nexport class TuiFieldErrorContentPipeExample6 {\n    readonly data = [{name: `Latte`}, {name: `Cappuccino`}] as const;\n\n    latteControl = new FormControl(null, [Validators.required, Validators.max(6)]);\n    cappuccinoControl = new FormControl(null, [Validators.required, Validators.max(5)]);\n    controls = [this.latteControl, this.cappuccinoControl];\n\n    readonly columns = [`name`, `price`];\n}\n","<table\n    tuiTable\n    class=\"table\"\n    [columns]=\"columns\"\n>\n    <thead>\n        <tr tuiThGroup>\n            <th\n                tuiTh\n                [resizable]=\"true\"\n            >\n                Name\n            </th>\n            <th tuiTh>Price</th>\n        </tr>\n    </thead>\n    <tbody\n        tuiTbody\n        [data]=\"data\"\n    >\n        <tr\n            *tuiRow=\"let item of data; let i = index\"\n            tuiTr\n        >\n            <td\n                *tuiCell=\"'name'\"\n                tuiTd\n            >\n                {{ item.name }}\n            </td>\n            <td\n                *tuiCell=\"'price'\"\n                tuiTd\n            >\n                <tui-input-number\n                    tuiHintDirection=\"right\"\n                    [postfix]=\"'UGX' | tuiCurrency\"\n                    [formControl]=\"controls[i]\"\n                    [tuiHint]=\"[] | tuiFieldErrorContent\"\n                >\n                    Price\n                </tui-input-number>\n            </td>\n        </tr>\n    </tbody>\n</table>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\n\n@Component({\n    selector: `example-field-error-pipe`,\n    templateUrl: `./field-error.template.html`,\n    changeDetection,\n})\nexport class ExampleTuiFieldErrorPipeComponent {\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n    };\n\n    readonly example2: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/2/index.ts`),\n        HTML: import(`!!raw-loader!./examples/2/index.html`),\n    };\n\n    readonly example3: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/3/index.ts`),\n        HTML: import(`!!raw-loader!./examples/3/index.html`),\n    };\n\n    readonly example4: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/4/index.ts`),\n        HTML: import(`!!raw-loader!./examples/4/index.html`),\n        LESS: import(`!!raw-loader!./examples/4/index.less`),\n    };\n\n    readonly example5: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/5/index.ts`),\n        HTML: import(`!!raw-loader!./examples/5/index.html`),\n        LESS: import(`!!raw-loader!./examples/5/index.less`),\n    };\n\n    readonly example6: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/6/index.ts`),\n        HTML: import(`!!raw-loader!./examples/6/index.html`),\n        LESS: import(`!!raw-loader!./examples/6/index.less`),\n    };\n}\n","<tui-doc-page\n    header=\"FieldError\"\n    package=\"KIT\"\n    type=\"pipes\"\n>\n    <ng-template\n        i18n\n        pageTab\n    >\n        <p>\n            FieldErrorPipe takes order of errors as array and transform it to\n            <code>TuiValidationError</code>\n            . Can be used with\n            <code>TuiError</code>\n        </p>\n        <p>\n            You can also use\n            <code>tuiFieldErrorContentPipe</code>\n            with\n            <code>TuiHint</code>\n            (see\n            <a\n                tuiLink\n                routerLink=\".\"\n                fragment=\"content\"\n            >\n                tuiFieldErrorContentPipe example\n            </a>\n            ). It returns a content of the TuiValidationError.\n        </p>\n\n        <tui-doc-example\n            id=\"base\"\n            i18n-heading\n            heading=\"Basic\"\n            [content]=\"example1\"\n        >\n            <tui-field-error-pipe-example-1></tui-field-error-pipe-example-1>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"customMessages\"\n            i18n-heading\n            heading=\"With custom messages for validators\"\n            [content]=\"example2\"\n        >\n            <tui-field-error-pipe-example-2></tui-field-error-pipe-example-2>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"patterns\"\n            i18n-heading\n            heading=\"with a template\"\n            [content]=\"example3\"\n        >\n            <tui-field-error-pipe-example-3></tui-field-error-pipe-example-3>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"formArray\"\n            i18n-heading\n            heading=\"With adding new controls (FormArray)\"\n            [content]=\"example4\"\n        >\n            <tui-field-error-pipe-example-4></tui-field-error-pipe-example-4>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"async\"\n            i18n-heading\n            heading=\"async validator\"\n            [content]=\"example5\"\n        >\n            <tui-field-error-pipe-example-5></tui-field-error-pipe-example-5>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"content\"\n            i18n-heading\n            heading=\"tuiFieldErrorContentPipe\"\n            [content]=\"example6\"\n        >\n            <tui-field-error-content-pipe-example-6></tui-field-error-content-pipe-example-6>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab=\"Setup\">\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Import\n                    <code>TuiFieldErrorPipeModule</code>\n                    into a module where you want to use our component\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Use pipe in template:</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {TuiCurrencyPipeModule} from '@taiga-ui/addon-commerce';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {TuiTableModule} from '@taiga-ui/addon-table';\nimport {\n    TuiButtonModule,\n    TuiErrorModule,\n    TuiHintModule,\n    TuiLabelModule,\n    TuiLinkModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {\n    TuiInputCountModule,\n    TuiInputModule,\n    TuiInputNumberModule,\n    TuiInputPhoneModule,\n} from '@taiga-ui/kit';\nimport {TuiFieldErrorPipeModule} from '@taiga-ui/kit/pipes/field-error';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiFieldErrorPipeExample1} from './examples/1';\nimport {TuiFieldErrorPipeExample2} from './examples/2';\nimport {TuiFieldErrorPipeExample3} from './examples/3';\nimport {TuiFieldErrorPipeExample4} from './examples/4';\nimport {TuiFieldErrorPipeExample5} from './examples/5';\nimport {TuiFieldErrorContentPipeExample6} from './examples/6';\nimport {ExampleTuiFieldErrorPipeComponent} from './field-error.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        TuiAddonDocModule,\n        TuiTextfieldControllerModule,\n        TuiErrorModule,\n        TuiFieldErrorPipeModule,\n        TuiLabelModule,\n        TuiHintModule,\n        TuiInputModule,\n        TuiButtonModule,\n        TuiInputPhoneModule,\n        TuiInputCountModule,\n        TuiLinkModule,\n        TuiTableModule,\n        TuiHintModule,\n        TuiInputNumberModule,\n        TuiCurrencyPipeModule,\n        PolymorpheusModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiFieldErrorPipeComponent)),\n    ],\n    declarations: [\n        ExampleTuiFieldErrorPipeComponent,\n        TuiFieldErrorPipeExample1,\n        TuiFieldErrorPipeExample2,\n        TuiFieldErrorPipeExample3,\n        TuiFieldErrorPipeExample4,\n        TuiFieldErrorPipeExample5,\n        TuiFieldErrorContentPipeExample6,\n    ],\n    exports: [ExampleTuiFieldErrorPipeComponent],\n})\nexport class ExampleTuiFieldErrorModule {}\n"],"sourceRoot":"webpack:///"}