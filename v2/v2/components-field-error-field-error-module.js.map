{"version":3,"sources":["./src/modules/components/field-error/examples/1/index.ts","./src/modules/components/field-error/examples/1/index.html","./src/modules/components/field-error/examples/2/index.ts","./src/modules/components/field-error/examples/2/index.html","./src/modules/components/field-error/examples/3/index.ts","./src/modules/components/field-error/examples/3/index.html","./src/modules/components/field-error/examples/4/index.ts","./src/modules/components/field-error/examples/4/index.html","./src/modules/components/field-error/examples/5/index.ts","./src/modules/components/field-error/examples/5/index.html","./src/modules/components/field-error/field-error.component.ts","./src/modules/components/field-error/field-error.template.html","./src/modules/components/field-error/field-error.module.ts"],"names":[],"mappings":"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","file":"components-field-error-field-error-module.js","sourcesContent":["import {Component} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\nconst latinChars = /^[a-zA-Z]+$/;\n\nexport function passwordValidator(field: AbstractControl): Validators | null {\n    return field.value && latinChars.test(field.value)\n        ? null\n        : {\n              other: `Only latin letters are allowed`,\n          };\n}\n\nexport function superComputerValidator(field: AbstractControl): Validators | null {\n    return field.value === `42`\n        ? null\n        : {\n              other: `Wrong`,\n          };\n}\n\n@Component({\n    selector: `tui-field-error-example-1`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiFieldErrorExample1 {\n    readonly testValue1 = new FormControl(``, [Validators.required, passwordValidator]);\n\n    readonly testForm = new FormGroup({\n        testValue1: this.testValue1,\n        testValue2: new FormControl(``, [Validators.required, superComputerValidator]),\n    });\n\n    constructor() {\n        this.testValue1.valueChanges.subscribe(() => {\n            this.testValue1.markAsTouched();\n        });\n    }\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <label\n        i18n-label\n        tuiLabel\n        label=\"Type the ultimate answer\"\n        class=\"tui-space_bottom-4\"\n    >\n        <tui-input\n            formControlName=\"testValue2\"\n            tuiTextfieldSize=\"m\"\n            [tuiTextfieldLabelOutside]=\"true\"\n        >\n            to the Question of Life, the Universe, and Everything\n        </tui-input>\n\n        <tui-field-error formControlName=\"testValue2\"></tui-field-error>\n    </label>\n\n    <label\n        tuiLabel\n        i18n-label\n        label=\"Set a password\"\n    >\n        <tui-input\n            formControlName=\"testValue1\"\n            tuiTextfieldSize=\"m\"\n            [tuiTextfieldLabelOutside]=\"true\"\n        >\n            Latin letters only\n        </tui-input>\n\n        <tui-field-error formControlName=\"testValue1\"></tui-field-error>\n    </label>\n\n    <p i18n>\n        If you need to show validation message as early as a user started to type something, subscribe on form value\n        changes and call markAsTouched on control on first value change\n    </p>\n</form>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    ValidationErrors,\n    Validators,\n} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiValidationError} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nconst secretRegexTen = /^\\d{10}$/;\nconst secretRegexTwelve = /^\\d{12}$/;\n\nexport function innValidator(field: AbstractControl): unknown {\n    return field.value &&\n        (secretRegexTen.test(field.value) || secretRegexTwelve.test(field.value))\n        ? null\n        : {\n              inn: new TuiValidationError(`Secret number contains 10 or 12 digits`),\n          };\n}\n\n@Component({\n    selector: `tui-field-error-example-2`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiFieldErrorExample2 implements OnInit {\n    @ViewChild(`errorContent`)\n    errorContent: PolymorpheusContent = ``;\n\n    @ViewChild(`bigErrorContent`)\n    bigErrorContent: PolymorpheusContent = ``;\n\n    readonly testValue2 = new FormControl(``);\n\n    readonly testForm = new FormGroup({\n        testValue1: new FormControl(``, [Validators.required, this.getSecretValidator()]),\n        testValue2: this.testValue2,\n    });\n\n    ngOnInit(): void {\n        this.testValue2.setValidators([Validators.required, this.companyValidator]);\n    }\n\n    private readonly companyValidator = (\n        field: AbstractControl,\n    ): ValidationErrors | null =>\n        field.value\n            ? {\n                  inn: new TuiValidationError(this.bigErrorContent),\n              }\n            : null;\n\n    private getSecretValidator(): (field: AbstractControl) => ValidationErrors | null {\n        return (field: AbstractControl): ValidationErrors | null =>\n            field.value &&\n            (secretRegexTen.test(field.value) || secretRegexTwelve.test(field.value))\n                ? null\n                : {\n                      secret: new TuiValidationError(this.errorContent),\n                  };\n    }\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <label\n        tuiLabel\n        label=\"Secret number\"\n    >\n        <tui-input\n            formControlName=\"testValue1\"\n            tuiTextfieldSize=\"m\"\n            [tuiTextfieldLabelOutside]=\"true\"\n        ></tui-input>\n\n        <ng-template #errorContent>\n            Secret number must contain\n            <strong>10 or 12 digits</strong>\n            .\n        </ng-template>\n\n        <tui-field-error\n            formControlName=\"testValue1\"\n            [order]=\"['required', 'inn']\"\n        ></tui-field-error>\n    </label>\n\n    <label\n        tuiLabel\n        i18n-label\n        label=\"Enter company name\"\n        class=\"tui-space_top-4\"\n    >\n        <tui-input\n            formControlName=\"testValue2\"\n            tuiTextfieldSize=\"m\"\n            [tuiTextfieldLabelOutside]=\"true\"\n        ></tui-input>\n\n        <ng-template #bigErrorContent>\n            This company is already registered\n            <button\n                tuiButton\n                type=\"button\"\n                class=\"tui-space_top-2\"\n            >\n                It is mine\n            </button>\n        </ng-template>\n\n        <tui-field-error formControlName=\"testValue2\"></tui-field-error>\n    </label>\n</form>\n","import {Component, ViewChild} from '@angular/core';\nimport {\n    AbstractControl,\n    FormArray,\n    FormControl,\n    FormGroup,\n    ValidationErrors,\n    ValidatorFn,\n    Validators,\n} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiValidationError} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\n@Component({\n    selector: `tui-field-error-example-3`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiFieldErrorExample3 {\n    @ViewChild(`phoneErrorContent`)\n    phoneErrorContent: PolymorpheusContent = ``;\n\n    testForm = new FormGroup({\n        phones: new FormArray(\n            [new FormControl(``, [Validators.required, this.getPhoneLengthValidator()])],\n            [this.getPhoneArrayValidator()],\n        ),\n    });\n\n    get formData(): FormArray {\n        return <FormArray>this.testForm.get(`phones`);\n    }\n\n    addPhone(): void {\n        this.formData.push(new FormControl(``, this.addValidators()));\n    }\n\n    removePhone(index: number): void {\n        this.formData.removeAt(index);\n\n        let n = 0;\n\n        while (n <= 1 && this.formData.controls[n]) {\n            this.formData.controls[n].setValidators([\n                Validators.required,\n                this.getPhoneLengthValidator(),\n            ]);\n            n++;\n        }\n    }\n\n    addValidators(): ValidationErrors | null {\n        return this.formData.controls.length < 2\n            ? [Validators.required, this.getPhoneLengthValidator()]\n            : null;\n    }\n\n    private getPhoneLengthValidator(): (\n        field: AbstractControl,\n    ) => ValidationErrors | null {\n        return (field: AbstractControl): ValidationErrors | null =>\n            field.value.length !== 12\n                ? {\n                      lenght: new TuiValidationError(this.phoneErrorContent),\n                  }\n                : null;\n    }\n\n    private getPhoneArrayValidator(): ValidatorFn {\n        return ((array: FormArray): ValidationErrors | null =>\n            array.controls.length < 2 ||\n            (!!array.controls.filter(item => item.errors).length && array.controls.length)\n                ? {\n                      length: new TuiValidationError(\n                          `You should add at least 2 phone number`,\n                      ),\n                  }\n                : null) as ValidatorFn;\n    }\n}\n","<form [formGroup]=\"testForm\">\n    <label\n        *ngFor=\"let phone of formData.controls; let i = index\"\n        tuiLabel\n        label=\"Phone number {{ i + 1 }}\"\n        formArrayName=\"phones\"\n        class=\"tui-space_bottom-4\"\n    >\n        <span class=\"row\">\n            <tui-input-phone\n                formControlName=\"{{ i }}\"\n                tuiTextfieldAutocomplete=\"off\"\n                tuiTextfieldSize=\"m\"\n                class=\"input\"\n                [tuiTextfieldLabelOutside]=\"true\"\n            ></tui-input-phone>\n            <button\n                tuiIconButton\n                type=\"button\"\n                size=\"m\"\n                title=\"Delete phone number\"\n                appearance=\"icon\"\n                icon=\"tuiIconTrash\"\n                class=\"tui-space_left-2 icon\"\n                (click)=\"removePhone(i)\"\n            ></button>\n        </span>\n        <ng-template #phoneErrorContent>Invalid phone number length</ng-template>\n        <tui-field-error formControlName=\"{{ i }}\"></tui-field-error>\n    </label>\n\n    <tui-field-error\n        formArrayName=\"phones\"\n        class=\"form-array-error\"\n    ></tui-field-error>\n\n    <button\n        tuiButton\n        type=\"button\"\n        size=\"s\"\n        class=\"tui-space_top-4\"\n        (click)=\"addPhone()\"\n    >\n        Add a phone number\n    </button>\n</form>\n","import {ChangeDetectorRef, Component, Inject} from '@angular/core';\nimport {\n    AbstractControl,\n    AsyncValidatorFn,\n    FormBuilder,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TUI_IS_CYPRESS, TuiValidationError} from '@taiga-ui/cdk';\nimport {of} from 'rxjs';\nimport {delay, finalize} from 'rxjs/operators';\n\nconst latinChars = /^[a-zA-Z]+$/;\n\nfunction asyncValidatorFn(isCypress: boolean, cd: ChangeDetectorRef): AsyncValidatorFn {\n    return (field: AbstractControl) => {\n        return field.value && latinChars.test(field.value)\n            ? of(null)\n            : of({\n                  error: new TuiValidationError(`Only latin letters allowed`),\n              }).pipe(\n                  isCypress ? delay(0) : delay(5000),\n                  finalize(() => cd.markForCheck()),\n              );\n    };\n}\n\n@Component({\n    selector: `tui-field-error-example-4`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiFieldErrorExample4 {\n    readonly form: FormGroup;\n\n    constructor(\n        @Inject(FormBuilder) private readonly fb: FormBuilder,\n        @Inject(TUI_IS_CYPRESS) isCypress: boolean,\n        @Inject(ChangeDetectorRef) cd: ChangeDetectorRef,\n    ) {\n        this.form = this.fb.group({\n            text: [`русский текст`, Validators.required],\n        });\n\n        this.form.controls[`text`].setAsyncValidators(asyncValidatorFn(isCypress, cd));\n        this.form.controls[`text`].markAsTouched();\n    }\n}\n","<form [formGroup]=\"form\">\n    <div class=\"tui-form__row\">\n        <tui-input\n            formControlName=\"text\"\n            class=\"input\"\n        >\n            Enter some text\n        </tui-input>\n        <tui-field-error formControlName=\"text\"></tui-field-error>\n    </div>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TUI_VALIDATION_ERRORS} from '@taiga-ui/kit';\nimport {interval} from 'rxjs';\nimport {map, scan, startWith} from 'rxjs/operators';\n\nexport function maxLengthValidator(context: {requiredLength: string}): string {\n    return `Maximum length — ${context.requiredLength}`;\n}\n\nexport function minLengthValidator(context: {requiredLength: string}): string {\n    return `Minimum length — ${context.requiredLength}`;\n}\n\n@Component({\n    selector: `tui-field-error-example-5`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n    providers: [\n        {\n            provide: TUI_VALIDATION_ERRORS,\n            useValue: {\n                required: `Enter this!`,\n                email: `Enter a valid email`,\n                maxlength: maxLengthValidator,\n                minlength: minLengthValidator,\n                min: interval(2000).pipe(\n                    scan(acc => !acc, false),\n                    map(val => (val ? `Fix please` : `Min number 3`)),\n                    startWith(`Min number 3`),\n                ),\n            },\n        },\n    ],\n})\nexport class TuiFieldErrorExample5 {\n    readonly testValue1 = new FormControl(``, [\n        Validators.minLength(4),\n        Validators.maxLength(4),\n    ]);\n\n    readonly testValue2 = new FormControl(``, [Validators.required, Validators.email]);\n\n    readonly testValue3 = new FormControl(2, [Validators.min(3)]);\n\n    readonly testForm = new FormGroup({\n        testValue1: this.testValue1,\n        testValue2: this.testValue2,\n        testValue3: this.testValue3,\n    });\n\n    constructor() {\n        this.testValue1.valueChanges.subscribe(() => {\n            this.testValue1.markAsTouched();\n        });\n    }\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <label\n        tuiLabel\n        label=\"Enter an email\"\n        class=\"tui-space_bottom-4\"\n    >\n        <tui-input\n            i18n\n            formControlName=\"testValue2\"\n            tuiTextfieldSize=\"m\"\n            [tuiTextfieldLabelOutside]=\"true\"\n        >\n            Required\n        </tui-input>\n\n        <tui-field-error formControlName=\"testValue2\"></tui-field-error>\n    </label>\n\n    <label\n        tuiLabel\n        label=\"Minimum and maximum length\"\n        class=\"tui-space_bottom-4\"\n    >\n        <tui-input\n            formControlName=\"testValue1\"\n            tuiTextfieldSize=\"m\"\n        >\n            4 letters word...\n        </tui-input>\n\n        <tui-field-error formControlName=\"testValue1\"></tui-field-error>\n    </label>\n\n    <label\n        tuiLabel\n        label=\"Minimum number\"\n    >\n        <tui-input-count\n            formControlName=\"testValue3\"\n            tuiTextfieldSize=\"m\"\n        >\n            number\n        </tui-input-count>\n\n        <tui-field-error formControlName=\"testValue3\"></tui-field-error>\n    </label>\n</form>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\n\n@Component({\n    selector: `example-tui-field-error`,\n    templateUrl: `./field-error.template.html`,\n    changeDetection,\n})\nexport class ExampleTuiFieldErrorComponent {\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n    };\n\n    readonly example2: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/2/index.ts`),\n        HTML: import(`!!raw-loader!./examples/2/index.html`),\n    };\n\n    readonly example3: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/3/index.less`),\n        HTML: import(`!!raw-loader!./examples/3/index.html`),\n        LESS: import(`!!raw-loader!./examples/3/index.less`),\n    };\n\n    readonly example4: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/4/index.ts`),\n        HTML: import(`!!raw-loader!./examples/4/index.html`),\n        LESS: import(`!!raw-loader!./examples/4/index.less`),\n    };\n\n    readonly example5: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/5/index.ts`),\n        HTML: import(`!!raw-loader!./examples/5/index.html`),\n    };\n}\n","<tui-doc-page\n    header=\"FieldError\"\n    package=\"KIT\"\n    type=\"components\"\n    deprecated\n>\n    <ng-template pageTab>\n        <p i18n>\n            <code>FieldError</code>\n            shows a validation error of a field. If you do not use forms, see\n            <a\n                tuiLink\n                [routerLink]=\"['/components/error']\"\n            >\n                <code>TuiError</code>\n            </a>\n            .\n        </p>\n        <tui-notification status=\"error\">\n            <strong>Deprecated.</strong>\n            Use\n            <code>tuiFieldError</code>\n            pipe from\n            <a\n                tuiLink\n                routerLink=\"/pipes/field-error\"\n            >\n                TuiFieldErrorPipeModule\n            </a>\n        </tui-notification>\n\n        <tui-doc-example\n            id=\"base\"\n            i18n-heading\n            heading=\"Basic\"\n            [content]=\"example1\"\n        >\n            <tui-field-error-example-1></tui-field-error-example-1>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"patterns\"\n            i18n-heading\n            heading=\"with a template\"\n            [content]=\"example2\"\n        >\n            <tui-field-error-example-2></tui-field-error-example-2>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"formArray\"\n            i18n-heading\n            heading=\"With adding new controls (FormArray)\"\n            [content]=\"example3\"\n        >\n            <tui-field-error-example-3></tui-field-error-example-3>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"async\"\n            i18n-heading\n            heading=\"async validator\"\n            [content]=\"example4\"\n        >\n            <tui-field-error-example-4></tui-field-error-example-4>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"customMessages\"\n            i18n-heading\n            heading=\"With custom messages for validators\"\n            [content]=\"example5\"\n        >\n            <tui-field-error-example-5></tui-field-error-example-5>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template\n        i18n-pageTab\n        pageTab=\"Setup\"\n    >\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Import\n                    <code>TuiFieldErrorModule</code>\n                    into a module where you want to use our component\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Add to the template:</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {\n    TuiButtonModule,\n    TuiLabelModule,\n    TuiLinkModule,\n    TuiNotificationModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {\n    TuiFieldErrorModule,\n    TuiInputCountModule,\n    TuiInputModule,\n    TuiInputPhoneModule,\n} from '@taiga-ui/kit';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiFieldErrorExample1} from './examples/1';\nimport {TuiFieldErrorExample2} from './examples/2';\nimport {TuiFieldErrorExample3} from './examples/3';\nimport {TuiFieldErrorExample4} from './examples/4';\nimport {TuiFieldErrorExample5} from './examples/5';\nimport {ExampleTuiFieldErrorComponent} from './field-error.component';\n\n@NgModule({\n    imports: [\n        TuiInputModule,\n        ReactiveFormsModule,\n        CommonModule,\n        TuiFieldErrorModule,\n        TuiLabelModule,\n        TuiInputPhoneModule,\n        TuiInputCountModule,\n        TuiLinkModule,\n        TuiAddonDocModule,\n        PolymorpheusModule,\n        TuiButtonModule,\n        TuiNotificationModule,\n        TuiTextfieldControllerModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiFieldErrorComponent)),\n    ],\n    declarations: [\n        ExampleTuiFieldErrorComponent,\n        TuiFieldErrorExample1,\n        TuiFieldErrorExample2,\n        TuiFieldErrorExample3,\n        TuiFieldErrorExample4,\n        TuiFieldErrorExample5,\n    ],\n    exports: [ExampleTuiFieldErrorComponent],\n})\nexport class ExampleTuiFieldErrorModule {}\n"],"sourceRoot":"webpack:///"}