{"version":3,"sources":["webpack:///./src/modules/components/input-inline/examples/2/component.ts?de93","webpack:///./src/modules/components/scrollbar/examples/2/component.ts?9388","webpack:///./src/modules/pipes/currency/examples/2/component.ts?d433","webpack:///./src/modules/pipes/mapper/examples/2/component.ts?d5b6"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,wEAAS,kBAAkB,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,UAAU,gBAAgB,uBAAuB,gBAAgB,iKAAiK,wCAAwC,+BAA+B,sBAAsB,yHAAyH,wBAAwB,uCAAuC,OAAO,iDAAiD,yBAAyB,mCAAmC,6CAA6C,WAAW,OAAO,uDAAuD,8CAA8C,qBAAqB,cAAc,OAAO,GAAG,GAAG,E;;;;;;;;;;;;ACA5/B;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,8JAA8J,gDAAgD,GAAG,E;;;;;;;;;;;;ACAtZ;AAAe,wEAAS,UAAU,sBAAsB,UAAU,uBAAuB,uBAAuB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,0HAA0H,qCAAqC,yCAAyC,iDAAiD,EAAE,GAAG,GAAG,E;;;;;;;;;;;;ACA9f;AAAe,wEAAS,UAAU,sBAAsB,UAAU,gBAAgB,uCAAuC,UAAU,cAAc,oCAAoC,gBAAgB,wHAAwH,mCAAmC,kDAAkD,4IAA4I,GAAG,GAAG,E","file":"!!raw-loader!-examples-2-component-ts.js","sourcesContent":["export default \"import {Component, Inject} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\nimport {TuiAlertService} from '@taiga-ui/core';\\n\\n@Component({\\n    selector: `tui-input-inline-example-2`,\\n    templateUrl: `./template.html`,\\n    changeDetection,\\n    encapsulation,\\n    styleUrls: [`./style.less`],\\n})\\nexport class TuiInputInlineExample2 {\\n    heading = `Page heading`;\\n    editing = false;\\n\\n    constructor(\\n        @Inject(TuiAlertService)\\n        private readonly alertService: TuiAlertService,\\n    ) {}\\n\\n    toggle(): void {\\n        this.editing = !this.editing;\\n    }\\n\\n    onFocusedChange(focused: boolean): void {\\n        if (!focused) {\\n            this.editing = false;\\n            this.saveHeading(this.heading);\\n        }\\n    }\\n\\n    private saveHeading(newHeading: string): void {\\n        this.alertService.open(newHeading, {label: `New heading`}).subscribe();\\n    }\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-scrollbar-example-2`,\\n    templateUrl: `./template.html`,\\n    styleUrls: [`./style.less`],\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiScrollbarExample2Component {}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {FormControl, FormGroup} from '@angular/forms';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-currency-example2`,\\n    templateUrl: `./template.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiCurrencyExample2 {\\n    readonly testForm = new FormGroup({\\n        testValue: new FormControl(100),\\n    });\\n}\\n\";","export default \"import {Component} from '@angular/core';\\nimport {changeDetection} from '@demo/emulate/change-detection';\\nimport {encapsulation} from '@demo/emulate/encapsulation';\\n\\n@Component({\\n    selector: `tui-mapper-example2`,\\n    templateUrl: `./template.html`,\\n    changeDetection,\\n    encapsulation,\\n})\\nexport class TuiMapperExample2 {\\n    readonly numbers = [1, 2, 3, 4, 5] as const;\\n\\n    readonly mapper = (numbers: readonly number[], multiplier: number): number[] =>\\n        numbers.map(number => number * multiplier);\\n}\\n\";"],"sourceRoot":"webpack:///"}