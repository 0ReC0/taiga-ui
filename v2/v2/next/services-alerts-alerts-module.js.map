{"version":3,"sources":["./src/modules/services/alerts/alerts.component.ts","./src/modules/services/alerts/alerts.template.html","./src/modules/services/alerts/alerts.module.ts","./src/modules/services/alerts/examples/1/index.ts","./src/modules/services/alerts/examples/1/index.html","./src/modules/services/alerts/examples/2/index.ts","./src/modules/services/alerts/examples/2/index.html","./src/modules/services/alerts/examples/3/alert-example/alert-example.component.ts","./src/modules/services/alerts/examples/3/alert-example/alert-example.template.html","./src/modules/services/alerts/examples/3/alert-example/alert-example.module.ts","./src/modules/services/alerts/examples/3/index.ts","./src/modules/services/alerts/examples/3/index.html","./src/modules/services/alerts/examples/4/alert-example-with-data/alert-example-with-data.component.ts","./src/modules/services/alerts/examples/4/alert-example-with-data/alert-example-with-data.template.html","./src/modules/services/alerts/examples/4/alert-example-with-data/alert-example-with-data.module.ts","./src/modules/services/alerts/examples/4/index.ts","./src/modules/services/alerts/examples/4/index.html","./src/modules/services/alerts/examples/5/alert-example-with-custom-label/alert-example-with-custom-label.component.ts","./src/modules/services/alerts/examples/5/alert-example-with-custom-label/alert-example-with-custom-label.template.html","./src/modules/services/alerts/examples/5/alert-example-with-custom-label/alert-example-with-custom-label.module.ts","./src/modules/services/alerts/examples/5/custom-label/custom-label.component.ts","./src/modules/services/alerts/examples/5/custom-label/custom-label.template.html","./src/modules/services/alerts/examples/5/custom-label/custom-label.module.ts","./src/modules/services/alerts/examples/5/index.ts","./src/modules/services/alerts/examples/5/index.html"],"names":[],"mappings":"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","file":"services-alerts-alerts-module.js","sourcesContent":["import {Component, Inject, Injector} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\nimport {TuiBaseDialogContext} from '@taiga-ui/cdk';\nimport {TuiAlertOptions, TuiAlertService, TuiNotification} from '@taiga-ui/core';\nimport {PolymorpheusComponent, PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {switchMap} from 'rxjs/operators';\n\nimport {AlertExampleWithDataComponent} from './examples/4/alert-example-with-data/alert-example-with-data.component';\n\n@Component({\n    selector: `example-tui-alerts`,\n    templateUrl: `./alerts.template.html`,\n    styleUrls: [`./alerts.style.less`],\n    changeDetection,\n})\nexport class ExampleTuiAlertsComponent {\n    readonly method = import(`!!raw-loader!./method.md`);\n\n    readonly exampleImportModuleComponent = import(\n        `!!raw-loader!./examples/import/import-module-component.md`\n    );\n\n    readonly exampleServiceUsage = import(\n        `!!raw-loader!./examples/import/service-usage.md`\n    );\n\n    readonly exampleServiceUsageComponent = import(\n        `!!raw-loader!./examples/import/service-usage-component.md`\n    );\n\n    readonly exampleCustomAlert = import(\n        `!!raw-loader!./examples/import/custom-alert.md`\n    );\n\n    readonly exampleLazyModule = import(`!!raw-loader!./examples/import/lazy-module.md`);\n    readonly exampleModule = import(`!!raw-loader!./examples/import/module.md`);\n    readonly exampleOptions = import(`!!raw-loader!./examples/import/define-options.md`);\n\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n    };\n\n    readonly example2: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/2/index.ts`),\n        HTML: import(`!!raw-loader!./examples/2/index.html`),\n    };\n\n    readonly example3: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/3/index.ts`),\n        HTML: import(`!!raw-loader!./examples/3/index.html`),\n        'alert-example/alert-example.component.ts': import(\n            `!!raw-loader!./examples/3/alert-example/alert-example.component.ts`\n        ),\n        'alert-example/alert-example.template.html': import(\n            `!!raw-loader!./examples/3/alert-example/alert-example.template.html`\n        ),\n        'alert-example/alert-example.module.ts': import(\n            `!!raw-loader!./examples/3/alert-example/alert-example.module.ts`\n        ),\n    };\n\n    readonly example4: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/4/index.ts`),\n        HTML: import(`!!raw-loader!./examples/4/index.html`),\n        'alert-example-with-data/alert-example-with-data.component.ts': import(\n            `!!raw-loader!./examples/4/alert-example-with-data/alert-example-with-data.component.ts`\n        ),\n        'alert-example-with-data/alert-example-with-data.template.html': import(\n            `!!raw-loader!./examples/4/alert-example-with-data/alert-example-with-data.template.html`\n        ),\n        'alert-example-with-data/alert-example-with-data.style.less': import(\n            `!!raw-loader!./examples/4/alert-example-with-data/alert-example-with-data.style.less`\n        ),\n        'alert-example-with-data/alert-example-with-data.module.ts': import(\n            `!!raw-loader!./examples/4/alert-example-with-data/alert-example-with-data.module`\n        ),\n    };\n\n    readonly example5: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/5/index.ts`),\n        HTML: import(`!!raw-loader!./examples/5/index.html`),\n        'custom-label/custom-label.module.ts': import(\n            `!!raw-loader!./examples/5/custom-label/custom-label.module.ts`\n        ),\n        'custom-label/custom-label.component.ts': import(\n            `!!raw-loader!./examples/5/custom-label/custom-label.component.ts`\n        ),\n        'custom-label/custom-label.style.less': import(\n            `!!raw-loader!./examples/5/custom-label/custom-label.style.less`\n        ),\n        'custom-label/custom-label.template.html': import(\n            `!!raw-loader!./examples/5/custom-label/custom-label.template.html`\n        ),\n        'alert-example-with-custom-label/alert-example-with-custom-label.module.ts':\n            import(\n                `!!raw-loader!./examples/5/alert-example-with-custom-label/alert-example-with-custom-label.module.ts`\n            ),\n        'alert-example-with-custom-label/alert-example-with-custom-label.component.ts':\n            import(\n                `!!raw-loader!./examples/5/alert-example-with-custom-label/alert-example-with-custom-label.component.ts`\n            ),\n        'alert-example-with-custom-label/alert-example-with-custom-label.template.html':\n            import(\n                `!!raw-loader!./examples/5/alert-example-with-custom-label/alert-example-with-custom-label.template.html`\n            ),\n    };\n\n    data = 100;\n\n    label = `Heading`;\n\n    readonly statusVariants: readonly TuiNotification[] = [\n        TuiNotification.Info,\n        TuiNotification.Success,\n        TuiNotification.Error,\n        TuiNotification.Warning,\n    ];\n\n    status = this.statusVariants[0];\n\n    readonly contentVariants = [`String`, `Component`];\n\n    content = this.contentVariants[0];\n\n    readonly autoCloseVariants = [true, false, 5000, 1000, 500];\n\n    autoClose = this.autoCloseVariants[0];\n\n    hasCloseButton = true;\n\n    hasIcon = true;\n\n    readonly component: PolymorpheusComponent<\n        AlertExampleWithDataComponent,\n        TuiBaseDialogContext<number> & TuiAlertOptions<number>\n    >;\n\n    constructor(\n        @Inject(TuiAlertService)\n        private readonly alertService: TuiAlertService,\n        @Inject(Injector) injector: Injector,\n    ) {\n        this.component = new PolymorpheusComponent(\n            AlertExampleWithDataComponent,\n            injector,\n        );\n    }\n\n    get selectedContent(): PolymorpheusContent<\n        TuiBaseDialogContext<number> & TuiAlertOptions<number>\n    > {\n        return this.content === `String` ? this.content : this.component;\n    }\n\n    showNotification(): void {\n        this.alertService\n            .open(this.selectedContent, {\n                label: this.label,\n                data: this.data,\n                status: this.status,\n                autoClose: this.autoClose,\n                hasCloseButton: this.hasCloseButton,\n                hasIcon: this.hasIcon,\n            })\n            .pipe(\n                switchMap(response =>\n                    this.alertService.open(response, {\n                        label: `Notification responded with:`,\n                    }),\n                ),\n            )\n            .subscribe();\n    }\n}\n","<tui-doc-page\n    header=\"AlertService\"\n    package=\"CORE\"\n    path=\"core/components/alert/alert.service.ts\"\n>\n    <ng-template pageTab>\n        <p i18n>Service to show notifications</p>\n        <p i18n>\n            Do not forget to add\n            <code>TuiAlertModule</code>\n            into your app.module to use it\n        </p>\n\n        <p i18n>\n            <strong>Singleton</strong>\n            you do not need to provide a service. It is just available to inject\n        </p>\n\n        <tui-doc-example\n            id=\"text\"\n            heading=\"Text\"\n            [content]=\"example1\"\n        >\n            <tui-alerts-example-1></tui-alerts-example-1>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"template\"\n            heading=\"Template\"\n            [content]=\"example2\"\n        >\n            <tui-alerts-example-2></tui-alerts-example-2>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"component\"\n            heading=\"Component\"\n            [content]=\"example3\"\n        >\n            <tui-alerts-example-3></tui-alerts-example-3>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"data\"\n            i18n-heading\n            heading=\"Component with data\"\n            [content]=\"example4\"\n        >\n            <tui-alerts-example-4></tui-alerts-example-4>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"label\"\n            i18n-heading\n            heading=\"Component with custom label\"\n            [content]=\"example5\"\n        >\n            <tui-alerts-example-5></tui-alerts-example-5>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        <button\n            tuiButton\n            type=\"button\"\n            size=\"m\"\n            (click)=\"showNotification()\"\n        >\n            Show\n        </button>\n        <div\n            i18n\n            class=\"b-full-width\"\n        >\n            <p>To show notification, use method</p>\n            <tui-doc-code\n                class=\"tui-space_bottom-4\"\n                [code]=\"method\"\n            ></tui-doc-code>\n            of\n            <code>TuiAlertService</code>\n            , where\n            <code>O</code>\n            is output data type and\n            <code>I</code>\n            is input data type. If content does not need input data, the second argument is optional. In the sample\n            above the both of them are\n            <code>number</code>\n            .\n            <p>\n                You can also just unsubscribe from a stream to hide a notification (this observable is returned from\n                <code>open</code>\n                method). You can save a subscription for that or use\n                <code>takeUntil</code>\n                like tools from\n                <code>RxJs</code>\n            </p>\n        </div>\n        <tui-doc-documentation>\n            <ng-template\n                i18n\n                documentationPropertyName=\"content\"\n                documentationPropertyType=\"PolymorpheusContent\"\n                [documentationPropertyValues]=\"contentVariants\"\n                [(documentationPropertyValue)]=\"content\"\n            >\n                Content\n            </ng-template>\n        </tui-doc-documentation>\n        <p i18n>\n            <code>TuiNotificationOptionsWithData</code>\n            interface:\n        </p>\n        <tui-doc-documentation>\n            <ng-template\n                i18n\n                documentationPropertyName=\"status\"\n                documentationPropertyType=\"TuiNotification\"\n                [documentationPropertyValues]=\"statusVariants\"\n                [(documentationPropertyValue)]=\"status\"\n            >\n                Status\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"label\"\n                documentationPropertyType=\"string\"\n                [(documentationPropertyValue)]=\"label\"\n            >\n                Heading\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"data\"\n                documentationPropertyType=\"number\"\n                [(documentationPropertyValue)]=\"data\"\n            >\n                Input data of notification, type &lt;I&gt;\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"autoClose\"\n                documentationPropertyType=\"boolean | number\"\n                [documentationPropertyValues]=\"autoCloseVariants\"\n                [(documentationPropertyValue)]=\"autoClose\"\n            >\n                Autoclose after 3 seconds\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"hasCloseButton\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"hasCloseButton\"\n            >\n                Has close button\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"hasIcon\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"hasIcon\"\n            >\n                Has icon\n            </ng-template>\n        </tui-doc-documentation>\n    </ng-template>\n    <ng-template pageTab>\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Add\n                    <code>TuiAlertModule</code>\n                    into your app.module\n                </p>\n\n                <tui-doc-code\n                    filename=\"app.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>\n                    Use service\n                    <code>show</code>\n                    method and subscribe to\n                    <code>Observable</code>\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.component.ts\"\n                    [code]=\"exampleServiceUsage\"\n                ></tui-doc-code>\n            </li>\n\n            <li i18n>\n                To pass notification with custom content, you can use\n                <a\n                    routerLink=\"/services/alert-service\"\n                    fragment=\"example-template\"\n                    tuiLink\n                >\n                    <code>your template</code>\n                </a>\n                .\n            </li>\n\n            <li>\n                <p i18n>\n                    You can also customize notification logic with a component. Use\n                    <code>POLYMORPHEUS_CONTEXT</code>\n                    into the component to get context input data and to output results. It has the following interface:\n                    <code>TuiDialog&lt;TuiAlertOptions&lt;I&gt;, O&gt;</code>\n                    , where\n                    <code>O</code>\n                    is output data type and\n                    <code>I</code>\n                    is input data type. Do not forget to add notification component into\n                    <code>entryComponents</code>\n                    of your module:\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleImportModuleComponent\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>\n                    Use\n                    <code>new PolymorpheusComponent(CustomNotificationComponent)</code>\n                    to show notification component with a service:\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.component.ts\"\n                    [code]=\"exampleServiceUsageComponent\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>\n                    Use\n                    <code>emitHook</code>\n                    ,\n                    <code>closeHook</code>\n                    and\n                    <code>emitAndCloseHook</code>\n                    methods to control notification from itself:\n                </p>\n\n                <tui-doc-code\n                    filename=\"customNotification.component.ts\"\n                    [code]=\"exampleCustomAlert\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>\n                    If you use it from lazy loading modules, do not forget to use\n                    <code>new TuiComponentContent Injector</code>\n                    of component where you call it\n                </p>\n\n                <tui-doc-code\n                    filename=\"customNotification.component.ts\"\n                    [code]=\"exampleLazyModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>\n                    Optionally use the\n                    <code>TUI_NOTIFICATION_OPTIONS</code>\n                    injection token to override the default options (works only in app.module.ts).\n                </p>\n\n                <tui-doc-code\n                    filename=\"app.module.ts\"\n                    [code]=\"exampleOptions\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {TuiMoneyModule} from '@taiga-ui/addon-commerce';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {TuiButtonModule, TuiLinkModule, TuiModeModule} from '@taiga-ui/core';\nimport {TuiInputModule, TuiRadioListModule} from '@taiga-ui/kit';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {ExampleTuiAlertsComponent} from './alerts.component';\nimport {TuiAlertsExampleComponent1} from './examples/1';\nimport {TuiAlertsExampleComponent2} from './examples/2';\nimport {TuiAlertsExampleComponent3} from './examples/3';\nimport {AlertExampleComponent} from './examples/3/alert-example/alert-example.component';\nimport {AlertExampleModule} from './examples/3/alert-example/alert-example.module';\nimport {TuiAlertsExampleComponent4} from './examples/4';\nimport {AlertExampleWithDataComponent} from './examples/4/alert-example-with-data/alert-example-with-data.component';\nimport {AlertExampleWithDataModule} from './examples/4/alert-example-with-data/alert-example-with-data.module';\nimport {TuiAlertsExampleComponent5} from './examples/5';\nimport {AlertExampleWithCustomLabelComponent} from './examples/5/alert-example-with-custom-label/alert-example-with-custom-label.component';\nimport {AlertExampleWithCustomLabelModule} from './examples/5/alert-example-with-custom-label/alert-example-with-custom-label.module';\nimport {CustomLabelComponent} from './examples/5/custom-label/custom-label.component';\nimport {CustomLabelModule} from './examples/5/custom-label/custom-label.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TuiButtonModule,\n        TuiModeModule,\n        TuiMoneyModule,\n        PolymorpheusModule,\n        AlertExampleWithCustomLabelModule,\n        AlertExampleWithDataModule,\n        AlertExampleModule,\n        CustomLabelModule,\n        TuiRadioListModule,\n        TuiInputModule,\n        TuiLinkModule,\n        FormsModule,\n        TuiAddonDocModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiAlertsComponent)),\n    ],\n    declarations: [\n        ExampleTuiAlertsComponent,\n        TuiAlertsExampleComponent1,\n        TuiAlertsExampleComponent2,\n        TuiAlertsExampleComponent3,\n        TuiAlertsExampleComponent4,\n        TuiAlertsExampleComponent5,\n    ],\n    entryComponents: [\n        AlertExampleComponent,\n        AlertExampleWithDataComponent,\n        AlertExampleWithCustomLabelComponent,\n        CustomLabelComponent,\n    ],\n    exports: [ExampleTuiAlertsComponent],\n})\nexport class ExampleTuiAlertsModule {}\n","import {Component, Inject} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiAlertService} from '@taiga-ui/core';\n\n@Component({\n    selector: `tui-alerts-example-1`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiAlertsExampleComponent1 {\n    constructor(\n        @Inject(TuiAlertService)\n        private readonly alertService: TuiAlertService,\n    ) {}\n\n    showNotification(): void {\n        this.alertService.open(`A simple option`, {label: `With a heading!`}).subscribe();\n    }\n}\n","<button\n    tuiButton\n    type=\"button\"\n    size=\"m\"\n    (click)=\"showNotification()\"\n>\n    Show\n</button>\n","import {Component, Inject, TemplateRef, ViewChild} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiAlertContext} from '@taiga-ui/cdk';\nimport {TuiAlertOptions, TuiAlertService, TuiNotification} from '@taiga-ui/core';\n\n@Component({\n    selector: `tui-alerts-example-2`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiAlertsExampleComponent2 {\n    @ViewChild(`withdrawTemplate`)\n    withdrawTemplate?: TemplateRef<TuiAlertContext<TuiAlertOptions<unknown>>>;\n\n    @ViewChild(`depositTemplate`)\n    depositTemplate?: TemplateRef<TuiAlertContext<TuiAlertOptions<unknown>>>;\n\n    money = 1000;\n\n    constructor(\n        @Inject(TuiAlertService)\n        private readonly alertService: TuiAlertService,\n    ) {}\n\n    showWithdrawAlert(): void {\n        this.alertService\n            .open(this.withdrawTemplate || ``, {\n                label: `A template sample`,\n                status: TuiNotification.Warning,\n                autoClose: false,\n            })\n            .subscribe();\n    }\n\n    showDepositAlert(): void {\n        this.alertService\n            .open(this.depositTemplate || ``, {\n                label: `A template sample`,\n                status: TuiNotification.Success,\n                autoClose: false,\n            })\n            .subscribe();\n    }\n\n    withdraw(): void {\n        this.money -= 100;\n    }\n\n    deposit(): void {\n        this.money += 100;\n    }\n}\n","<p>\n    Your balance:\n    <tui-money [value]=\"money\"></tui-money>\n</p>\n<button\n    tuiButton\n    type=\"button\"\n    size=\"m\"\n    class=\"tui-space_right-3\"\n    (click)=\"showWithdrawAlert()\"\n>\n    Withdraw\n</button>\n<button\n    tuiButton\n    type=\"button\"\n    size=\"m\"\n    class=\"tui-space_right-3\"\n    (click)=\"showDepositAlert()\"\n>\n    Add\n</button>\n<button\n    tuiButton\n    type=\"button\"\n    size=\"m\"\n    class=\"tui-space_right-3\"\n    (click)=\"withdraw()\"\n>\n    Withdraw&nbsp;\n    <tui-money [value]=\"100\"></tui-money>\n</button>\n\n<ng-template #withdrawTemplate>\n    <p i18n>Notifications can be shown with template</p>\n    <p>\n        Your balance:\n        <tui-money [value]=\"money\"></tui-money>\n    </p>\n    <button\n        tuiButton\n        type=\"button\"\n        tuiMode=\"onLight\"\n        appearance=\"outline\"\n        size=\"m\"\n        (click)=\"withdraw()\"\n    >\n        Withdraw&nbsp;\n        <tui-money [value]=\"100\"></tui-money>\n    </button>\n</ng-template>\n\n<ng-template #depositTemplate>\n    <p i18n>\n        If there are many templates, you can use\n        <code>ViewChildren</code>\n        instead of\n        <code>ViewChild</code>\n        or set them IDs with \"#\" (see code of this sample)\n    </p>\n    <p>\n        Your balance:\n        <tui-money [value]=\"money\"></tui-money>\n    </p>\n    <button\n        tuiButton\n        type=\"button\"\n        tuiMode=\"onLight\"\n        appearance=\"outline\"\n        size=\"m\"\n        (click)=\"deposit()\"\n    >\n        Add&nbsp;\n        <tui-money [value]=\"100\"></tui-money>\n    </button>\n</ng-template>\n","import {Component, Inject} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiNotificationContentContext} from '@taiga-ui/core';\nimport {POLYMORPHEUS_CONTEXT} from '@tinkoff/ng-polymorpheus';\n\n@Component({\n    selector: `tui-notifications-service-example`,\n    templateUrl: `./alert-example.template.html`,\n    changeDetection,\n})\nexport class AlertExampleComponent {\n    constructor(\n        @Inject(POLYMORPHEUS_CONTEXT)\n        private readonly context: TuiNotificationContentContext<boolean>,\n    ) {}\n\n    ok(): void {\n        this.context.emitAndCloseHook(true);\n    }\n\n    cancel(): void {\n        this.context.emitAndCloseHook(false);\n    }\n}\n","<p>Yes?</p>\n<div tuiMode=\"onLight\">\n    <button\n        tuiButton\n        type=\"button\"\n        appearance=\"outline\"\n        size=\"s\"\n        (click)=\"ok()\"\n    >\n        Yes\n    </button>\n    <button\n        tuiButton\n        type=\"button\"\n        appearance=\"outline\"\n        size=\"s\"\n        class=\"tui-space_left-1\"\n        (click)=\"cancel()\"\n    >\n        No\n    </button>\n</div>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiMoneyModule} from '@taiga-ui/addon-commerce';\nimport {TuiButtonModule, TuiModeModule} from '@taiga-ui/core';\nimport {TuiSelectModule} from '@taiga-ui/kit';\n\nimport {AlertExampleComponent} from './alert-example.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        TuiButtonModule,\n        TuiModeModule,\n        TuiSelectModule,\n        TuiMoneyModule,\n    ],\n    declarations: [AlertExampleComponent],\n    exports: [AlertExampleComponent],\n    entryComponents: [AlertExampleComponent], // for stackblitz\n})\nexport class AlertExampleModule {}\n","import {Component, Inject, Injector} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiAlertService, TuiNotification} from '@taiga-ui/core';\nimport {PolymorpheusComponent} from '@tinkoff/ng-polymorpheus';\nimport {Observable} from 'rxjs';\nimport {switchMap, takeUntil} from 'rxjs/operators';\n\nimport {AlertExampleComponent} from './alert-example/alert-example.component';\n\n@Component({\n    selector: `tui-alerts-example-3`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiAlertsExampleComponent3 {\n    readonly notification: Observable<void>;\n\n    constructor(\n        @Inject(TuiAlertService) alertService: TuiAlertService,\n        @Inject(Router) router: Router,\n        @Inject(Injector) private readonly injector: Injector,\n    ) {\n        this.notification = alertService\n            .open<boolean>(\n                new PolymorpheusComponent(AlertExampleComponent, this.injector),\n                {\n                    label: `Question`,\n                    status: TuiNotification.Error,\n                    autoClose: false,\n                },\n            )\n            .pipe(\n                switchMap(response =>\n                    alertService.open(`Got a value — ${response}`, {\n                        label: `Information`,\n                    }),\n                ),\n                takeUntil(router.events),\n            );\n    }\n\n    showNotification(): void {\n        this.notification.subscribe();\n    }\n}\n","<p i18n>This notification will be removed after router change (see component sample)</p>\n<button\n    tuiButton\n    type=\"button\"\n    size=\"m\"\n    (click)=\"showNotification()\"\n>\n    Show\n</button>\n","import {Component, Inject} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiNotificationContentContext} from '@taiga-ui/core';\nimport {POLYMORPHEUS_CONTEXT} from '@tinkoff/ng-polymorpheus';\n\n@Component({\n    selector: `tui-notifications-service-example-with-data`,\n    templateUrl: `./alert-example-with-data.template.html`,\n    styleUrls: [`./alert-example-with-data.style.less`],\n    changeDetection,\n})\nexport class AlertExampleWithDataComponent {\n    value: number;\n\n    constructor(\n        @Inject(POLYMORPHEUS_CONTEXT)\n        private readonly context: TuiNotificationContentContext<number, number>,\n    ) {\n        this.value = this.context.data;\n    }\n\n    increaseBalance(): void {\n        this.value += 10;\n    }\n\n    submit(): void {\n        this.context.emitAndCloseHook(this.value);\n    }\n}\n","<span class=\"text\">Your balance:</span>\n&nbsp;\n<tui-money [value]=\"value\"></tui-money>\n<div\n    tuiMode=\"onLight\"\n    class=\"controls tui-space_top-3\"\n>\n    <button\n        tuiButton\n        type=\"button\"\n        appearance=\"outline\"\n        size=\"m\"\n        class=\"tui-space_right-3\"\n        (click)=\"submit()\"\n    >\n        Submit\n    </button>\n    <button\n        tuiLink\n        type=\"button\"\n        [pseudo]=\"true\"\n        (click)=\"increaseBalance()\"\n    >\n        Increase\n    </button>\n</div>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiMoneyModule} from '@taiga-ui/addon-commerce';\nimport {TuiButtonModule, TuiLinkModule, TuiModeModule} from '@taiga-ui/core';\n\nimport {AlertExampleWithDataComponent} from './alert-example-with-data.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        TuiModeModule,\n        TuiButtonModule,\n        TuiLinkModule,\n        TuiMoneyModule,\n    ],\n    declarations: [AlertExampleWithDataComponent],\n    exports: [AlertExampleWithDataComponent],\n    entryComponents: [AlertExampleWithDataComponent], // for stackblitz\n})\nexport class AlertExampleWithDataModule {}\n","import {Component, Inject, Injector} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiAlertService, TuiNotification} from '@taiga-ui/core';\nimport {PolymorpheusComponent} from '@tinkoff/ng-polymorpheus';\nimport {Observable} from 'rxjs';\nimport {switchMap, takeUntil} from 'rxjs/operators';\n\nimport {AlertExampleWithDataComponent} from './alert-example-with-data/alert-example-with-data.component';\n\n@Component({\n    selector: `tui-alerts-example-4`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiAlertsExampleComponent4 {\n    readonly notification: Observable<void>;\n\n    constructor(\n        @Inject(TuiAlertService) alertService: TuiAlertService,\n        @Inject(Router) router: Router,\n        @Inject(Injector) private readonly injector: Injector,\n    ) {\n        this.notification = alertService\n            .open<number>(\n                new PolymorpheusComponent(AlertExampleWithDataComponent, this.injector),\n                {\n                    label: `Heading is so long that it should be shown in two lines of text`,\n                    data: 237,\n                    status: TuiNotification.Warning,\n                    autoClose: false,\n                },\n            )\n            .pipe(\n                switchMap(response =>\n                    alertService.open(`Got a value — ${response}`, {\n                        label: `Information`,\n                    }),\n                ),\n                takeUntil(router.events),\n            );\n    }\n\n    showNotification(): void {\n        this.notification.subscribe();\n    }\n}\n","<button\n    tuiButton\n    type=\"button\"\n    size=\"m\"\n    (click)=\"showNotification()\"\n>\n    Show\n</button>\n","import {Component, Inject} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiContextWithImplicit, tuiPure} from '@taiga-ui/cdk';\nimport {TuiNotification, TuiNotificationContentContext} from '@taiga-ui/core';\nimport {POLYMORPHEUS_CONTEXT, PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\n@Component({\n    selector: `tui-notifications-service-example-with-custom-label`,\n    templateUrl: `./alert-example-with-custom-label.template.html`,\n    changeDetection,\n})\nexport class AlertExampleWithCustomLabelComponent {\n    @tuiPure\n    get label(): PolymorpheusContent<TuiContextWithImplicit<TuiNotification>> {\n        return this.context.label;\n    }\n\n    @tuiPure\n    get status(): TuiNotification {\n        return this.context.$implicit;\n    }\n\n    constructor(\n        @Inject(POLYMORPHEUS_CONTEXT)\n        private readonly context: TuiNotificationContentContext<boolean>,\n    ) {}\n}\n","<h4>Start content</h4>\n<label\n    polymorpheus-outlet\n    [content]=\"label\"\n    [context]=\"{$implicit: status}\"\n></label>\n<h4>End content</h4>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {AlertExampleWithCustomLabelComponent} from './alert-example-with-custom-label.component';\n\n@NgModule({\n    imports: [CommonModule, PolymorpheusModule],\n    declarations: [AlertExampleWithCustomLabelComponent],\n    exports: [AlertExampleWithCustomLabelComponent],\n})\nexport class AlertExampleWithCustomLabelModule {}\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\n\n@Component({\n    selector: `tui-notifications-service-example-custom-label`,\n    templateUrl: `./custom-label.template.html`,\n    styleUrls: [`./custom-label.style.less`],\n    changeDetection,\n})\nexport class CustomLabelComponent {}\n","<label class=\"label\">\n    <span class=\"text\">From custom label component with</span>\n    <tui-svg src=\"tuiIconHeart\"></tui-svg>\n</label>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiSvgModule} from '@taiga-ui/core';\n\nimport {CustomLabelComponent} from './custom-label.component';\n\n@NgModule({\n    imports: [CommonModule, TuiSvgModule],\n    declarations: [CustomLabelComponent],\n    exports: [CustomLabelComponent],\n})\nexport class CustomLabelModule {}\n","import {Component, Inject, Injector} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiContextWithImplicit} from '@taiga-ui/cdk';\nimport {TuiAlertService, TuiNotification} from '@taiga-ui/core';\nimport {PolymorpheusComponent} from '@tinkoff/ng-polymorpheus';\nimport {Observable} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {AlertExampleWithCustomLabelComponent} from './alert-example-with-custom-label/alert-example-with-custom-label.component';\nimport {CustomLabelComponent} from './custom-label/custom-label.component';\n\n@Component({\n    selector: `tui-alerts-example-5`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiAlertsExampleComponent5 {\n    readonly notification: Observable<void>;\n    readonly notificationWithCustomLabel: Observable<void>;\n\n    constructor(\n        @Inject(TuiAlertService) alertService: TuiAlertService,\n        @Inject(Router) router: Router,\n        @Inject(Injector) private readonly injector: Injector,\n    ) {\n        this.notification = alertService\n            .open(\n                new PolymorpheusComponent(\n                    AlertExampleWithCustomLabelComponent,\n                    this.injector,\n                ),\n                {\n                    label: ({$implicit}: TuiContextWithImplicit<TuiNotification>) =>\n                        $implicit === TuiNotification.Error\n                            ? `Error label from function`\n                            : `Info label from function`,\n                    status: TuiNotification.Info,\n                    autoClose: false,\n                },\n            )\n            .pipe(takeUntil(router.events));\n\n        this.notificationWithCustomLabel = alertService\n            .open(\n                new PolymorpheusComponent(\n                    AlertExampleWithCustomLabelComponent,\n                    this.injector,\n                ),\n                {\n                    label: new PolymorpheusComponent(CustomLabelComponent, this.injector),\n                    status: TuiNotification.Warning,\n                    autoClose: false,\n                },\n            )\n            .pipe(takeUntil(router.events));\n    }\n\n    showNotification(): void {\n        this.notification.subscribe();\n    }\n\n    showNotificationWithCustomLabel(): void {\n        this.notificationWithCustomLabel.subscribe();\n    }\n}\n","<button\n    tuiButton\n    type=\"button\"\n    size=\"m\"\n    (click)=\"showNotification()\"\n>\n    With custom label function\n</button>\n<button\n    tuiButton\n    type=\"button\"\n    size=\"m\"\n    class=\"tui-space_left-3\"\n    (click)=\"showNotificationWithCustomLabel()\"\n>\n    With custom label component\n</button>\n"],"sourceRoot":"webpack:///"}