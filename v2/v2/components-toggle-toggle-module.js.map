{"version":3,"sources":["./src/modules/components/toggle/examples/1/index.ts","./src/modules/components/toggle/examples/1/index.html","./src/modules/components/toggle/examples/2/index.ts","./src/modules/components/toggle/examples/2/index.html","./src/modules/components/toggle/toggle.component.ts","./src/modules/components/toggle/toggle.template.html","./src/modules/components/toggle/toggle.module.ts"],"names":[],"mappings":"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","file":"components-toggle-toggle-module.js","sourcesContent":["import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-toggle-example-1`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiToggleExample1 {\n    testForm = new FormGroup({\n        testValue1: new FormControl(true),\n        testValue2: new FormControl(false),\n        testValue3: new FormControl(true),\n        testValue4: new FormControl(false),\n        testValue5: new FormControl(true),\n        testValue6: new FormControl(false),\n        testValue7: new FormControl(true),\n        testValue8: new FormControl(false),\n    });\n}\n","<form [formGroup]=\"testForm\">\n    <div class=\"tui-space_bottom-2\">\n        <tui-toggle\n            formControlName=\"testValue1\"\n            [showIcons]=\"true\"\n        ></tui-toggle>\n        <tui-toggle\n            formControlName=\"testValue2\"\n            class=\"tui-space_left-1\"\n            [showIcons]=\"true\"\n        ></tui-toggle>\n    </div>\n\n    <div class=\"tui-space_bottom-2\">\n        <tui-toggle formControlName=\"testValue3\"></tui-toggle>\n        <tui-toggle\n            formControlName=\"testValue4\"\n            class=\"tui-space_left-1\"\n        ></tui-toggle>\n    </div>\n\n    <div class=\"tui-space_bottom-2\">\n        <tui-toggle\n            formControlName=\"testValue5\"\n            size=\"l\"\n            [showIcons]=\"true\"\n        ></tui-toggle>\n        <tui-toggle\n            formControlName=\"testValue6\"\n            size=\"l\"\n            class=\"tui-space_left-1\"\n            [showIcons]=\"true\"\n        ></tui-toggle>\n    </div>\n\n    <div>\n        <tui-toggle\n            formControlName=\"testValue7\"\n            size=\"l\"\n        ></tui-toggle>\n        <tui-toggle\n            formControlName=\"testValue8\"\n            size=\"l\"\n            class=\"tui-space_left-1\"\n        ></tui-toggle>\n    </div>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {tuiToggleOptionsProvider} from '@taiga-ui/kit';\n\n@Component({\n    selector: `tui-toggle-example-2`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n    providers: [\n        tuiToggleOptionsProvider({\n            icons: {\n                toggleOff: ({$implicit}) =>\n                    $implicit === `m`\n                        ? `tuiIconChevronRight`\n                        : `tuiIconChevronRightLarge`,\n                toggleOn: ({$implicit}) =>\n                    $implicit === `m` ? `tuiIconChevronLeft` : `tuiIconChevronLeftLarge`,\n            },\n            showIcons: true,\n        }),\n    ],\n})\nexport class TuiToggleExample2 {\n    testForm = new FormGroup({\n        testValue1: new FormControl(true),\n        testValue2: new FormControl(false),\n    });\n}\n","<form [formGroup]=\"testForm\">\n    <div>\n        <tui-toggle formControlName=\"testValue1\"></tui-toggle>\n        <tui-toggle\n            formControlName=\"testValue2\"\n            size=\"l\"\n            class=\"tui-space_left-1\"\n        ></tui-toggle>\n    </div>\n</form>\n","import {Component, forwardRef} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\nimport {TuiSizeL} from '@taiga-ui/core';\n\nimport {ABSTRACT_PROPS_ACCESSOR} from '../abstract/inherited-documentation/abstract-props-accessor';\nimport {AbstractExampleTuiInteractive} from '../abstract/interactive';\n\n@Component({\n    selector: `example-tui-toggle`,\n    templateUrl: `./toggle.template.html`,\n    changeDetection,\n    providers: [\n        {\n            provide: ABSTRACT_PROPS_ACCESSOR,\n            useExisting: forwardRef(() => ExampleTuiToggleComponent),\n        },\n    ],\n})\nexport class ExampleTuiToggleComponent extends AbstractExampleTuiInteractive {\n    readonly exampleForm = import(`!!raw-loader!./examples/import/declare-form.md`);\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n    readonly exampleOptions = import(`!!raw-loader!./examples/import/define-options.md`);\n\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n    };\n\n    readonly example2: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/2/index.ts`),\n        HTML: import(`!!raw-loader!./examples/2/index.html`),\n    };\n\n    showIcons = false;\n\n    showLoader = false;\n\n    singleColor = false;\n\n    readonly control = new FormControl(false);\n\n    readonly sizeVariants: readonly TuiSizeL[] = [`m`, `l`];\n\n    size: TuiSizeL = this.sizeVariants[0];\n\n    get disabled(): boolean {\n        return this.control.disabled;\n    }\n\n    set disabled(value: boolean) {\n        if (value) {\n            this.control.disable();\n\n            return;\n        }\n\n        this.control.enable();\n    }\n}\n","<tui-doc-page\n    header=\"Toggle\"\n    package=\"KIT\"\n    type=\"components\"\n>\n    <ng-template pageTab>\n        <p i18n>Toggle is a switcher between two states. It can also be used with icons and loading.</p>\n\n        <tui-doc-example\n            id=\"base\"\n            i18n-heading\n            heading=\"Basic\"\n            [content]=\"example1\"\n        >\n            <tui-toggle-example-1></tui-toggle-example-1>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"options\"\n            i18n-heading\n            heading=\"options\"\n            [content]=\"example2\"\n        >\n            <tui-toggle-example-2></tui-toggle-example-2>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        <tui-doc-demo>\n            <tui-toggle\n                [formControl]=\"control\"\n                [pseudoFocused]=\"pseudoFocused\"\n                [pseudoHovered]=\"pseudoHovered\"\n                [pseudoPressed]=\"pseudoPressed\"\n                [showIcons]=\"showIcons\"\n                [showLoader]=\"showLoader\"\n                [singleColor]=\"singleColor\"\n                [size]=\"size\"\n            ></tui-toggle>\n        </tui-doc-demo>\n        <tui-doc-documentation>\n            <ng-template\n                i18n\n                documentationPropertyName=\"\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"disabled\"\n            >\n                Disabled state (use\n                <code>formControl.disable()</code>\n                )\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"showIcons\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"showIcons\"\n            >\n                Show icons\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"showLoader\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"showLoader\"\n            >\n                Show loader. If icons are also enabled, show loader anyway.\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"singleColor\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"singleColor\"\n            >\n                All states have the same color\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"size\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiSizeL\"\n                [documentationPropertyValues]=\"sizeVariants\"\n                [(documentationPropertyValue)]=\"size\"\n            >\n                Size\n            </ng-template>\n        </tui-doc-documentation>\n        <inherited-documentation></inherited-documentation>\n    </ng-template>\n\n    <ng-template pageTab>\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Import\n                    <code>TuiToggleModule</code>\n                    into a module where you want to use our component\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>\n                    Declare a form (\n                    <code>FormGroup</code>\n                    ) or a control (\n                    <code>FormControl</code>\n                    ) in your component:\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.component.ts\"\n                    [code]=\"exampleForm\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Add to the template:</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>\n                    Optionally use the\n                    <code>TUI_TOGGLE_OPTIONS</code>\n                    injection token to override the default options for the component.\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleOptions\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {TuiToggleModule} from '@taiga-ui/kit';\n\nimport {InheritedDocumentationModule} from '../abstract/inherited-documentation/inherited-documentation.module';\nimport {TuiToggleExample1} from './examples/1';\nimport {TuiToggleExample2} from './examples/2';\nimport {ExampleTuiToggleComponent} from './toggle.component';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        TuiToggleModule,\n        TuiAddonDocModule,\n        InheritedDocumentationModule,\n        CommonModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiToggleComponent)),\n    ],\n    declarations: [ExampleTuiToggleComponent, TuiToggleExample1, TuiToggleExample2],\n    exports: [ExampleTuiToggleComponent],\n})\nexport class ExampleTuiToggleModule {}\n"],"sourceRoot":"webpack:///"}