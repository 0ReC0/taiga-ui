{"version":3,"sources":["./src/modules/info/testing/jest/jest.component.ts","./src/modules/info/testing/jest/jest.template.html","./src/modules/info/testing/jest/jest.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;;;;;;;;;;;;AAMjC,MAAM,aAAa;IAJ1B;QAKa,iBAAY,GAAG,wTAAmD,CAAC;QACnE,gBAAW,GAAG,gTAAiD,CAAC;QAChE,gBAAW,GAAG,oTAAkD,CAAC;KAC7E;;0EAJY,aAAa;6FAAb,aAAa;QCN1B,kFAII;QAJJ,sEAII;QAAA,oEACI;QAAA,gLAEJ;QAAA,4DAAI;QAEJ,oEACI;QAAA,0EACA;QAAA,uEAAM;QAAA,8EAAmB;QAAA,4DAAO;QAChC,qGACA;QAAA,uEAAM;QAAA,kEAAM;QAAA,4DAAO;QACnB,gEACA;QAAA,wEAAM;QAAA,qEAAS;QAAA,4DAAO;QACtB,sJACA;QAAA,wEAAM;QAAA,kFAAsB;QAAA,4DAAO;QACnC,uFACJ;QAAA,4DAAI;QAEJ,qEACI;QAAA,sGACA;QAAA,wEAAM;QAAA,+GAAmD;QAAA,4DAAO;QACpE,4DAAI;QAEJ,sEACI;QAAA,mEACA;QAAA,wEAAM;QAAA,kFAAsB;QAAA,4DAAO;QACnC,gEACA;QAAA,wEAAM;QAAA,+EAAmB;QAAA,4DAAO;QACpC,4DAAK;QAEL,qEAAG;QAAA,wIAA4E;QAAA,4DAAI;QAEnF,yEACI;QAAA,yEACI;QAAA,qEACA;QAAA,wEAAM;QAAA,mGAAuC;QAAA,4DAAO;QACpD,wPAEJ;QAAA,4DAAK;QACL,yEACI;QAAA,mEACA;QAAA,wEAAM;QAAA,8EAAkB;QAAA,4DAAO;QAC/B,8EACA;QAAA,wEAAM;QAAA,0EAAc;QAAA,4DAAO;QAC3B,gEACA;QAAA,wEAAM;QAAA,wEAAY;QAAA,4DAAO;QACzB,4IACA;QAAA,wEAAM;QAAA,yEAAa;QAAA,4DAAO;QAC1B,sFAEA;QAAA,8EAGgB;QAChB,gEACA;QAAA,8EAGgB;QACpB,4DAAK;QACL,yEACI;QAAA,6EACA;QAAA,wEAAM;QAAA,yEAAa;QAAA,4DAAO;QAC1B,oMAEJ;QAAA,4DAAK;QACL,yEACI;QAAA,2FACA;QAAA,wEAAM;QAAA,yEAAa;QAAA,4DAAO;QAC1B,+DACA;QAAA,wEAAM;QAAA,kGAAsC;QAAA,4DAAO;QACnD,+DAEA;QAAA,8EAGgB;QACpB,4DAAK;QACT,4DAAK;QACT,4DAAe;;QA3BC,2DAAqB;QAArB,kFAAqB;QAKrB,0DAAoB;QAApB,iFAAoB;QAkBpB,2DAAoB;QAApB,iFAAoB;;6FDxEvB,aAAa;cAJzB,uDAAS;eAAC;gBACP,QAAQ,EAAE,MAAM;gBAChB,WAAW,EAAE,sBAAsB;aACtC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACN;AACM;AACyB;AACzB;AAEE;;;AAWxC,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBAPV;YACL,4DAAY;YACZ,qEAAiB;YACjB,4DAAa;YACb,4DAAY,CAAC,QAAQ,CAAC,0EAAc,CAAC,6DAAa,CAAC,CAAC;SACvD;mIAEQ,UAAU,mBARJ,6DAAa,aAExB,4DAAY;QACZ,qEAAiB;QACjB,4DAAa;6FAIR,UAAU;cATtB,sDAAQ;eAAC;gBACN,YAAY,EAAE,CAAC,6DAAa,CAAC;gBAC7B,OAAO,EAAE;oBACL,4DAAY;oBACZ,qEAAiB;oBACjB,4DAAa;oBACb,4DAAY,CAAC,QAAQ,CAAC,0EAAc,CAAC,6DAAa,CAAC,CAAC;iBACvD;aACJ","file":"info-testing-jest-jest-module.js","sourcesContent":["import {Component} from '@angular/core';\n\n@Component({\n    selector: `jest`,\n    templateUrl: `./jest.template.html`,\n})\nexport class JestComponent {\n    readonly jestConfigJs = import(`!!raw-loader!./examples/jest-config-js.md`);\n    readonly packageJson = import(`!!raw-loader!./examples/package-json.md`);\n    readonly setupJestJs = import(`!!raw-loader!./examples/setup-jest-js.md`);\n}\n","<tui-doc-page\n    i18n-header\n    header=\"Jest\"\n>\n    <p>\n        If you use Jest to run your tests, you need additional configuration because Jest is running on a Node.js\n        emulator.\n    </p>\n\n    <p>\n        Taiga UI uses\n        <code>@ng-web-apis/common</code>\n        to avoid accessing global variables like\n        <code>window</code>\n        or\n        <code>navigator</code>\n        directly. Which requires Server Side Rendering (SSR) with the help of its sister library\n        <code>@ng-web-apis/universal</code>\n        for Jest to run properly.\n    </p>\n\n    <p>\n        Otherwise, you're gonna face errors like\n        <code>ReferenceError: IntersectionObserver is not defined</code>\n    </p>\n\n    <h2>\n        Using\n        <code>@angular-builders/jest</code>\n        or\n        <code>jest-preset-angular</code>\n    </h2>\n\n    <p>If you're using one of these libraries. You can follow the following steps :</p>\n\n    <ol class=\"tui-list\">\n        <li class=\"tui-list__item\">\n            Install\n            <code>npm i @ng-web-apis/universal --save-dev</code>\n            (install it as a devDependency only if you will use it for Jest, otherwise install it as a regular\n            dependency). Install 2.0 and above for Taiga UI 3.0 and above, otherwise install 1.x.x.\n        </li>\n        <li class=\"tui-list__item\">\n            Add a\n            <code>setupFilesAfterEnv</code>\n            property to your\n            <code>jest.config.js</code>\n            or\n            <code>package.json</code>\n            jest configuration (depending on where your configuration is) with the path to\n            <code>setup-jest.js</code>\n            if you have not already.\n\n            <tui-doc-code\n                filename=\"jest.config.js\"\n                [code]=\"jestConfigJs\"\n            ></tui-doc-code>\n            or\n            <tui-doc-code\n                filename=\"package.json\"\n                [code]=\"packageJson\"\n            ></tui-doc-code>\n        </li>\n        <li class=\"tui-list__item\">\n            Create the file\n            <code>setup-jest.js</code>\n            (wherever you want as long as it's at the path referenced above) if you have not already. For example here\n            at the root of the project.\n        </li>\n        <li class=\"tui-list__item\">\n            Add the following line to the\n            <code>setup-jest.js</code>\n            :\n            <code>import '@ng-web-apis/universal/mocks';</code>\n            .\n\n            <tui-doc-code\n                filename=\"setup-jest.js\"\n                [code]=\"setupJestJs\"\n            ></tui-doc-code>\n        </li>\n    </ol>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {TuiLinkModule} from '@taiga-ui/core';\n\nimport {JestComponent} from './jest.component';\n\n@NgModule({\n    declarations: [JestComponent],\n    imports: [\n        CommonModule,\n        TuiAddonDocModule,\n        TuiLinkModule,\n        RouterModule.forChild(generateRoutes(JestComponent)),\n    ],\n})\nexport class JestModule {}\n"],"sourceRoot":"webpack:///"}