{"version":3,"sources":["./src/modules/components/input-password/examples/1/index.ts","./src/modules/components/input-password/examples/1/index.html","./src/modules/components/input-password/examples/2/index.ts","./src/modules/components/input-password/examples/2/index.html","./src/modules/components/input-password/input-password.component.ts","./src/modules/components/input-password/input-password.template.html","./src/modules/components/input-password/input-password.module.ts"],"names":[],"mappings":"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","file":"components-input-password-input-password-module.js","sourcesContent":["import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-password-example-1`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputPasswordExample1 {\n    testForm = new FormGroup({\n        testValue: new FormControl(`password`, Validators.required),\n    });\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <tui-input-password\n        formControlName=\"testValue\"\n        tuiTextfieldSize=\"s\"\n    >\n        Type a password\n        <input\n            tuiTextfield\n            placeholder=\"Make it secure!\"\n        />\n    </tui-input-password>\n    <tui-input-password\n        formControlName=\"testValue\"\n        tuiTextfieldSize=\"m\"\n        class=\"tui-space_top-2\"\n        [tuiTextfieldLabelOutside]=\"true\"\n    >\n        Type a password\n        <input\n            tuiTextfield\n            placeholder=\"Make it secure!\"\n        />\n    </tui-input-password>\n    <tui-input-password\n        formControlName=\"testValue\"\n        class=\"tui-space_top-2\"\n    >\n        Type a password\n        <input\n            tuiTextfield\n            placeholder=\"Make it secure!\"\n        />\n    </tui-input-password>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TUI_PASSWORD_TEXTS, tuiInputPasswordOptionsProvider} from '@taiga-ui/kit';\nimport {of} from 'rxjs';\n\n@Component({\n    selector: `tui-input-password-example-2`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n    providers: [\n        tuiInputPasswordOptionsProvider({\n            icons: {\n                hide: `tuiIconLockLarge`,\n                show: `tuiIconLockOpenLarge`,\n            },\n        }),\n        {\n            provide: TUI_PASSWORD_TEXTS,\n            useValue: of([``]),\n        },\n    ],\n})\nexport class TuiInputPasswordExample2 {\n    testForm = new FormGroup({\n        testValue: new FormControl(`password`, Validators.required),\n    });\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <tui-input-password\n        formControlName=\"testValue\"\n        tuiHintContent\n        tuiHintDirection=\"right\"\n        tuiHintMode=\"onDark\"\n    >\n        Type a password\n    </tui-input-password>\n</form>\n","import {Component, forwardRef} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\nimport {TuiAutofillFieldName} from '@taiga-ui/cdk';\n\nimport {AbstractExampleTuiControl} from '../abstract/control';\nimport {ABSTRACT_PROPS_ACCESSOR} from '../abstract/inherited-documentation/abstract-props-accessor';\n\n@Component({\n    selector: `example-tui-input-password`,\n    templateUrl: `./input-password.template.html`,\n    changeDetection,\n    providers: [\n        {\n            provide: ABSTRACT_PROPS_ACCESSOR,\n            useExisting: forwardRef(() => ExampleTuiInputPasswordComponent),\n        },\n    ],\n})\nexport class ExampleTuiInputPasswordComponent extends AbstractExampleTuiControl {\n    readonly exampleForm = import(`!!raw-loader!./examples/import/declare-form.md`);\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n    readonly exampleOptions = import(`!!raw-loader!./examples/import/define-options.md`);\n\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n    };\n\n    readonly example2: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/2/index.ts`),\n        HTML: import(`!!raw-loader!./examples/2/index.html`),\n    };\n\n    readonly maxLengthVariants: readonly number[] = [10];\n\n    autocompleteVariants: TuiAutofillFieldName[] = [\n        `off`,\n        `new-password`,\n        `current-password`,\n    ];\n\n    autocomplete: TuiAutofillFieldName | '' = ``;\n\n    maxLength = null;\n\n    control = new FormControl(``, Validators.required);\n}\n","<tui-doc-page\n    header=\"InputPassword\"\n    package=\"KIT\"\n    type=\"components\"\n>\n    <ng-template pageTab>\n        <tui-doc-example\n            id=\"sizes\"\n            i18n-heading\n            heading=\"sizes\"\n            [content]=\"example1\"\n        >\n            <tui-notification class=\"tui-space_bottom-4 b-form\">\n                If you need to set some attributes or listen to events on native\n                <code>input</code>\n                , you can put it inside with\n                <code>Textfield</code>\n                directive as shown below\n            </tui-notification>\n            <tui-input-password-example-1></tui-input-password-example-1>\n        </tui-doc-example>\n        <tui-doc-example\n            id=\"options\"\n            i18n-heading\n            heading=\"options\"\n            [content]=\"example2\"\n        >\n            <tui-input-password-example-2></tui-input-password-example-2>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        <tui-doc-demo [control]=\"control\">\n            <ng-template>\n                <tui-input-password\n                    [formControl]=\"control\"\n                    [focusable]=\"focusable\"\n                    [tuiTextfieldAutocomplete]=\"autocomplete\"\n                    [tuiTextfieldExampleText]=\"exampleText\"\n                    [tuiTextfieldMaxLength]=\"maxLength\"\n                    [tuiTextfieldLabelOutside]=\"labelOutside\"\n                    [tuiTextfieldSize]=\"size\"\n                    [tuiTextfieldCleaner]=\"cleaner\"\n                    [readOnly]=\"readOnly\"\n                    [pseudoInvalid]=\"pseudoInvalid\"\n                    [pseudoFocused]=\"pseudoFocused\"\n                    [pseudoHovered]=\"pseudoHovered\"\n                    [tuiHintContent]=\"hintContent\"\n                    [tuiHintDirection]=\"hintDirection\"\n                    [tuiHintMode]=\"hintMode\"\n                >\n                    Type a password\n                </tui-input-password>\n            </ng-template>\n        </tui-doc-demo>\n        <tui-doc-documentation>\n            <ng-template\n                i18n\n                documentationPropertyName=\"\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"disabled\"\n            >\n                Disabled state (use\n                <code>formControl.disable()</code>\n                )\n            </ng-template>\n        </tui-doc-documentation>\n        <inherited-documentation></inherited-documentation>\n    </ng-template>\n\n    <ng-template pageTab>\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Import an Angular module for forms and\n                    <code>TuiInputPasswordModule</code>\n                    in the same module where you want to use our component:\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>\n                    Declare a form (\n                    <code>FormGroup</code>\n                    ) or a control (\n                    <code>FormControl</code>\n                    ) in your component:\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.component.ts\"\n                    [code]=\"exampleForm\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Add to the template:</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>\n                    Optionally use the\n                    <code>TUI_INPUT_PASSWORD_OPTIONS</code>\n                    injection token to override the default options for the component.\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleOptions\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {\n    TuiButtonModule,\n    TuiHintControllerModule,\n    TuiLinkModule,\n    TuiNotificationModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TuiInputPasswordModule} from '@taiga-ui/kit';\n\nimport {InheritedDocumentationModule} from '../abstract/inherited-documentation/inherited-documentation.module';\nimport {TuiInputPasswordExample1} from './examples/1';\nimport {TuiInputPasswordExample2} from './examples/2';\nimport {ExampleTuiInputPasswordComponent} from './input-password.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TuiInputPasswordModule,\n        TuiLinkModule,\n        InheritedDocumentationModule,\n        TuiAddonDocModule,\n        TuiButtonModule,\n        TuiTextfieldControllerModule,\n        TuiHintControllerModule,\n        TuiNotificationModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiInputPasswordComponent)),\n    ],\n    declarations: [\n        ExampleTuiInputPasswordComponent,\n        TuiInputPasswordExample1,\n        TuiInputPasswordExample2,\n    ],\n    exports: [ExampleTuiInputPasswordComponent],\n})\nexport class ExampleTuiInputPasswordModule {}\n"],"sourceRoot":"webpack:///"}