{"version":3,"sources":["./src/modules/app/customization/customization.component.ts","./src/modules/app/customization/customization.template.html","./src/modules/app/customization/customization.module.ts","./src/modules/app/customization/customization.providers.ts","./src/modules/components/primitive-textfield/examples/1/index.ts","./src/modules/components/primitive-textfield/examples/1/index.html","./src/modules/components/primitive-textfield/examples/2/index.ts","./src/modules/components/primitive-textfield/examples/2/index.html","./src/modules/components/primitive-textfield/primitive-textfield.component.ts","./src/modules/components/primitive-textfield/primitive-textfield.template.html","./src/modules/components/primitive-textfield/primitive-textfield.module.ts","./src/modules/themes/bootstrap/bootstrap.component.ts","./src/modules/themes/material/material.component.ts","./src/modules/themes/themes.module.ts","./src/modules/tokens/css-vars.ts"],"names":[],"mappings":"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","file":"components-primitive-textfield-primitive-textfield-module.js","sourcesContent":["import {AfterViewInit, Component, Inject, ViewChild} from '@angular/core';\nimport {DomSanitizer, SafeStyle} from '@angular/platform-browser';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {USER_AGENT} from '@ng-web-apis/common';\nimport {TuiDocDemoComponent} from '@taiga-ui/addon-doc';\nimport {isIE, px, TuiDestroyService, tuiPure} from '@taiga-ui/cdk';\nimport {TuiBrightness} from '@taiga-ui/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {\n    TUI_DOC_CUSTOMIZATION_PROVIDERS,\n    TUI_DOC_CUSTOMIZATION_VARS,\n} from './customization.providers';\n\n// @dynamic\n@Component({\n    selector: `tui-customization`,\n    templateUrl: `./customization.template.html`,\n    styleUrls: [`./customization.style.less`],\n    changeDetection,\n    providers: TUI_DOC_CUSTOMIZATION_PROVIDERS,\n})\nexport class TuiCustomizationComponent implements AfterViewInit {\n    @ViewChild(`demo`)\n    private readonly demo?: TuiDocDemoComponent;\n\n    readonly isIE = isIE(this.userAgent);\n\n    readonly change$ = new Subject<void>();\n\n    constructor(\n        @Inject(TuiDestroyService) private readonly destroy$: TuiDestroyService,\n        @Inject(DomSanitizer) private readonly sanitizer: DomSanitizer,\n        @Inject(TUI_DOC_CUSTOMIZATION_VARS) private variables: Record<string, string>,\n        @Inject(USER_AGENT) private readonly userAgent: string,\n    ) {}\n\n    get style(): SafeStyle {\n        return this.getStyle(this.sanitizer, this.stringify(this.variables));\n    }\n\n    get keys(): readonly string[] {\n        return this.getKeys(this.variables);\n    }\n\n    get basic(): boolean {\n        return !this.hasDark && !this.hasLight;\n    }\n\n    get hasLight(): boolean {\n        return this.keys.some(this.isLight);\n    }\n\n    get hasDark(): boolean {\n        return this.keys.some(this.isDark);\n    }\n\n    get mode(): TuiBrightness | null {\n        return this.demo?.mode || null;\n    }\n\n    ngAfterViewInit(): void {\n        if (!this.demo) {\n            return;\n        }\n\n        this.demo.change$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.change$.next();\n        });\n    }\n\n    isLight(key: string): boolean {\n        return key.includes(`onDark`);\n    }\n\n    isDark(key: string): boolean {\n        return key.includes(`onLight`);\n    }\n\n    onModelChange(variable: string, value: string | number): void {\n        this.variables = {\n            ...this.variables,\n            [variable]: typeof value === `string` ? value : px(value),\n        };\n    }\n\n    getType(key: string): 'number' | 'color' | 'string' {\n        const variable = this.variables[key];\n\n        if (key.includes(`boxshadow`)) {\n            return `string`;\n        }\n\n        return variable.startsWith(`#`) || variable.startsWith(`rgb`)\n            ? `color`\n            : `number`;\n    }\n\n    getVariable(key: string): string | number {\n        const variable = this.variables[key];\n\n        return variable.includes(`px`) ? Number.parseInt(variable, 10) : variable;\n    }\n\n    @tuiPure\n    private getKeys(variables: Record<string, string>): readonly string[] {\n        return Object.keys(variables);\n    }\n\n    @tuiPure\n    private getStyle(sanitizer: DomSanitizer, variables: string): SafeStyle {\n        return sanitizer.bypassSecurityTrustStyle(variables);\n    }\n\n    @tuiPure\n    private stringify(variables: Record<string, string>): string {\n        return Object.keys(variables).reduce(\n            (result, key) => `${key}: ${variables[key]}; ${result}`,\n            ``,\n        );\n    }\n}\n","<h2 *ngIf=\"isIE; else customization\">Not available in Internet Explorer.</h2>\n<ng-template #customization>\n    <tui-doc-demo\n        #demo\n        [attr.style]=\"style\"\n    >\n        <ng-content></ng-content>\n    </tui-doc-demo>\n    <tui-doc-documentation\n        *ngIf=\"basic; else withMode\"\n        class=\"tui-space_top-6\"\n        [tuiMode]=\"null\"\n    >\n        <ng-template\n            *ngFor=\"let variable of keys\"\n            [documentationPropertyName]=\"variable\"\n            [documentationPropertyType]=\"getType(variable)\"\n            [documentationPropertyValue]=\"getVariable(variable)\"\n            (documentationPropertyValueChange)=\"onModelChange(variable, $event)\"\n        ></ng-template>\n    </tui-doc-documentation>\n    <ng-template #withMode>\n        <tui-accordion\n            class=\"tui-space_top-6\"\n            [tuiMode]=\"null\"\n        >\n            <tui-accordion-item>\n                Default\n                <tui-doc-documentation *tuiAccordionItemContent>\n                    <ng-container *ngFor=\"let variable of keys\">\n                        <ng-template\n                            *ngIf=\"!isDark(variable) && !isLight(variable)\"\n                            [documentationPropertyName]=\"variable\"\n                            [documentationPropertyType]=\"getType(variable)\"\n                            [documentationPropertyValue]=\"getVariable(variable)\"\n                            (documentationPropertyValueChange)=\"onModelChange(variable, $event)\"\n                        ></ng-template>\n                    </ng-container>\n                </tui-doc-documentation>\n            </tui-accordion-item>\n            <tui-accordion-item *ngIf=\"hasLight\">\n                Light\n                <tui-doc-documentation *tuiAccordionItemContent>\n                    <ng-container *ngFor=\"let variable of keys\">\n                        <ng-template\n                            *ngIf=\"isLight(variable)\"\n                            [documentationPropertyName]=\"variable\"\n                            [documentationPropertyType]=\"getType(variable)\"\n                            [documentationPropertyValue]=\"getVariable(variable)\"\n                            (documentationPropertyValueChange)=\"onModelChange(variable, $event)\"\n                        ></ng-template>\n                    </ng-container>\n                </tui-doc-documentation>\n            </tui-accordion-item>\n            <tui-accordion-item *ngIf=\"hasLight\">\n                Dark\n                <tui-doc-documentation *tuiAccordionItemContent>\n                    <ng-container *ngFor=\"let variable of keys\">\n                        <ng-template\n                            *ngIf=\"isDark(variable)\"\n                            [documentationPropertyName]=\"variable\"\n                            [documentationPropertyType]=\"getType(variable)\"\n                            [documentationPropertyValue]=\"getVariable(variable)\"\n                            (documentationPropertyValueChange)=\"onModelChange(variable, $event)\"\n                        ></ng-template>\n                    </ng-container>\n                </tui-doc-documentation>\n            </tui-accordion-item>\n        </tui-accordion>\n    </ng-template>\n</ng-template>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiDocDemoModule, TuiDocDocumentationModule} from '@taiga-ui/addon-doc';\nimport {TuiModeModule} from '@taiga-ui/core';\nimport {TuiAccordionModule} from '@taiga-ui/kit';\n\nimport {TuiCustomizationComponent} from './customization.component';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        TuiDocDocumentationModule,\n        TuiDocDemoModule,\n        TuiModeModule,\n        TuiAccordionModule,\n    ],\n    declarations: [TuiCustomizationComponent],\n    exports: [TuiCustomizationComponent],\n})\nexport class TuiCustomizationModule {}\n","import {forwardRef, InjectionToken, Provider} from '@angular/core';\nimport {WINDOW} from '@ng-web-apis/common';\nimport {TuiDestroyService} from '@taiga-ui/cdk';\nimport {TuiModeDirective} from '@taiga-ui/core';\n\nimport {CSS_VARS} from '../../tokens/css-vars';\nimport {TuiCustomizationComponent} from './customization.component';\n\nexport const TUI_DOC_CUSTOMIZATION_VARS = new InjectionToken<Record<string, string>>(\n    `CSS variables map`,\n);\nexport const TUI_DOC_CUSTOMIZATION_PROVIDERS: Provider[] = [\n    TuiDestroyService,\n    {\n        provide: TuiModeDirective,\n        useExisting: forwardRef(() => TuiCustomizationComponent),\n    },\n    {\n        provide: TUI_DOC_CUSTOMIZATION_VARS,\n        deps: [WINDOW, CSS_VARS],\n        useFactory: varsFactory,\n    },\n];\n\nexport function varsFactory(\n    windowRef: Window,\n    variables: readonly string[],\n): Record<string, string> {\n    const styles = windowRef.getComputedStyle(windowRef.document.documentElement);\n\n    return variables.reduce(\n        (dictionary, variable) => ({\n            ...dictionary,\n            [variable]: styles.getPropertyValue(variable).trim(),\n        }),\n        {},\n    );\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {AbstractTuiControl, TuiNativeFocusableElement} from '@taiga-ui/cdk';\nimport {TuiPrimitiveTextfieldComponent} from '@taiga-ui/core';\n\n@Component({\n    selector: `tui-primitive-textfield-example-1`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiPrimitiveTextfieldExample1 extends AbstractTuiControl<string> {\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    private isPasswordHidden = true;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        return this.computedDisabled || !this.textfield\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get icon(): string {\n        return this.isPasswordHidden ? `tuiIconHideLarge` : `tuiIconShowLarge`;\n    }\n\n    get hint(): string {\n        return this.isPasswordHidden ? `Show password` : `Hide password`;\n    }\n\n    get inputType(): string {\n        return this.isPasswordHidden ? `password` : `text`;\n    }\n\n    onValueChange(textValue: string): void {\n        this.updateValue(textValue);\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    togglePasswordVisibility(): void {\n        this.isPasswordHidden = !this.isPasswordHidden;\n    }\n\n    protected getFallbackValue(): string {\n        return ``;\n    }\n}\n","<tui-primitive-textfield\n    [invalid]=\"computedInvalid\"\n    [focusable]=\"focusable\"\n    [disabled]=\"disabled\"\n    [readOnly]=\"readOnly\"\n    [iconContent]=\"iconContent\"\n    [value]=\"value\"\n    (valueChange)=\"onValueChange($event)\"\n    (focusedChange)=\"onFocused($event)\"\n>\n    <ng-content></ng-content>\n    <input\n        tuiTextfield\n        [type]=\"inputType\"\n    />\n</tui-primitive-textfield>\n\n<ng-template #iconContent>\n    <tui-svg\n        tuiHintId=\"not_required\"\n        class=\"icon\"\n        [tuiHint]=\"hintContent\"\n        [src]=\"icon\"\n        (click)=\"togglePasswordVisibility()\"\n    ></tui-svg>\n</ng-template>\n\n<ng-template #hintContent>{{ hint }}</ng-template>\n","import {\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {AbstractTuiControl, TuiNativeFocusableElement} from '@taiga-ui/cdk';\nimport {\n    TuiPrimitiveTextfieldComponent,\n    tuiPrimitiveTextfieldOptionsProvider,\n} from '@taiga-ui/core';\n\n@Component({\n    selector: `tui-primitive-textfield-example-2`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n    providers: [\n        tuiPrimitiveTextfieldOptionsProvider({\n            iconCleaner: `tuiIconChevronUp`,\n        }),\n    ],\n})\nexport class TuiPrimitiveTextfieldExample2 extends AbstractTuiControl<string> {\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        return this.computedDisabled || !this.textfield\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    onValueChange(textValue: string): void {\n        this.updateValue(textValue);\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    protected getFallbackValue(): string {\n        return ``;\n    }\n}\n","<form\n    tuiTextfieldSize=\"m\"\n    class=\"b-form\"\n    [tuiTextfieldLabelOutside]=\"true\"\n    [tuiTextfieldCleaner]=\"true\"\n>\n    <label\n        tuiLabel\n        i18n-label\n        label=\"Modified cleaner icon\"\n    >\n        <tui-primitive-textfield\n            [value]=\"value\"\n            (valueChange)=\"onValueChange($event)\"\n            (focusedChange)=\"onFocused($event)\"\n        >\n            Type an email\n            <input\n                tuiTextfield\n                type=\"email\"\n            />\n        </tui-primitive-textfield>\n    </label>\n\n    <label\n        tuiLabel\n        i18n-label\n        label=\"Override modified cleaner icon\"\n        class=\"tui-space_top-4\"\n    >\n        <tui-primitive-textfield\n            [value]=\"value\"\n            [iconCleaner]=\"iconCleaner\"\n            (valueChange)=\"onValueChange($event)\"\n            (focusedChange)=\"onFocused($event)\"\n        >\n            Type an email\n            <input\n                tuiTextfield\n                type=\"email\"\n            />\n        </tui-primitive-textfield>\n    </label>\n</form>\n\n<ng-template #iconCleaner>\n    <tui-svg src=\"tuiIconDraft\"></tui-svg>\n</ng-template>\n","import {Component, forwardRef, ViewChild} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\nimport {\n    TuiAutofillFieldName,\n    TuiContextWithImplicit,\n    TuiInputModeT,\n    TuiInputTypeT,\n} from '@taiga-ui/cdk';\nimport {\n    TuiDirection,\n    TuiHintModeT,\n    TuiHorizontalDirection,\n    TuiSizeL,\n    TuiSizeS,\n} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nimport {ABSTRACT_PROPS_ACCESSOR} from '../abstract/inherited-documentation/abstract-props-accessor';\nimport {AbstractExampleTuiInteractive} from '../abstract/interactive';\n\nconst CUSTOM_SVG = `<svg xmlns=\"http://www.w3.org/2000/svg\"\nwidth=\"24px\"\nheight=\"24px\"\nviewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M10,17v1c0,1.1,0.9,2,2,2h0c1.1,0,2-0.9,2-2l0-1h3.6L17,15.2V11c0-2.2-1.4-4-3-4h-1V5\n   c0-0.6-0.4-1-1-1s-1,0.4-1,1v2h-1c-1.3,0-3,1.9-3,4v4.2L6.4,17H10z M3.6,19L5,14.8V11c0-2.7,1.9-5.2,4-5.8V5c0-1.7,1.3-3,3-3\n   s3,1.3,3,3v0.1c2.3,0.6,4,3,4,5.9v3.8l1.4,4.2h-4.5c-0.4,1.8-2,3-3.9,3c-1.8,0-3.4-1.2-3.9-3H3.6z\"/>\n</svg>`;\nconst CUSTOM_SVG_NAME = `Bell`;\n\n@Component({\n    selector: `example-tui-primitive-textfield`,\n    templateUrl: `./primitive-textfield.template.html`,\n    styleUrls: [`./primitive-textfield.style.less`],\n    changeDetection,\n    providers: [\n        {\n            provide: ABSTRACT_PROPS_ACCESSOR,\n            useExisting: forwardRef(() => ExampleTuiPrimitiveTextfieldComponent),\n        },\n    ],\n})\nexport class ExampleTuiPrimitiveTextfieldComponent extends AbstractExampleTuiInteractive {\n    @ViewChild(`interactiveContent`)\n    private readonly interactiveIcon: PolymorpheusContent<\n        TuiContextWithImplicit<TuiSizeS | TuiSizeL>\n    > = ``;\n\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n        LESS: import(`!!raw-loader!./examples/1/index.less`),\n    };\n\n    readonly example2: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/2/index.ts`),\n        HTML: import(`!!raw-loader!./examples/2/index.html`),\n    };\n\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n\n    readonly themes = [`Taiga UI`, `Bootstrap`, `Material`];\n    theme = this.themes[0];\n\n    readonly iconVariants = [``, `tuiIconSearch`, `Interactive content`];\n\n    selectedIcon = this.iconVariants[0];\n\n    readonly iconAlignVariants: readonly TuiHorizontalDirection[] = [`left`, `right`];\n\n    iconAlign: TuiHorizontalDirection = this.iconAlignVariants[1];\n\n    readonly typeVariants: readonly TuiInputTypeT[] = [\n        `text`,\n        `email`,\n        `password`,\n        `tel`,\n        `url`,\n    ];\n\n    type: TuiInputTypeT = `text`;\n\n    cleaner = false;\n\n    editable = true;\n\n    filler = ``;\n\n    prefix = ``;\n\n    postfix = ``;\n\n    readonly maxLengthVariants: readonly number[] = [10];\n\n    maxLength = null;\n\n    autocompleteVariants = [\n        `off`,\n        `cc-name`,\n        `cc-number`,\n        `cc-exp-month`,\n        `cc-exp-year`,\n        `cc-type`,\n        `given-name`,\n        `additional-name`,\n        `family-name`,\n        `username`,\n        `email`,\n        `street-address`,\n        `postal-code`,\n        `country-name`,\n    ];\n\n    autocomplete: TuiAutofillFieldName | '' = ``;\n\n    readonly inputModeVariants: readonly TuiInputModeT[] = [`text`, `numeric`];\n\n    inputMode = this.inputModeVariants[0];\n\n    readonly customContentVariants = [CUSTOM_SVG_NAME, `<span>LongTextContent</span>`];\n\n    customContentSelected = null;\n\n    password = ``;\n\n    example2Value = `mail@example.com`;\n\n    value = ``;\n\n    exampleText = ``;\n\n    disabled = false;\n\n    readOnly = false;\n\n    labelOutside = false;\n\n    readonly sizeVariants: ReadonlyArray<TuiSizeS | TuiSizeL> = [`s`, `m`, `l`];\n\n    size = this.sizeVariants[2];\n\n    readonly hintContentVariants: readonly string[] = [`Ivan Ivanov`];\n\n    readonly hintDirectionVariants: readonly TuiDirection[] = [\n        `left`,\n        `right`,\n        `bottom-left`,\n        `bottom-right`,\n        `bottom-middle`,\n        `top-left`,\n        `top-right`,\n        `top-middle`,\n    ];\n\n    readonly hintModeVariants: readonly TuiHintModeT[] = [`error`, `onDark`];\n\n    invalid = false;\n\n    hintContent = null;\n\n    hintDirection: TuiDirection = this.hintDirectionVariants[2];\n\n    hintMode: TuiHintModeT | null = null;\n\n    get customContent(): string | null {\n        return this.customContentSelected === CUSTOM_SVG_NAME\n            ? CUSTOM_SVG\n            : this.customContentSelected;\n    }\n\n    get iconContent(): PolymorpheusContent<TuiContextWithImplicit<TuiSizeS | TuiSizeL>> {\n        if (this.selectedIcon === ``) {\n            return ``;\n        }\n\n        return this.interactiveIcon && this.selectedIcon !== `tuiIconSearch`\n            ? this.interactiveIcon\n            : `tuiIconSearch`;\n    }\n\n    get isBootstrap(): boolean {\n        return this.theme === this.themes[1];\n    }\n\n    get isMaterial(): boolean {\n        return this.theme === this.themes[2];\n    }\n\n    get placeholder(): string {\n        return this.isBootstrap ? `Type a value` : `Theming sample`;\n    }\n\n    get customizationSize(): TuiSizeS | TuiSizeL {\n        return this.isBootstrap ? `s` : `l`;\n    }\n\n    onClick(): void {\n        console.info(`Interactive icon clicked`);\n    }\n}\n","<tui-doc-page\n    header=\"PrimitiveTextfield\"\n    package=\"CORE\"\n    type=\"components\"\n>\n    <ng-template pageTab>\n        <p i18n>\n            PrimitiveTextfield is a flexible string input that can be used as a base for complex inputs. Use it as a\n            basis for other components.\n\n            <strong>Does not work with Angular forms</strong>\n        </p>\n\n        <tui-doc-example\n            id=\"example-size\"\n            i18n-heading\n            heading=\"sizes\"\n            [content]=\"example1\"\n        >\n            <tui-notification class=\"tui-space_bottom-4 b-form\">\n                Simplified version of\n                <a\n                    tuiLink\n                    routerLink=\"/components/input-password\"\n                >\n                    <code>InputPassword</code>\n                </a>\n            </tui-notification>\n            <tui-primitive-textfield-example-1\n                class=\"b-form\"\n                [(ngModel)]=\"password\"\n            >\n                Type a password\n            </tui-primitive-textfield-example-1>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"options\"\n            i18n-heading\n            heading=\"Options\"\n            [content]=\"example2\"\n        >\n            <tui-notification class=\"tui-space_bottom-4 b-form\">\n                If you need to set some attributes or listen to events on native\n                <code>input</code>\n                , you can put it inside with\n                <code>Textfield</code>\n                directive as shown below\n            </tui-notification>\n            <tui-primitive-textfield-example-2 [(ngModel)]=\"example2Value\"></tui-primitive-textfield-example-2>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        <tui-doc-demo>\n            <tui-primitive-textfield\n                [focusable]=\"focusable\"\n                [tuiTextfieldAutocomplete]=\"autocomplete\"\n                [tuiTextfieldCleaner]=\"cleaner\"\n                [tuiTextfieldCustomContent]=\"customContent\"\n                [tuiTextfieldInputMode]=\"inputMode\"\n                [tuiTextfieldMaxLength]=\"maxLength\"\n                [tuiTextfieldExampleText]=\"exampleText\"\n                [tuiTextfieldLabelOutside]=\"labelOutside\"\n                [tuiTextfieldSize]=\"size\"\n                [tuiTextfieldType]=\"type\"\n                [pseudoPressed]=\"pseudoPressed\"\n                [pseudoFocused]=\"pseudoFocused\"\n                [pseudoHovered]=\"pseudoHovered\"\n                [disabled]=\"disabled\"\n                [editable]=\"editable\"\n                [filler]=\"filler\"\n                [iconAlign]=\"iconAlign\"\n                [iconContent]=\"iconContent\"\n                [readOnly]=\"readOnly\"\n                [prefix]=\"prefix\"\n                [postfix]=\"postfix\"\n                [invalid]=\"invalid\"\n                [tuiHintContent]=\"hintContent\"\n                [tuiHintDirection]=\"hintDirection\"\n                [tuiHintMode]=\"hintMode\"\n                [(value)]=\"value\"\n            >\n                Component label\n            </tui-primitive-textfield>\n        </tui-doc-demo>\n        <ng-template\n            #template\n            let-item\n        >\n            <tui-avatar\n                size=\"xs\"\n                class=\"avatar\"\n                [text]=\"item\"\n            ></tui-avatar>\n            {{ item }}\n        </ng-template>\n        <ng-template #interactiveContent>\n            <tui-svg\n                src=\"tuiIconCalendarLarge\"\n                class=\"icon-button\"\n                (click)=\"onClick()\"\n            ></tui-svg>\n        </ng-template>\n        <tui-doc-documentation>\n            <ng-template\n                i18n\n                documentationPropertyName=\"disabled\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"disabled\"\n            >\n                Disabled state\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"editable\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"editable\"\n            >\n                Native input allows inputting\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"filler\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"string\"\n                [(documentationPropertyValue)]=\"filler\"\n            >\n                Gray background text as a hint (e.g. HH:MM:SS for time)\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"iconContent\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"PolymorpheusContent\"\n                [documentationPropertyValues]=\"iconVariants\"\n                [(documentationPropertyValue)]=\"selectedIcon\"\n            >\n                Icon content. If content is a string, it is used as stringified svg or a name of icon registered in\n                <a\n                    tuiLink\n                    routerLink=\"/services/svg-service\"\n                >\n                    <code>SvgService</code>\n                </a>\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"iconAlign\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiHorizontalDirection\"\n                [documentationPropertyValues]=\"iconAlignVariants\"\n                [(documentationPropertyValue)]=\"iconAlign\"\n            >\n                Icon align\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"prefix\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"string\"\n                [(documentationPropertyValue)]=\"prefix\"\n            >\n                Uneditable text before value. For example, currency symbol in\n                <a\n                    tuiLink\n                    routerLink=\"/components/input-number\"\n                >\n                    <code>InputNumber</code>\n                </a>\n                .\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"postfix\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"string\"\n                [(documentationPropertyValue)]=\"postfix\"\n            >\n                Uneditable text after value. For example, currency symbol in\n                <a\n                    tuiLink\n                    routerLink=\"/components/input-number\"\n                >\n                    <code>InputNumber</code>\n                </a>\n                .\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"readOnly\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"readOnly\"\n            >\n                Component is read only\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"invalid\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"invalid\"\n            >\n                Invalid state\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"value\"\n                documentationPropertyMode=\"input-output\"\n                documentationPropertyType=\"string\"\n                [(documentationPropertyValue)]=\"value\"\n            >\n                Value\n            </ng-template>\n        </tui-doc-documentation>\n        <hint-controller-documentation></hint-controller-documentation>\n        <textfield-controller-documentation></textfield-controller-documentation>\n        <inherited-documentation></inherited-documentation>\n    </ng-template>\n\n    <ng-template pageTab>\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Import\n                    <code>TuiPrimitiveTextfieldModule</code>\n                    into a module where you want to use our component\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Add to the template:</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n\n    <!--    TODO: Possibly remove-->\n    <!--    <ng-template i18n-pageTab pageTab=\"Theming\">-->\n    <!--        <tui-customization>-->\n    <!--            <bootstrap *ngIf=\"isBootstrap\"></bootstrap>-->\n    <!--            <material *ngIf=\"isMaterial\"></material>-->\n    <!--            <tui-radio-list-->\n    <!--                size=\"l\"-->\n    <!--                orientation=\"horizontal\"-->\n    <!--                class=\"tui-space_bottom-4\"-->\n    <!--                [items]=\"themes\"-->\n    <!--                [(ngModel)]=\"theme\"-->\n    <!--            ></tui-radio-list>-->\n    <!--            <ng-template #label i18n>Theming sample</ng-template>-->\n    <!--            <label-->\n    <!--                tuiLabel-->\n    <!--                class=\"theme-wrapper label\"-->\n    <!--                [label]=\"isBootstrap ? label : ''\"-->\n    <!--            >-->\n    <!--                <tui-primitive-textfield-->\n    <!--                    value=\"Value\"-->\n    <!--                    tuiTextfieldExampleText=\"Example text\"-->\n    <!--                    class=\"input\"-->\n    <!--                    [tuiTextfieldCleaner]=\"!isBootstrap\"-->\n    <!--                    [tuiTextfieldLabelOutside]=\"isBootstrap\"-->\n    <!--                    [tuiTextfieldSize]=\"customizationSize\"-->\n    <!--                >-->\n    <!--                    {{ placeholder }}-->\n    <!--                </tui-primitive-textfield>-->\n    <!--            </label>-->\n    <!--        </tui-customization>-->\n    <!--    </ng-template>-->\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {\n    TuiButtonModule,\n    TuiHintControllerModule,\n    TuiHintModule,\n    TuiLabelModule,\n    TuiLinkModule,\n    TuiNotificationModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TuiAvatarModule, TuiRadioListModule} from '@taiga-ui/kit';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiCustomizationModule} from '../../app/customization/customization.module';\nimport {ThemesModule} from '../../themes/themes.module';\nimport {HintControllerDocumentationModule} from '../abstract/hint-controller-documentation/hint-controller-documentation.module';\nimport {InheritedDocumentationModule} from '../abstract/inherited-documentation/inherited-documentation.module';\nimport {TextfieldControllerDocumentationModule} from '../abstract/textfield-controller-documentation/textfield-controller-documentation.module';\nimport {TuiPrimitiveTextfieldExample1} from './examples/1';\nimport {TuiPrimitiveTextfieldExample2} from './examples/2';\nimport {ExampleTuiPrimitiveTextfieldComponent} from './primitive-textfield.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        InheritedDocumentationModule,\n        HintControllerDocumentationModule,\n        TextfieldControllerDocumentationModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiNotificationModule,\n        TuiHintControllerModule,\n        TuiAvatarModule,\n        TuiLinkModule,\n        TuiSvgModule,\n        TuiButtonModule,\n        PolymorpheusModule,\n        TuiHintModule,\n        TuiRadioListModule,\n        TuiCustomizationModule,\n        TuiLabelModule,\n        ThemesModule,\n        TuiAddonDocModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiPrimitiveTextfieldComponent)),\n    ],\n    declarations: [\n        ExampleTuiPrimitiveTextfieldComponent,\n        TuiPrimitiveTextfieldExample1,\n        TuiPrimitiveTextfieldExample2,\n    ],\n    exports: [ExampleTuiPrimitiveTextfieldComponent],\n})\nexport class ExampleTuiPrimitiveTextfieldModule {}\n","import {Component, ViewEncapsulation} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {AbstractTuiThemeSwitcher} from '@taiga-ui/cdk';\n\n// @dynamic\n@Component({\n    selector: `bootstrap`,\n    styleUrls: [`./bootstrap.style.less`],\n    template: ``,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection,\n})\nexport class BootstrapComponent extends AbstractTuiThemeSwitcher {}\n","import {Component, ViewEncapsulation} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {AbstractTuiThemeSwitcher} from '@taiga-ui/cdk';\n\n// @dynamic\n@Component({\n    selector: `material`,\n    styleUrls: [`./material.style.less`],\n    template: ``,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection,\n})\nexport class MaterialComponent extends AbstractTuiThemeSwitcher {}\n","import {NgModule} from '@angular/core';\n\nimport {BootstrapComponent} from './bootstrap/bootstrap.component';\nimport {MaterialComponent} from './material/material.component';\n\n@NgModule({\n    declarations: [MaterialComponent, BootstrapComponent],\n    exports: [MaterialComponent, BootstrapComponent],\n})\nexport class ThemesModule {}\n","import {InjectionToken} from '@angular/core';\n\nexport const CSS_VARS = new InjectionToken<readonly string[]>(\n    `CSS vars list for customization`,\n    {\n        factory: () => [],\n    },\n);\n"],"sourceRoot":"webpack:///"}