{"version":3,"sources":["../addon-commerce/components/card/card.component.ts","../addon-commerce/components/card/card.template.html","../addon-commerce/components/card/card.module.ts","../addon-commerce/components/card/index.ts","../addon-commerce/components/index.ts","../addon-commerce/components/input-card-grouped/index.ts","../addon-commerce/components/input-card-grouped/input-card-grouped.component.ts","../addon-commerce/components/input-card-grouped/input-card-grouped.template.html","../addon-commerce/components/input-card-grouped/input-card-grouped.module.ts","../addon-commerce/components/input-card-grouped/input-card-grouped.providers.ts","../addon-commerce/components/input-card/index.ts","../addon-commerce/components/input-card/input-card.component.ts","../addon-commerce/components/input-card/input-card.template.html","../addon-commerce/components/input-card/input-card.module.ts","../addon-commerce/components/input-cvc/index.ts","../addon-commerce/components/input-cvc/input-cvc.component.ts","../addon-commerce/components/input-cvc/input-cvc.template.html","../addon-commerce/components/input-cvc/input-cvc.module.ts","../addon-commerce/components/input-expire/index.ts","../addon-commerce/components/input-expire/input-expire.component.ts","../addon-commerce/components/input-expire/input-expire.template.html","../addon-commerce/components/input-expire/input-expire.module.ts","../addon-commerce/components/money/index.ts","../addon-commerce/components/money/money-options.ts","../addon-commerce/components/money/money.component.ts","../addon-commerce/components/money/money.template.html","../addon-commerce/components/money/money.module.ts","../addon-commerce/components/money/pipes/fraction-part.pipe.ts","../addon-commerce/components/money/pipes/integer-part.pipe.ts","../addon-commerce/components/money/pipes/sign-symbol.pipe.ts","../addon-commerce/components/money/utils/format-fraction-part.ts","../addon-commerce/components/money/utils/format-sign-symbol.ts","../addon-commerce/constants/card-holder-mask.ts","../addon-commerce/constants/card-mask.ts","../addon-commerce/constants/default-card-validator.ts","../addon-commerce/constants/index.ts","../addon-commerce/enums/currency-code.ts","../addon-commerce/enums/currency.ts","../addon-commerce/enums/index.ts","../addon-commerce/enums/money-sign.ts","../addon-commerce/enums/payment-system.ts","../addon-commerce/index.ts","../addon-commerce/pipes/currency/currency.module.ts","../addon-commerce/pipes/currency/currency.pipe.ts","../addon-commerce/pipes/format-card/format-card.module.ts","../addon-commerce/pipes/format-card/format-card.pipe.ts","../addon-commerce/pipes/index.ts","../addon-commerce/tokens/i18n.ts","../addon-commerce/tokens/index.ts","../addon-commerce/utils/create-auto-corrected-expire-pipe.ts","../addon-commerce/utils/format-currency.ts","../addon-commerce/utils/get-currency-symbol.ts","../addon-commerce/utils/get-payment-system.ts","../addon-commerce/utils/index.ts","../addon-commerce/utils/is-card-length-valid.ts","../addon-commerce/utils/is-card-number-valid.ts","../addon-commerce/utils/is-expire-valid.ts","../addon-commerce/validators/card-expire.validator.ts","../addon-commerce/validators/card-number.validator.ts","../addon-commerce/validators/index.ts","../addon-commerce/validators/luhn.validator.ts"],"names":[],"mappings":"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","file":"default~charts-arc-chart-arc-chart-module~charts-axes-axes-module~charts-bar-chart-bar-chart-module~~2b94a250.js","sourcesContent":["import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\nimport {TuiPaymentSystem, TuiPaymentSystemT} from '@taiga-ui/addon-commerce/enums';\nimport {tuiDefaultProp} from '@taiga-ui/cdk';\nimport {TuiSizeS} from '@taiga-ui/core';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function cardNumberAssertion({length}: string): boolean {\n    return !length || length === 4;\n}\n\nexport const cardNumberAssertionMessage = `cardNumber should contain 4 symbols`;\n\nconst icons = {\n    [TuiPaymentSystem.Mir]: `tuiIconMirMono`,\n    [TuiPaymentSystem.Visa]: `tuiIconVisaMono`,\n    [TuiPaymentSystem.Electron]: `tuiIconElectronMono`,\n    [TuiPaymentSystem.Mastercard]: `tuiIconMastercard`,\n    [TuiPaymentSystem.Maestro]: `tuiIconMaestro`,\n};\n\n@Component({\n    selector: `tui-card`,\n    templateUrl: `card.template.html`,\n    styleUrls: [`./card.style.less`],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiCardComponent {\n    @Input()\n    @HostBinding(`class._active`)\n    @tuiDefaultProp()\n    active = false;\n\n    @Input()\n    @tuiDefaultProp()\n    brandLogo = ``;\n\n    @Input()\n    @tuiDefaultProp(cardNumberAssertion, cardNumberAssertionMessage)\n    cardNumber = ``;\n\n    @Input()\n    @tuiDefaultProp()\n    paymentSystem: TuiPaymentSystemT | TuiPaymentSystem | null = null;\n\n    @Input()\n    @HostBinding(`attr.data-size`)\n    @tuiDefaultProp()\n    size: TuiSizeS = `m`;\n\n    get hasBrandLogo(): boolean {\n        return !!this.brandLogo && this.size === `m`;\n    }\n\n    get paymentSystemLogo(): string {\n        return this.paymentSystem ? icons[this.paymentSystem] : ``;\n    }\n}\n","<div class=\"t-front\">\n    <tui-svg\n        *ngIf=\"hasBrandLogo\"\n        class=\"t-brand-logo\"\n        [src]=\"brandLogo\"\n    ></tui-svg>\n    <span class=\"t-number\">{{ cardNumber }}</span>\n    <tui-svg\n        *ngIf=\"!!paymentSystem\"\n        class=\"t-payment-system-logo\"\n        [src]=\"paymentSystemLogo\"\n    ></tui-svg>\n</div>\n<div class=\"t-back\"></div>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiSvgModule} from '@taiga-ui/core';\n\nimport {TuiCardComponent} from './card.component';\n\n@NgModule({\n    imports: [CommonModule, TuiSvgModule],\n    declarations: [TuiCardComponent],\n    exports: [TuiCardComponent],\n})\nexport class TuiCardModule {}\n","export * from './card.component';\nexport * from './card.module';\n","export * from '@taiga-ui/addon-commerce/components/card';\nexport * from '@taiga-ui/addon-commerce/components/input-card';\nexport * from '@taiga-ui/addon-commerce/components/input-card-grouped';\nexport * from '@taiga-ui/addon-commerce/components/input-cvc';\nexport * from '@taiga-ui/addon-commerce/components/input-expire';\nexport * from '@taiga-ui/addon-commerce/components/money';\n","export * from './input-card-grouped.component';\nexport * from './input-card-grouped.module';\nexport * from './input-card-grouped.providers';\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    Self,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {TUI_CARD_MASK, tuiDefaultCardValidator} from '@taiga-ui/addon-commerce/constants';\nimport {TuiPaymentSystem} from '@taiga-ui/addon-commerce/enums';\nimport {TuiCard} from '@taiga-ui/addon-commerce/interfaces';\nimport {TuiCodeCVCLength} from '@taiga-ui/addon-commerce/types';\nimport {\n    getPaymentSystem,\n    tuiCreateAutoCorrectedExpirePipe,\n} from '@taiga-ui/addon-commerce/utils';\nimport {\n    AbstractTuiNullableControl,\n    isNativeFocused,\n    isNativeFocusedIn,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    tuiAssertIsHTMLElement,\n    TuiBooleanHandler,\n    TuiCreditCardAutofillName,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    tuiPure,\n    tuiRequiredSetter,\n} from '@taiga-ui/cdk';\nimport {\n    MODE_PROVIDER,\n    TUI_DATA_LIST_HOST,\n    TUI_DIGIT_REGEXP,\n    TUI_MODE,\n    TUI_NON_DIGIT_REGEXP,\n    TUI_TEXTFIELD_APPEARANCE,\n    TuiBrightness,\n    TuiDataListComponent,\n    TuiDataListDirective,\n    TuiDataListHost,\n    TuiTextMaskOptions,\n} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {TextMaskConfig} from 'angular2-text-mask';\nimport {Observable} from 'rxjs';\n\nimport {\n    TUI_INPUT_CARD_GROUPED_TEXTS,\n    TuiCardGroupedTexts,\n} from './input-card-grouped.providers';\n\nconst STUB: TuiCard = {\n    card: ``,\n    expire: ``,\n    cvc: ``,\n};\nconst ICONS = {\n    [TuiPaymentSystem.Mir]: `tuiIconMir`,\n    [TuiPaymentSystem.Visa]: `tuiIconVisa`,\n    [TuiPaymentSystem.Electron]: `tuiIconElectron`,\n    [TuiPaymentSystem.Mastercard]: `tuiIconMastercard`,\n    [TuiPaymentSystem.Maestro]: `tuiIconMaestro`,\n};\n\n// @dynamic\n@Component({\n    selector: `tui-input-card-grouped`,\n    templateUrl: `./input-card-grouped.template.html`,\n    styleUrls: [`./input-card-grouped.style.less`],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        MODE_PROVIDER,\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputCardGroupedComponent),\n        },\n        {\n            provide: TUI_DATA_LIST_HOST,\n            useExisting: forwardRef(() => TuiInputCardGroupedComponent),\n        },\n    ],\n    host: {\n        '($.data-mode.attr)': `mode$`,\n        'data-size': `l`,\n    },\n})\nexport class TuiInputCardGroupedComponent\n    extends AbstractTuiNullableControl<TuiCard>\n    implements TuiFocusableElementAccessor, TuiDataListHost<Partial<TuiCard>>\n{\n    @ViewChild(`inputCard`)\n    private readonly inputCard?: ElementRef<HTMLInputElement>;\n\n    @ViewChild(`inputExpire`)\n    private readonly inputExpire?: ElementRef<HTMLInputElement>;\n\n    @ViewChild(`inputCVC`)\n    private readonly inputCVC?: ElementRef<HTMLInputElement>;\n\n    private expireInert = false;\n\n    @Input()\n    @tuiDefaultProp()\n    autocompleteEnabled = false;\n\n    @Input()\n    @tuiDefaultProp()\n    cardSrc: PolymorpheusContent | null = null; // TODO: 3.0 will be deleted `null` in v3.0\n\n    @Input()\n    @tuiDefaultProp()\n    exampleText = `0000 0000 0000 0000`;\n\n    @Input()\n    @tuiDefaultProp()\n    cardValidator: TuiBooleanHandler<string> = tuiDefaultCardValidator;\n\n    @Input()\n    @tuiRequiredSetter()\n    set codeLength(length: TuiCodeCVCLength) {\n        this.exampleTextCVC = `0`.repeat(length);\n        this.maskCVC = {\n            mask: new Array(length).fill(TUI_DIGIT_REGEXP),\n            guide: false,\n        };\n    }\n\n    @Output()\n    readonly autofilledChange = new EventEmitter<boolean>();\n\n    @Output()\n    readonly binChange = new EventEmitter<string | null>();\n\n    @ContentChild(TuiDataListDirective, {read: TemplateRef})\n    readonly dropdown: PolymorpheusContent = ``;\n\n    @ContentChild(TuiDataListComponent)\n    readonly datalist?: TuiDataListComponent<TuiCard>;\n\n    exampleTextCVC = `000`;\n\n    maskCVC: TextMaskConfig = {\n        mask: new Array(3).fill(TUI_DIGIT_REGEXP),\n        guide: false,\n    };\n\n    readonly maskCard: TextMaskConfig = {\n        mask: TUI_CARD_MASK,\n        guide: false,\n        pipe: conformedValue => conformedValue.trim(),\n    };\n\n    readonly maskExpire: TextMaskConfig = {\n        mask: [\n            TUI_DIGIT_REGEXP,\n            TUI_DIGIT_REGEXP,\n            `/`,\n            TUI_DIGIT_REGEXP,\n            TUI_DIGIT_REGEXP,\n        ],\n        pipe: tuiCreateAutoCorrectedExpirePipe(),\n        guide: false,\n    } as TuiTextMaskOptions as unknown as TextMaskConfig;\n\n    open = false;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>,\n        @Inject(TUI_MODE) readonly mode$: Observable<TuiBrightness | null>,\n        @Inject(TUI_INPUT_CARD_GROUPED_TEXTS)\n        readonly cardGroupedTexts$: Observable<TuiCardGroupedTexts>,\n        @Inject(TUI_TEXTFIELD_APPEARANCE)\n        readonly appearance: string,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.inputCard ? this.inputCard.nativeElement : null;\n    }\n\n    get focused(): boolean {\n        return this.open || isNativeFocusedIn(this.elementRef.nativeElement);\n    }\n\n    get card(): string {\n        return this.value?.card ?? ``;\n    }\n\n    get expire(): string {\n        return this.value?.expire ?? ``;\n    }\n\n    get cvc(): string {\n        return this.value?.cvc ?? ``;\n    }\n\n    get hasCleaner(): boolean {\n        return !!this.value?.card?.trim() && !this.readOnly && !this.computedDisabled;\n    }\n\n    get hasDropdown(): boolean {\n        return !!this.dropdown;\n    }\n\n    get defaultIcon(): string | null {\n        const {paymentSystem} = this;\n\n        return paymentSystem && ICONS[paymentSystem];\n    }\n\n    get icon(): PolymorpheusContent | null {\n        return this.cardSrc ?? this.defaultIcon;\n    }\n\n    get bin(): string | null {\n        return !this.value || this.value.card.length < 6\n            ? null\n            : this.value.card.slice(0, 6);\n    }\n\n    get placeholderRaised(): boolean {\n        return (this.computedFocused && !this.readOnly) || this.hasCardNumber;\n    }\n\n    get hasCardNumber(): boolean {\n        return !!this.value?.card?.trim();\n    }\n\n    get idCard(): string {\n        return `${this.id}_card`;\n    }\n\n    get idExpire(): string {\n        return `${this.id}_expire`;\n    }\n\n    get idCVC(): string {\n        return `${this.id}_cvc`;\n    }\n\n    get isCardCollapsed(): boolean {\n        return this.isFocusable(this.card) && !this.cardFocused;\n    }\n\n    get autocompleteCard(): TuiCreditCardAutofillName {\n        return this.autocompleteEnabled\n            ? TuiCreditCardAutofillName.CcNumber\n            : TuiCreditCardAutofillName.Off;\n    }\n\n    get autocompleteExpire(): TuiCreditCardAutofillName {\n        return this.autocompleteEnabled\n            ? TuiCreditCardAutofillName.CcExp\n            : TuiCreditCardAutofillName.Off;\n    }\n\n    get autocompleteCVC(): TuiCreditCardAutofillName {\n        return this.autocompleteEnabled\n            ? TuiCreditCardAutofillName.CcCsc\n            : TuiCreditCardAutofillName.Off;\n    }\n\n    // Safari expiration date autofill workaround\n    get name(): 'ccexpiryyear' | null {\n        return this.autocompleteEnabled ? `ccexpiryyear` : null;\n    }\n\n    get cardPrefilled(): boolean {\n        return !!this.card.match(TUI_NON_DIGIT_REGEXP);\n    }\n\n    get cvcPrefilled(): boolean {\n        return !!this.cvc.match(TUI_NON_DIGIT_REGEXP);\n    }\n\n    get cardFocusable(): boolean {\n        return this.focusable && !this.cardPrefilled;\n    }\n\n    get expireFocusable(): boolean {\n        return this.isFocusable(this.card) && !this.expireInert;\n    }\n\n    get cvcFocusable(): boolean {\n        return this.isFocusable(this.card);\n    }\n\n    get masked(): string {\n        return this.cardPrefilled ? `*${this.card.slice(-4)}` : `*`;\n    }\n\n    @HostListener(`keydown.esc`)\n    onEsc(): void {\n        this.open = false;\n    }\n\n    @HostListener(`keydown.arrowDown.prevent`, [`$event.target`, `1`])\n    @HostListener(`keydown.arrowUp.prevent`, [`$event.target`, `-1`])\n    onArrow(element: HTMLElement, step: number): void {\n        this.open = this.hasDropdown;\n        this.changeDetectorRef.detectChanges();\n        this.datalist?.onKeyDownArrow(element, step);\n    }\n\n    handleOption(option: Partial<TuiCard>): void {\n        const {card = ``, expire = ``, cvc = ``} = option;\n        const {bin} = this;\n        const element =\n            (!expire && this.inputExpire?.nativeElement) || this.inputCVC?.nativeElement;\n\n        this.updateValue({card, expire, cvc});\n        this.updateBin(bin);\n        this.open = false;\n        this.expireInert = !!expire;\n\n        element?.focus();\n    }\n\n    onCardChange(card: string): void {\n        const {value, bin} = this;\n        const parsed = card.split(` `).join(``);\n\n        if (value && value.card === parsed) {\n            return;\n        }\n\n        this.updateProperty(parsed, `card`);\n        this.updateBin(bin);\n\n        if (this.cardValidator(this.card) && !this.expire && this.inputExpire) {\n            this.focusExpire();\n        }\n    }\n\n    onExpireChange(expire: string): void {\n        // @bad TODO: Workaround until mask pipe can replace chars and keep caret position\n        // @bad TODO: Think about a solution without mask at all\n        if (!this.inputExpire) {\n            return;\n        }\n\n        if (parseInt(expire.slice(0, 2), 10) > 12) {\n            expire = `12${expire.slice(2)}`;\n        }\n\n        if (expire.slice(0, 2) === `00`) {\n            expire = `01${expire.slice(2)}`;\n        }\n\n        this.inputExpire.nativeElement.value = expire;\n        this.updateProperty(expire, `expire`);\n\n        if (expire.length === 5) {\n            this.focusCVC();\n        }\n    }\n\n    onCVCChange(cvc: string): void {\n        this.updateProperty(cvc, `cvc`);\n    }\n\n    onActiveZoneChange(active: boolean): void {\n        this.updateFocused(active);\n        this.open = active && this.open;\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        tuiAssertIsHTMLElement(event.target);\n\n        if (event.target.matches(`input`)) {\n            return;\n        }\n\n        event.preventDefault();\n        this.focusInput();\n    }\n\n    onScroll({currentTarget}: Event): void {\n        tuiAssertIsHTMLElement(currentTarget);\n\n        currentTarget.scrollLeft = 0;\n    }\n\n    clear(): void {\n        this.updateValue(null);\n        this.focusCard();\n    }\n\n    toggle(): void {\n        this.open = !this.open;\n    }\n\n    writeValue(value: TuiCard | null): void {\n        const {bin} = this;\n\n        super.writeValue(value);\n        this.updateBin(bin);\n        this.expireInert = !!this.expire && this.cardPrefilled;\n    }\n\n    /** Public API for manual focus management */\n    focusCard(): void {\n        this.inputCard?.nativeElement.focus();\n    }\n\n    focusExpire(): void {\n        this.inputExpire?.nativeElement.focus({preventScroll: true});\n    }\n\n    focusCVC(): void {\n        this.inputCVC?.nativeElement.focus();\n    }\n\n    private get cardFocused(): boolean {\n        return !!this.inputCard && isNativeFocused(this.inputCard.nativeElement);\n    }\n\n    private get paymentSystem(): TuiPaymentSystem | null {\n        return this.value && getPaymentSystem(this.value.card);\n    }\n\n    @tuiPure\n    private isFocusable(card: string): boolean {\n        return this.focusable && (this.cardValidator(card) || this.cardPrefilled);\n    }\n\n    private updateBin(oldBin: string | null): void {\n        const {bin} = this;\n\n        if (bin !== oldBin && !this.cardPrefilled) {\n            this.binChange.emit(bin);\n        }\n    }\n\n    private updateProperty(propValue: string, propName: 'card' | 'expire' | 'cvc'): void {\n        const {card, expire, cvc} = this.value || STUB;\n        const newValue: TuiCard = {\n            card,\n            expire,\n            cvc,\n        };\n\n        newValue[propName] = propValue;\n\n        if (!newValue.expire && !newValue.cvc && !newValue.card) {\n            this.updateValue(null);\n        } else {\n            this.updateValue(newValue);\n        }\n    }\n\n    private focusInput(): void {\n        const element =\n            (this.cardFocusable && this.inputCard?.nativeElement) ||\n            (this.expireFocusable && this.inputExpire?.nativeElement) ||\n            this.inputCVC?.nativeElement;\n\n        element?.focus();\n    }\n}\n","<tui-wrapper\n    *ngIf=\"cardGroupedTexts$ | async as texts\"\n    class=\"t-common-wrapper\"\n    [appearance]=\"appearance\"\n    [readOnly]=\"readOnly\"\n    [disabled]=\"computedDisabled\"\n    [focused]=\"computedFocused\"\n    [hovered]=\"computedHovered\"\n    [invalid]=\"computedInvalid\"\n    [tuiDropdown]=\"open\"\n    [tuiDropdownContent]=\"dropdown || ''\"\n    (tuiHoveredChange)=\"onHovered($event)\"\n    (tuiActiveZoneChange)=\"onActiveZoneChange($event)\"\n    (scroll)=\"onScroll($event)\"\n    (mousedown)=\"onMouseDown($event)\"\n>\n    <div class=\"t-wrapper\">\n        <label\n            *tuiLet=\"value?.card | tuiFormatCard: cardPrefilled as formattedCard\"\n            tuiPreventDefault=\"click\"\n        >\n            <input\n                #inputCard\n                type=\"text\"\n                translate=\"no\"\n                automation-id=\"tui-input-card-grouped__card\"\n                tuiInputMode=\"numeric\"\n                class=\"t-input t-input_card\"\n                [class.t-input_inert]=\"cardPrefilled\"\n                [class.t-input_hidden]=\"!card.length && focused\"\n                [attr.id]=\"idCard\"\n                [attr.aria-invalid]=\"!cardPrefilled && !(this.card | tuiMapper: cardValidator)\"\n                [placeholder]=\"cardPrefilled ? '' : exampleText\"\n                [autocomplete]=\"autocompleteCard\"\n                [disabled]=\"computedDisabled\"\n                [readOnly]=\"readOnly\"\n                [textMask]=\"maskCard\"\n                [tuiFocusable]=\"cardFocusable\"\n                [ngModel]=\"formattedCard\"\n                (ngModelChange)=\"onCardChange($event)\"\n                (focus)=\"(0)\"\n            />\n            <span\n                aria-hidden=\"true\"\n                translate=\"no\"\n                class=\"t-collapsed\"\n                [attr.data-before]=\"masked\"\n                [class.t-collapsed_enable-mask]=\"isCardCollapsed\"\n            >\n                <span class=\"t-collapsed-wrapper\">\n                    <span\n                        class=\"t-value\"\n                        [class.t-value_collapsed]=\"isCardCollapsed\"\n                    >\n                        {{ formattedCard }}\n                    </span>\n                </span>\n            </span>\n            <span\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n            >\n                {{ texts.cardNumberText }}\n            </span>\n        </label>\n    </div>\n    <div\n        class=\"t-wrapper t-wrapper_expire\"\n        [class.t-wrapper_active]=\"isCardCollapsed\"\n    >\n        <label tuiPreventDefault=\"click\">\n            <input\n                #inputExpire\n                type=\"text\"\n                translate=\"no\"\n                placeholder=\"00/00\"\n                automation-id=\"tui-input-card-grouped__expire\"\n                tuiInputMode=\"numeric\"\n                class=\"t-input\"\n                [class.t-input_inert]=\"!expireFocusable\"\n                [attr.id]=\"idExpire\"\n                [attr.name]=\"name\"\n                [autocomplete]=\"autocompleteExpire\"\n                [disabled]=\"computedDisabled\"\n                [readOnly]=\"readOnly\"\n                [tuiFocusable]=\"expireFocusable\"\n                [textMask]=\"maskExpire\"\n                [ngModel]=\"expire\"\n                (ngModelChange)=\"onExpireChange($event)\"\n                (focus)=\"(0)\"\n            />\n            <span\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n            >\n                {{ texts.expiryText }}\n            </span>\n        </label>\n    </div>\n    <div\n        class=\"t-wrapper t-wrapper_cvc\"\n        [class.t-wrapper_active]=\"isCardCollapsed\"\n    >\n        <label tuiPreventDefault=\"click\">\n            <input\n                #inputCVC\n                type=\"text\"\n                translate=\"no\"\n                automation-id=\"tui-input-card-grouped__cvc\"\n                tuiInputMode=\"numeric\"\n                class=\"t-input\"\n                [class.t-input_prefilled]=\"cvcPrefilled\"\n                [placeholder]=\"cvcPrefilled ? '•••' : exampleTextCVC\"\n                [attr.id]=\"idCVC\"\n                [disabled]=\"computedDisabled\"\n                [readOnly]=\"readOnly || cvcPrefilled\"\n                [autocomplete]=\"autocompleteCVC\"\n                [textMask]=\"maskCVC\"\n                [tuiFocusable]=\"cvcFocusable\"\n                [ngModel]=\"cvc\"\n                (ngModelChange)=\"onCVCChange($event)\"\n                (focus)=\"(0)\"\n            />\n            <span\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n            >\n                {{ texts.cvcText }}\n            </span>\n        </label>\n    </div>\n    <div class=\"t-icons\">\n        <div\n            *ngIf=\"icon\"\n            polymorpheus-outlet\n            class=\"t-icon-outlet\"\n            [content]=\"icon\"\n        >\n            <ng-template let-icon>\n                <tui-svg\n                    automation-id=\"tui-input-card-grouped__icon\"\n                    class=\"t-card\"\n                    [src]=\"icon\"\n                ></tui-svg>\n            </ng-template>\n        </div>\n        <tui-svg\n            *ngIf=\"hasCleaner\"\n            src=\"tuiIconCloseLarge\"\n            class=\"t-icon\"\n            (click)=\"clear()\"\n        ></tui-svg>\n        <tui-svg\n            *ngIf=\"hasDropdown\"\n            src=\"tuiIconChevronDownLarge\"\n            class=\"t-icon\"\n            [class.t-icon_rotated]=\"open\"\n            (click)=\"toggle()\"\n        ></tui-svg>\n    </div>\n</tui-wrapper>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiFormatCardModule} from '@taiga-ui/addon-commerce/pipes';\nimport {\n    TuiActiveZoneModule,\n    TuiFocusableModule,\n    TuiHoveredModule,\n    TuiInputModeModule,\n    TuiLetModule,\n    TuiMapperPipeModule,\n    TuiPreventDefaultModule,\n} from '@taiga-ui/cdk';\nimport {TuiDropdownModule, TuiSvgModule, TuiWrapperModule} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\nimport {TextMaskModule} from 'angular2-text-mask';\n\nimport {TuiInputCardGroupedComponent} from './input-card-grouped.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        TextMaskModule,\n        TuiFocusableModule,\n        TuiSvgModule,\n        TuiWrapperModule,\n        TuiHoveredModule,\n        TuiActiveZoneModule,\n        TuiInputModeModule,\n        TuiMapperPipeModule,\n        TuiDropdownModule,\n        TuiPreventDefaultModule,\n        PolymorpheusModule,\n        TuiLetModule,\n        TuiFormatCardModule,\n    ],\n    declarations: [TuiInputCardGroupedComponent],\n    exports: [TuiInputCardGroupedComponent],\n})\nexport class TuiInputCardGroupedModule {}\n","import {inject, InjectionToken} from '@angular/core';\nimport {WINDOW} from '@ng-web-apis/common';\nimport {\n    TUI_CARD_CVC_TEXTS,\n    TUI_CARD_EXPIRY_TEXTS,\n    TUI_CARD_NUMBER_TEXTS,\n} from '@taiga-ui/addon-commerce/tokens';\nimport {typedFromEvent} from '@taiga-ui/cdk';\nimport {TuiMedia} from '@taiga-ui/core/interfaces';\nimport {TUI_MEDIA} from '@taiga-ui/core/tokens';\nimport {combineLatest, Observable, of} from 'rxjs';\nimport {map, startWith, switchMap} from 'rxjs/operators';\n\nexport interface TuiCardGroupedTexts {\n    readonly cardNumberText: string;\n    readonly expiryText: string;\n    readonly cvcText: string;\n}\n\nexport const TUI_INPUT_CARD_GROUPED_TEXTS = new InjectionToken<\n    Observable<TuiCardGroupedTexts>\n>(`InputCardGrouped texts`, {\n    factory: () =>\n        inputGroupedTextsFactory(\n            inject(WINDOW),\n            inject(TUI_CARD_NUMBER_TEXTS),\n            inject(TUI_CARD_EXPIRY_TEXTS),\n            inject(TUI_CARD_CVC_TEXTS),\n            inject(TUI_MEDIA),\n        ),\n});\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function inputGroupedTextsFactory(\n    windowRef: Window,\n    cardNumberTexts: Observable<[string, string]>,\n    expiryTexts: Observable<[string, string]>,\n    cvcTexts: Observable<[string, string]>,\n    {desktopSmall}: TuiMedia,\n): Observable<TuiCardGroupedTexts> {\n    const media = windowRef.matchMedia(\n        `screen and (min-width: ${(desktopSmall - 1) / 16}em)`,\n    );\n\n    return typedFromEvent(media, `change`).pipe(\n        startWith(null),\n        switchMap(() =>\n            combineLatest([\n                of(Number(media.matches)),\n                cardNumberTexts,\n                expiryTexts,\n                cvcTexts,\n            ]),\n        ),\n        map(([index, cardNumber, expiry, cvcTexts]) => ({\n            cardNumberText: cardNumber[index],\n            expiryText: expiry[index],\n            cvcText: cvcTexts[index],\n        })),\n    );\n}\n","export * from './input-card.component';\nexport * from './input-card.module';\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {TUI_CARD_MASK} from '@taiga-ui/addon-commerce/constants';\nimport {TuiPaymentSystem} from '@taiga-ui/addon-commerce/enums';\nimport {getPaymentSystem} from '@taiga-ui/addon-commerce/utils';\nimport {\n    AbstractTuiControl,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    TuiCreditCardAutofillName,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n} from '@taiga-ui/cdk';\nimport {\n    TUI_TEXTFIELD_EXAMPLE_TEXT,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextfieldExampleTextDirective,\n} from '@taiga-ui/core';\nimport {TextMaskConfig} from 'angular2-text-mask';\n\nconst icons = {\n    [TuiPaymentSystem.Mir]: `tuiIconMir`,\n    [TuiPaymentSystem.Visa]: `tuiIconVisa`,\n    [TuiPaymentSystem.Electron]: `tuiIconElectron`,\n    [TuiPaymentSystem.Mastercard]: `tuiIconMastercard`,\n    [TuiPaymentSystem.Maestro]: `tuiIconMaestro`,\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function cardTextfieldControllerFactory(\n    directive: TuiTextfieldExampleTextDirective | null,\n): TuiTextfieldExampleTextDirective {\n    directive = directive || new TuiTextfieldExampleTextDirective();\n    directive.exampleText = `0000 0000 0000 0000`;\n\n    return directive;\n}\n\n// @dynamic\n@Component({\n    selector: `tui-input-card`,\n    templateUrl: `./input-card.template.html`,\n    styleUrls: [`./input-card.style.less`],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputCardComponent),\n        },\n        {\n            provide: TUI_TEXTFIELD_EXAMPLE_TEXT,\n            deps: [[new Optional(), TuiTextfieldExampleTextDirective]],\n            useFactory: cardTextfieldControllerFactory,\n        },\n    ],\n})\nexport class TuiInputCardComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly input?: TuiPrimitiveTextfieldComponent;\n\n    @Input()\n    @tuiDefaultProp()\n    cardSrc: string | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    autocompleteEnabled = false;\n\n    @Output()\n    readonly binChange = new EventEmitter<string | null>();\n\n    readonly textMaskOptions: TextMaskConfig = {\n        mask: TUI_CARD_MASK,\n        guide: false,\n        pipe: conformedValue => conformedValue.trim(),\n    };\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.input ? this.input.nativeFocusableElement : null;\n    }\n\n    get focused(): boolean {\n        return !!this.input && this.input.focused;\n    }\n\n    get icon(): string | null {\n        if (this.cardSrc !== null) {\n            return this.cardSrc;\n        }\n\n        const {paymentSystem} = this;\n\n        return paymentSystem ? icons[paymentSystem] : null;\n    }\n\n    get autocomplete(): TuiCreditCardAutofillName {\n        return this.autocompleteEnabled\n            ? TuiCreditCardAutofillName.CcNumber\n            : TuiCreditCardAutofillName.Off;\n    }\n\n    get paymentSystem(): TuiPaymentSystem | null {\n        return getPaymentSystem(this.value);\n    }\n\n    get bin(): string | null {\n        return this.value.length < 6 ? null : this.value.slice(0, 6);\n    }\n\n    get formattedCard(): string {\n        return this.value\n            .split(``)\n            .map((char, index) => (index && index % 4 === 0 ? ` ${char}` : char))\n            .join(``);\n    }\n\n    onValueChange(value: string): void {\n        const parsed = value.split(` `).join(``);\n        const currentBin = this.bin;\n\n        this.updateValue(parsed);\n\n        const newBin = this.bin;\n\n        if (currentBin !== newBin) {\n            this.binChange.emit(newBin);\n        }\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    writeValue(value: string | null): void {\n        const currentBin = this.bin;\n\n        super.writeValue(value);\n\n        const newBin = this.bin;\n\n        if (currentBin !== newBin) {\n            this.binChange.emit(newBin);\n        }\n    }\n\n    protected getFallbackValue(): string {\n        return ``;\n    }\n}\n","<tui-primitive-textfield\n    tuiValueAccessor\n    tuiTextfieldInputMode=\"numeric\"\n    class=\"t-input\"\n    [tuiTextfieldAutocomplete]=\"autocomplete\"\n    [tuiTextfieldCustomContent]=\"icon\"\n    [readOnly]=\"readOnly\"\n    [disabled]=\"disabled\"\n    [focusable]=\"focusable\"\n    [nativeId]=\"nativeId\"\n    [invalid]=\"computedInvalid\"\n    [pseudoHovered]=\"pseudoHovered\"\n    [pseudoPressed]=\"pseudoPressed\"\n    [pseudoFocused]=\"pseudoFocused\"\n    [textMask]=\"textMaskOptions\"\n    [value]=\"formattedCard\"\n    (valueChange)=\"onValueChange($event)\"\n    (focusedChange)=\"onFocused($event)\"\n    (hoveredChange)=\"onHovered($event)\"\n>\n    <ng-content></ng-content>\n</tui-primitive-textfield>\n","import {NgModule} from '@angular/core';\nimport {TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule} from '@taiga-ui/core';\nimport {TuiValueAccessorModule} from '@taiga-ui/kit';\nimport {TextMaskModule} from 'angular2-text-mask';\n\nimport {TuiInputCardComponent} from './input-card.component';\n\n@NgModule({\n    imports: [\n        TextMaskModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiValueAccessorModule,\n    ],\n    declarations: [TuiInputCardComponent],\n    exports: [TuiInputCardComponent],\n})\nexport class TuiInputCardModule {}\n","export * from './input-cvc.component';\nexport * from './input-cvc.module';\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {TuiCodeCVCLength} from '@taiga-ui/addon-commerce/types';\nimport {\n    AbstractTuiControl,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    TuiCreditCardAutofillName,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiNativeFocusableElement,\n    tuiRequiredSetter,\n} from '@taiga-ui/cdk';\nimport {\n    TUI_DIGIT_REGEXP,\n    TUI_TEXTFIELD_LABEL_OUTSIDE,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextfieldLabelOutsideDirective,\n} from '@taiga-ui/core';\nimport {TextMaskConfig} from 'angular2-text-mask';\n\n@Component({\n    selector: `tui-input-cvc`,\n    templateUrl: `./input-cvc.template.html`,\n    styleUrls: [`./input-cvc.style.less`],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputCVCComponent),\n        },\n    ],\n})\nexport class TuiInputCVCComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly input?: TuiPrimitiveTextfieldComponent;\n\n    @Input()\n    @tuiDefaultProp()\n    autocompleteEnabled = false;\n\n    @Input()\n    @tuiRequiredSetter()\n    set length(length: TuiCodeCVCLength) {\n        this.exampleText = `0`.repeat(length);\n        this.textMaskOptions = {\n            mask: new Array(length).fill(TUI_DIGIT_REGEXP),\n            guide: false,\n        };\n    }\n\n    exampleText = `000`;\n\n    textMaskOptions: TextMaskConfig = {\n        mask: new Array(3).fill(TUI_DIGIT_REGEXP),\n        guide: false,\n    };\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_TEXTFIELD_LABEL_OUTSIDE)\n        private readonly textfieldLabelOutside: TuiTextfieldLabelOutsideDirective,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        return this.input ? this.input.nativeFocusableElement : null;\n    }\n\n    get focused(): boolean {\n        return !!this.input && this.input.focused;\n    }\n\n    get autocomplete(): TuiCreditCardAutofillName {\n        return this.autocompleteEnabled\n            ? TuiCreditCardAutofillName.CcCsc\n            : TuiCreditCardAutofillName.Off;\n    }\n\n    get computedExampleText(): string {\n        return this.textfieldLabelOutside.labelOutside ? `` : this.exampleText;\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    onCopy(): void {}\n\n    onValueChange(value: string): void {\n        this.updateValue(value);\n    }\n\n    protected getFallbackValue(): string {\n        return ``;\n    }\n}\n","<tui-primitive-textfield\n    tuiValueAccessor\n    tuiTextfieldInputMode=\"numeric\"\n    class=\"t-input\"\n    [tuiTextfieldExampleText]=\"computedExampleText\"\n    [disabled]=\"disabled\"\n    [readOnly]=\"readOnly\"\n    [nativeId]=\"nativeId\"\n    [textMask]=\"textMaskOptions\"\n    [invalid]=\"computedInvalid\"\n    [focusable]=\"focusable\"\n    [pseudoHovered]=\"pseudoHovered\"\n    [pseudoPressed]=\"pseudoPressed\"\n    [pseudoFocused]=\"pseudoFocused\"\n    [value]=\"value\"\n    (valueChange)=\"onValueChange($event)\"\n    (focusedChange)=\"onFocused($event)\"\n    (hoveredChange)=\"onHovered($event)\"\n    (copy.prevent)=\"onCopy()\"\n>\n    <ng-content></ng-content>\n</tui-primitive-textfield>\n","import {NgModule} from '@angular/core';\nimport {\n    TuiHintControllerModule,\n    TuiPrimitiveTextfieldModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TuiValueAccessorModule} from '@taiga-ui/kit';\nimport {TextMaskModule} from 'angular2-text-mask';\n\nimport {TuiInputCVCComponent} from './input-cvc.component';\n\n@NgModule({\n    imports: [\n        TextMaskModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiHintControllerModule,\n        TuiValueAccessorModule,\n    ],\n    declarations: [TuiInputCVCComponent],\n    exports: [TuiInputCVCComponent],\n})\nexport class TuiInputCVCModule {}\n","export * from './input-expire.component';\nexport * from './input-expire.module';\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {tuiCreateAutoCorrectedExpirePipe} from '@taiga-ui/addon-commerce/utils';\nimport {\n    AbstractTuiControl,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    TuiCreditCardAutofillName,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n} from '@taiga-ui/cdk';\nimport {\n    TUI_DIGIT_REGEXP,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextMaskOptions,\n} from '@taiga-ui/core';\nimport {TextMaskConfig} from 'angular2-text-mask';\n\n@Component({\n    selector: `tui-input-expire`,\n    templateUrl: `./input-expire.template.html`,\n    styleUrls: [`./input-expire.style.less`],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputExpireComponent),\n        },\n    ],\n})\nexport class TuiInputExpireComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly input?: TuiPrimitiveTextfieldComponent;\n\n    @Input()\n    @tuiDefaultProp()\n    autocompleteEnabled = false;\n\n    readonly textMaskOptions: TextMaskConfig = {\n        mask: [\n            TUI_DIGIT_REGEXP,\n            TUI_DIGIT_REGEXP,\n            `/`,\n            TUI_DIGIT_REGEXP,\n            TUI_DIGIT_REGEXP,\n        ],\n        pipe: tuiCreateAutoCorrectedExpirePipe(),\n        guide: false,\n    } as TuiTextMaskOptions as unknown as TextMaskConfig;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.input ? this.input.nativeFocusableElement : null;\n    }\n\n    get focused(): boolean {\n        return !!this.input && this.input.focused;\n    }\n\n    get autocomplete(): TuiCreditCardAutofillName {\n        return this.autocompleteEnabled\n            ? TuiCreditCardAutofillName.CcExp\n            : TuiCreditCardAutofillName.Off;\n    }\n\n    onValueChange(value: string): void {\n        // @bad TODO: Workaround until mask pipe can replace chars and keep caret position\n        // @bad TODO: Think about a solution without mask at all\n        if (!this.input || !this.input.nativeFocusableElement) {\n            return;\n        }\n\n        if (parseInt(value.slice(0, 2), 10) > 12) {\n            value = `12${value.slice(2)}`;\n        }\n\n        if (value.slice(0, 2) === `00`) {\n            value = `01${value.slice(2)}`;\n        }\n\n        this.input.nativeFocusableElement.value = value;\n\n        if (this.value !== value) {\n            this.updateValue(value);\n        }\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n    }\n\n    onHovered(hovered: boolean): void {\n        this.updateHovered(hovered);\n    }\n\n    protected getFallbackValue(): string {\n        return ``;\n    }\n}\n","<tui-primitive-textfield\n    tuiValueAccessor\n    tuiTextfieldInputMode=\"numeric\"\n    tuiTextfieldExampleText=\"00/00\"\n    class=\"t-input\"\n    [tuiTextfieldAutocomplete]=\"autocomplete\"\n    [nativeId]=\"nativeId\"\n    [disabled]=\"disabled\"\n    [readOnly]=\"readOnly\"\n    [invalid]=\"computedInvalid\"\n    [pseudoHovered]=\"pseudoHovered\"\n    [pseudoPressed]=\"pseudoPressed\"\n    [pseudoFocused]=\"pseudoFocused\"\n    [textMask]=\"textMaskOptions\"\n    [value]=\"value\"\n    (valueChange)=\"onValueChange($event)\"\n    (focusedChange)=\"onFocused($event)\"\n    (hoveredChange)=\"onHovered($event)\"\n>\n    <ng-content></ng-content>\n</tui-primitive-textfield>\n","import {NgModule} from '@angular/core';\nimport {TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule} from '@taiga-ui/core';\nimport {TuiValueAccessorModule} from '@taiga-ui/kit';\nimport {TextMaskModule} from 'angular2-text-mask';\n\nimport {TuiInputExpireComponent} from './input-expire.component';\n\n@NgModule({\n    imports: [\n        TextMaskModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiValueAccessorModule,\n    ],\n    declarations: [TuiInputExpireComponent],\n    exports: [TuiInputExpireComponent],\n})\nexport class TuiInputExpireModule {}\n","export * from './money.component';\nexport * from './money.module';\nexport * from './money-options';\nexport * from './pipes/fraction-part.pipe';\nexport * from './pipes/integer-part.pipe';\nexport * from './pipes/sign-symbol.pipe';\nexport * from './utils/format-fraction-part';\nexport * from './utils/format-sign-symbol';\n","import {InjectionToken, ValueProvider} from '@angular/core';\nimport {TuiCurrency} from '@taiga-ui/addon-commerce/enums';\nimport {TuiCurrencyVariants, TuiMoneySignT} from '@taiga-ui/addon-commerce/types';\nimport {TuiDecimalT} from '@taiga-ui/core';\n\nexport interface TuiMoneyOptions {\n    readonly decimal: TuiDecimalT;\n    readonly currency: TuiCurrencyVariants;\n    readonly sign: TuiMoneySignT;\n    readonly colored: boolean;\n    readonly precision: number;\n    readonly singleColor: boolean;\n}\n\nexport const TUI_MONEY_DEFAULT_DEFAULT_OPTIONS: TuiMoneyOptions = {\n    decimal: `not-zero`,\n    currency: TuiCurrency.Ruble,\n    sign: `negative-only`,\n    colored: false,\n    precision: 2,\n    singleColor: false,\n};\n\nexport const TUI_MONEY_OPTIONS = new InjectionToken<TuiMoneyOptions>(\n    `Default parameters for money component`,\n    {\n        factory: () => TUI_MONEY_DEFAULT_DEFAULT_OPTIONS,\n    },\n);\n\nexport const tuiMoneyOptionsProvider: (\n    options: Partial<TuiMoneyOptions>,\n) => ValueProvider = (options: Partial<TuiMoneyOptions>) => ({\n    provide: TUI_MONEY_OPTIONS,\n    useValue: {...TUI_MONEY_DEFAULT_DEFAULT_OPTIONS, ...options},\n});\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    Inject,\n    Input,\n} from '@angular/core';\nimport {\n    TuiCurrencyVariants,\n    TuiMoneySignSymbol,\n    TuiMoneySignT,\n} from '@taiga-ui/addon-commerce/types';\nimport {CHAR_MINUS, CHAR_PLUS, tuiDefaultProp} from '@taiga-ui/cdk';\nimport {TuiDecimalT} from '@taiga-ui/core';\n\nimport {TUI_MONEY_OPTIONS, TuiMoneyOptions} from './money-options';\nimport {tuiFormatSignSymbol} from './utils/format-sign-symbol';\n\n@Component({\n    selector: `tui-money`,\n    templateUrl: `./money.template.html`,\n    styleUrls: [`./money.style.less`],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiMoneyComponent {\n    @Input()\n    @tuiDefaultProp()\n    value = NaN;\n\n    @Input()\n    @tuiDefaultProp()\n    decimal: TuiDecimalT = this.options.decimal;\n\n    @Input()\n    @tuiDefaultProp()\n    currency: TuiCurrencyVariants = this.options.currency;\n\n    @Input()\n    @tuiDefaultProp()\n    sign: TuiMoneySignT = this.options.sign;\n\n    @Input()\n    @tuiDefaultProp()\n    colored = this.options.colored;\n\n    @Input()\n    @tuiDefaultProp()\n    precision = this.options.precision;\n\n    @Input()\n    @tuiDefaultProp()\n    singleColor = this.options.singleColor;\n\n    get signSymbol(): TuiMoneySignSymbol {\n        return tuiFormatSignSymbol(this.value, this.sign);\n    }\n\n    @HostBinding(`class._red`)\n    get red(): boolean {\n        return (\n            this.colored &&\n            (this.signSymbol === CHAR_MINUS ||\n                (this.value < 0 && this.sign !== `force-positive`))\n        );\n    }\n\n    @HostBinding(`class._green`)\n    get green(): boolean {\n        return (\n            this.colored &&\n            (this.signSymbol === CHAR_PLUS ||\n                (this.value > 0 && this.sign !== `force-negative`))\n        );\n    }\n\n    @HostBinding(`class._inherit-color`)\n    get inheritColor(): boolean {\n        return this.singleColor || (this.value === 0 && this.colored);\n    }\n\n    constructor(@Inject(TUI_MONEY_OPTIONS) private readonly options: TuiMoneyOptions) {}\n}\n","<span\n    automation-id=\"tui-money__sign\"\n    [textContent]=\"value | tuiSignSymbol: sign\"\n></span>\n<span\n    automation-id=\"tui-money__integer-part\"\n    [textContent]=\"value | tuiIntegerPart: precision\"\n></span>\n<span class=\"t-lighter\">\n    <span\n        automation-id=\"tui-money__fraction-part\"\n        [textContent]=\"value | tuiFractionPart: decimal:precision\"\n    ></span>\n    <span\n        automation-id=\"tui-money__currency\"\n        class=\"t-currency\"\n        [textContent]=\"currency | tuiCurrency\"\n    ></span>\n</span>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiCurrencyPipeModule} from '@taiga-ui/addon-commerce/pipes';\n\nimport {TuiMoneyComponent} from './money.component';\nimport {TuiFractionPartPipe} from './pipes/fraction-part.pipe';\nimport {TuiIntegerPartPipe} from './pipes/integer-part.pipe';\nimport {TuiSignSymbolPipe} from './pipes/sign-symbol.pipe';\n\n@NgModule({\n    imports: [CommonModule, TuiCurrencyPipeModule],\n    declarations: [\n        TuiMoneyComponent,\n        TuiFractionPartPipe,\n        TuiIntegerPartPipe,\n        TuiSignSymbolPipe,\n    ],\n    exports: [TuiMoneyComponent],\n})\nexport class TuiMoneyModule {}\n","import {Inject, Pipe, PipeTransform} from '@angular/core';\nimport {TUI_NUMBER_FORMAT, TuiDecimalT, TuiNumberFormatSettings} from '@taiga-ui/core';\n\nimport {tuiFormatFractionPart} from '../utils/format-fraction-part';\n\n@Pipe({name: `tuiFractionPart`})\nexport class TuiFractionPartPipe implements PipeTransform {\n    constructor(\n        @Inject(TUI_NUMBER_FORMAT) private readonly numberFormat: TuiNumberFormatSettings,\n    ) {}\n\n    transform(value: number, decimal: TuiDecimalT, precision: number): string {\n        return tuiFormatFractionPart({\n            value,\n            decimal,\n            precision,\n            numberFormat: this.numberFormat,\n        });\n    }\n}\n","import {Inject, Pipe, PipeTransform} from '@angular/core';\nimport {formatNumber, TUI_NUMBER_FORMAT, TuiNumberFormatSettings} from '@taiga-ui/core';\n\n@Pipe({name: `tuiIntegerPart`})\nexport class TuiIntegerPartPipe implements PipeTransform {\n    constructor(\n        @Inject(TUI_NUMBER_FORMAT) private readonly numberFormat: TuiNumberFormatSettings,\n    ) {}\n\n    transform(value: number, precision: number): string {\n        return formatNumber(\n            Math.floor(Math.abs(Number(value.toFixed(precision)))),\n            null,\n            this.numberFormat.decimalSeparator,\n            this.numberFormat.thousandSeparator,\n        );\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {TuiMoneySignSymbol, TuiMoneySignT} from '@taiga-ui/addon-commerce/types';\n\nimport {tuiFormatSignSymbol} from '../utils/format-sign-symbol';\n\n@Pipe({name: `tuiSignSymbol`})\nexport class TuiSignSymbolPipe implements PipeTransform {\n    transform(value: number, sign: TuiMoneySignT): TuiMoneySignSymbol {\n        return tuiFormatSignSymbol(value, sign);\n    }\n}\n","import {TuiDecimalT, TuiNumberFormatSettings} from '@taiga-ui/core';\n\nexport function tuiFormatFractionPart(options: {\n    value: number;\n    decimal: TuiDecimalT;\n    precision: number;\n    numberFormat: TuiNumberFormatSettings;\n}): string {\n    const {value, decimal, numberFormat, precision} = options;\n    const fraction = value.toFixed(precision).split(`.`)[1];\n    const shouldShow =\n        decimal !== `never` && (decimal === `always` || !!parseInt(fraction, 10));\n\n    return shouldShow ? `${numberFormat.decimalSeparator}${fraction}` : ``;\n}\n","import {TuiMoneySignSymbol, TuiMoneySignT} from '@taiga-ui/addon-commerce/types';\nimport {CHAR_MINUS, CHAR_PLUS} from '@taiga-ui/cdk';\n\nexport function tuiFormatSignSymbol(\n    value: number,\n    sign: TuiMoneySignT,\n): TuiMoneySignSymbol {\n    if (sign === `never` || !value || (sign === `negative-only` && value > 0)) {\n        return ``;\n    }\n\n    if (sign === `force-negative` || (value < 0 && sign !== `force-positive`)) {\n        return CHAR_MINUS;\n    }\n\n    return CHAR_PLUS;\n}\n","import {tuiCreateCorrectionMask, TuiTextMaskListHandler} from '@taiga-ui/core';\n\nconst ALLOWED_REGEXP = /[A-Z]| /;\nconst MAP: Record<string, string> = {\n    А: `F`,\n    В: `D`,\n    Г: `U`,\n    Д: `L`,\n    Е: `T`,\n    З: `P`,\n    И: `B`,\n    Й: `Q`,\n    К: `R`,\n    Л: `K`,\n    М: `V`,\n    Н: `Y`,\n    О: `J`,\n    П: `G`,\n    Р: `H`,\n    С: `C`,\n    Т: `N`,\n    У: `E`,\n    Ф: `A`,\n    Ц: `W`,\n    Ч: `X`,\n    Ш: `I`,\n    Щ: `O`,\n    Ы: `S`,\n    Ь: `M`,\n    Я: `Z`,\n};\n\nfunction toEnglishUppercase(char: string): string | null {\n    const uppercase = char.toUpperCase();\n    const result = ALLOWED_REGEXP.test(uppercase) ? uppercase : MAP[uppercase];\n\n    return result || null;\n}\n\nexport const cardHolderMask: TuiTextMaskListHandler = tuiCreateCorrectionMask(\n    ALLOWED_REGEXP,\n    toEnglishUppercase,\n);\n","import {TUI_DIGIT_REGEXP} from '@taiga-ui/core';\n\n/**\n * @internal\n */\nexport const TUI_CARD_MASK = [\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    ` `,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    ` `,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    ` `,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    ` `,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n    TUI_DIGIT_REGEXP,\n];\n","import {isCardLengthValid, isCardNumberValid} from '@taiga-ui/addon-commerce/utils';\nimport {TuiBooleanHandler} from '@taiga-ui/cdk';\n\nexport const tuiDefaultCardValidator: TuiBooleanHandler<string> = card =>\n    card.length > 11 && isCardLengthValid(card) && isCardNumberValid(card);\n","export * from './card-holder-mask';\nexport * from './card-mask';\nexport * from './default-card-validator';\n","/**\n * **Active ISO 4217 numeric currency codes**\n *\n * @description The ISO 4217 classification is used to describe alphabetic and numeric currency codes.\n * @description Numeric code is also called \"number-3\".\n *\n * @link https://en.wikipedia.org/wiki/ISO_4217\n */\nexport const enum TuiCurrencyCode {\n    /**\n     * Russian ruble\n     *\n     * @description Numeric code: 643\n     * @description Alphabetic code: RUB\n     * @description Countries and territories: Russia\n     * @description Currency symbol: ₽\n     */\n    Ruble = `643`,\n\n    /**\n     * Euro\n     *\n     * @description Numeric code: 978\n     * @description Alphabetic code: EUR\n     * @description Countries and territories: Åland Islands (AX), European Union (EU), Andorra (AD), Austria (AT), Belgium (BE), Cyprus (CY), Estonia (EE), Finland (FI), France (FR), French Southern and Antarctic Lands (TF), Germany (DE), Greece (GR), Guadeloupe (GP), Ireland (IE), Italy (IT), Latvia (LV), Lithuania (LT), Luxembourg (LU), Malta (MT), French Guiana (GF), Martinique (MQ), Mayotte (YT), Monaco (MC), Montenegro (ME), Netherlands (NL), Portugal (PT), Réunion (RE), Saint Barthélemy (BL), Saint Martin (MF), Saint Pierre and Miquelon (PM), San Marino (SM), Slovakia (SK), Slovenia (SI), Spain (ES), Vatican City (VA)\n     * @description Currency symbol: €\n     */\n    Euro = `978`,\n\n    /**\n     * United States dollar\n     *\n     * @description Numeric code: 840\n     * @description Alphabetic code: USD\n     * @description Countries and territories: United States, American Samoa (AS), British Indian Ocean Territory (IO) (also uses GBP), British Virgin Islands (VG), Caribbean Netherlands (BQ – Bonaire, Sint Eustatius and Saba), Ecuador (EC), El Salvador (SV), Guam (GU), Marshall Islands (MH), Federated States of Micronesia (FM), Northern Mariana Islands (MP), Palau (PW), Panama (PA) (as well as Panamanian Balboa), Puerto Rico (PR), Timor-Leste (TL), Turks and Caicos Islands (TC), U.S. Virgin Islands (VI), United States Minor Outlying Islands (UM)\n     * @description Currency symbol: $\n     */\n    Dollar = `840`,\n\n    /**\n     * Pound sterling\n     *\n     * @description Numeric code: 826\n     * @description Alphabetic code: GBP\n     * @description Countries and territories: United Kingdom, Isle of Man (IM, see Manx pound), Jersey (JE, see Jersey pound), Guernsey (GG, see Guernsey pound), Tristan da Cunha (SH-TA)\n     * @description Currency symbol: £\n     */\n    Pound = `826`,\n\n    /**\n     * Thai baht\n     *\n     * @description Numeric code: 764\n     * @description Alphabetic code: THB\n     * @description Countries and territories: Thailand\n     * @description Currency symbol: ฿\n     */\n    Baht = `764`,\n\n    /**\n     * Turkish lira\n     *\n     * @description Numeric code: 949\n     * @description Alphabetic code: TRY\n     * @description Countries and territories: Turkey\n     * @description Currency symbol: ₺\n     */\n    TurkishLira = `949`,\n\n    /**\n     * Chinese yuan\n     *\n     * @description Numeric code: 156\n     * @description Alphabetic code: CNY\n     * @description Countries and territories: China\n     * @description Currency symbol: CN¥\n     */\n    YuanRenminbi = `156`,\n\n    /**\n     * Kazakhstani tenge\n     *\n     * @description Numeric code: 398\n     * @description Alphabetic code: KZT\n     * @description Countries and territories: Kazakhstan\n     * @description Currency symbol: ₸\n     */\n    Tenge = `398`,\n\n    /**\n     * Israeli new shekel\n     *\n     * @description Numeric code: 376\n     * @description Alphabetic code: ILS\n     * @description Countries and territories: Israel\n     * @description Currency symbol: ₪\n     */\n    IsraeliShekel = `376`,\n\n    /**\n     * Indian rupee\n     *\n     * @description Numeric code: 356\n     * @description Alphabetic code: INR\n     * @description Countries and territories: India, Bhutan\n     * @description Currency symbol: ₹\n     */\n    IndianRupee = `356`,\n\n    /**\n     * Japanese yen\n     *\n     * @description Numeric code: 392\n     * @description Alphabetic code: JPY\n     * @description Countries and territories: Japan\n     * @description Currency symbol: ¥\n     */\n    Yen = `392`,\n\n    /**\n     * South Korean won\n     *\n     * @description Numeric code: 410\n     * @description Alphabetic code: KRW\n     * @description Countries and territories: South Korea\n     * @description Currency symbol: ₩\n     */\n    Won = `410`,\n\n    /**\n     * Swiss franc\n     *\n     * @description Numeric code: 756\n     * @description Alphabetic code: CHF\n     * @description Countries and territories: Switzerland, Liechtenstein (LI)\n     * @description Currency symbol: ₣\n     */\n    SwissFranc = `756`,\n\n    /**\n     * Singapore dollar\n     *\n     * @description Numeric code: 702\n     * @description Alphabetic code: SGD\n     * @description Countries and territories: Singapore\n     * @description Currency symbol: S$\n     */\n    SingaporeDollar = `702`,\n\n    /**\n     * Australian dollar\n     *\n     * @description Numeric code: 036\n     * @description Alphabetic code: AUD\n     * @description Countries and territories: Australia, Christmas Island (CX), Cocos (Keeling) Islands (CC), Heard Island and McDonald Islands (HM), Kiribati (KI), Nauru (NR), Norfolk Island (NF), Tuvalu (TV)\n     * @description Currency symbol: A$\n     */\n    AustralianDollar = `036`,\n\n    /**\n     * Hong Kong dollar\n     *\n     * @description Numeric code: 344\n     * @description Alphabetic code: HKD\n     * @description Countries and territories: Hong Kong\n     * @description Currency symbol: HK$\n     */\n    HongKongDollar = `344`,\n\n    /**\n     * @deprecated\n     * TODO: 3.0 replace with {@link HongKongDollar}\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    HongKong_dollar = `344`,\n\n    /**\n     * Canadian dollar\n     *\n     * @description Numeric code: 124\n     * @description Alphabetic code: CAD\n     * @description Countries and territories: Canada\n     * @description Currency symbol: C$\n     */\n    CanadianDollar = `124`,\n\n    /**\n     * Armenian dram\n     *\n     * @description Numeric code: 051\n     * @description Alphabetic code: AMD\n     * @description Countries and territories: Armenia\n     * @description Currency symbol: ֏\n     */\n    ArmenianDram = `051`,\n\n    /**\n     * Ukrainian hryvnia\n     *\n     * @description Numeric code: 980\n     * @description Alphabetic code: UAH\n     * @description Countries and territories: Ukraine\n     * @description Currency symbol: ₴\n     */\n    Hryvnia = `980`,\n\n    /**\n     * Mexican peso\n     *\n     * @description Numeric code: 484\n     * @description Alphabetic code: MXN\n     * @description Countries and territories: Mexico\n     * @description Currency symbol: $\n     */\n    MexicanPeso = `484`,\n\n    /**\n     * Uzbek sum\n     *\n     * @description Numeric code: 860\n     * @description Alphabetic code: UZS\n     * @description Countries and territories: Uzbekistan\n     * @description Currency symbol: So'm\n     */\n    UzbekSum = `860`,\n\n    /**\n     * Kyrgyzstani som\n     *\n     * @description Numeric code: 417\n     * @description Alphabetic code: KGS\n     * @description Countries and territories: Kyrgyzstan\n     * @description Currency symbol: c\n     */\n    KyrgyzstanSom = `417`,\n\n    /**\n     * United Arab Emirates dirham\n     *\n     * @description Numeric code: 784\n     * @description Alphabetic code: AED\n     * @description Countries and territories: United Arab Emirates\n     * @description Currency symbol: Dh\n     */\n    Dirham = `784`,\n}\n","/**\n * **Active ISO 4217 alphabetic currency codes**\n *\n * @description The ISO 4217 classification is used to describe alphabetic and numeric currency codes.\n * @description Alphabetic code is also called \"alfa-3\".\n *\n * @link https://en.wikipedia.org/wiki/ISO_4217\n */\nexport const enum TuiCurrency {\n    /**\n     * Russian ruble\n     *\n     * @description Numeric code: 643\n     * @description Alphabetic code: RUB\n     * @description Countries and territories: Russia\n     * @description Currency symbol: ₽\n     */\n    Ruble = `RUB`,\n\n    /**\n     * Euro\n     *\n     * @description Numeric code: 978\n     * @description Alphabetic code: EUR\n     * @description Countries and territories: Åland Islands (AX), European Union (EU), Andorra (AD), Austria (AT), Belgium (BE), Cyprus (CY), Estonia (EE), Finland (FI), France (FR), French Southern and Antarctic Lands (TF), Germany (DE), Greece (GR), Guadeloupe (GP), Ireland (IE), Italy (IT), Latvia (LV), Lithuania (LT), Luxembourg (LU), Malta (MT), French Guiana (GF), Martinique (MQ), Mayotte (YT), Monaco (MC), Montenegro (ME), Netherlands (NL), Portugal (PT), Réunion (RE), Saint Barthélemy (BL), Saint Martin (MF), Saint Pierre and Miquelon (PM), San Marino (SM), Slovakia (SK), Slovenia (SI), Spain (ES), Vatican City (VA)\n     * @description Currency symbol: €\n     */\n    Euro = `EUR`,\n\n    /**\n     * United States dollar\n     *\n     * @description Numeric code: 840\n     * @description Alphabetic code: USD\n     * @description Countries and territories: United States, American Samoa (AS), British Indian Ocean Territory (IO) (also uses GBP), British Virgin Islands (VG), Caribbean Netherlands (BQ – Bonaire, Sint Eustatius and Saba), Ecuador (EC), El Salvador (SV), Guam (GU), Marshall Islands (MH), Federated States of Micronesia (FM), Northern Mariana Islands (MP), Palau (PW), Panama (PA) (as well as Panamanian Balboa), Puerto Rico (PR), Timor-Leste (TL), Turks and Caicos Islands (TC), U.S. Virgin Islands (VI), United States Minor Outlying Islands (UM)\n     * @description Currency symbol: $\n     */\n    Dollar = `USD`,\n\n    /**\n     * Pound sterling\n     *\n     * @description Numeric code: 826\n     * @description Alphabetic code: GBP\n     * @description Countries and territories: United Kingdom, Isle of Man (IM, see Manx pound), Jersey (JE, see Jersey pound), Guernsey (GG, see Guernsey pound), Tristan da Cunha (SH-TA)\n     * @description Currency symbol: £\n     */\n    Pound = `GBP`,\n\n    /**\n     * Thai baht\n     *\n     * @description Numeric code: 764\n     * @description Alphabetic code: THB\n     * @description Countries and territories: Thailand\n     * @description Currency symbol: ฿\n     */\n    Baht = `THB`,\n\n    /**\n     * Turkish lira\n     *\n     * @description Numeric code: 949\n     * @description Alphabetic code: TRY\n     * @description Countries and territories: Turkey\n     * @description Currency symbol: ₺\n     */\n    TurkishLira = `TRY`,\n\n    /**\n     * Chinese yuan\n     *\n     * @description Numeric code: 156\n     * @description Alphabetic code: CNY\n     * @description Countries and territories: China\n     * @description Currency symbol: CN¥\n     */\n    YuanRenminbi = `CNY`,\n\n    /**\n     * Kazakhstani tenge\n     *\n     * @description Numeric code: 398\n     * @description Alphabetic code: KZT\n     * @description Countries and territories: Kazakhstan\n     * @description Currency symbol: ₸\n     */\n    Tenge = `KZT`,\n\n    /**\n     * Israeli new shekel\n     *\n     * @description Numeric code: 376\n     * @description Alphabetic code: ILS\n     * @description Countries and territories: Israel\n     * @description Currency symbol: ₪\n     */\n    IsraeliShekel = `ILS`,\n\n    /**\n     * Indian rupee\n     *\n     * @description Numeric code: 356\n     * @description Alphabetic code: INR\n     * @description Countries and territories: India, Bhutan\n     * @description Currency symbol: ₹\n     */\n    IndianRupee = `INR`,\n\n    /**\n     * Japanese yen\n     *\n     * @description Numeric code: 392\n     * @description Alphabetic code: JPY\n     * @description Countries and territories: Japan\n     * @description Currency symbol: ¥\n     */\n    Yen = `JPY`,\n\n    /**\n     * South Korean won\n     *\n     * @description Numeric code: 410\n     * @description Alphabetic code: KRW\n     * @description Countries and territories: South Korea\n     * @description Currency symbol: ₩\n     */\n    Won = `KRW`,\n\n    /**\n     * Swiss franc\n     *\n     * @description Numeric code: 756\n     * @description Alphabetic code: CHF\n     * @description Countries and territories: Switzerland, Liechtenstein (LI)\n     * @description Currency symbol: ₣\n     */\n    SwissFranc = `CHF`,\n\n    /**\n     * Singapore dollar\n     *\n     * @description Numeric code: 702\n     * @description Alphabetic code: SGD\n     * @description Countries and territories: Singapore\n     * @description Currency symbol: S$\n     */\n    SingaporeDollar = `SGD`,\n\n    /**\n     * Australian dollar\n     *\n     * @description Numeric code: 036\n     * @description Alphabetic code: AUD\n     * @description Countries and territories: Australia, Christmas Island (CX), Cocos (Keeling) Islands (CC), Heard Island and McDonald Islands (HM), Kiribati (KI), Nauru (NR), Norfolk Island (NF), Tuvalu (TV)\n     * @description Currency symbol: A$\n     */\n    AustralianDollar = `AUD`,\n\n    /**\n     * Hong Kong dollar\n     *\n     * @description Numeric code: 344\n     * @description Alphabetic code: HKD\n     * @description Countries and territories: Hong Kong\n     * @description Currency symbol: HK$\n     */\n    HongKongDollar = `HKD`,\n\n    /**\n     * @deprecated:\n     * TODO: 3.0 replace with {@link HongKongDollar}\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    HongKong_dollar = `HKD`,\n\n    /**\n     * Canadian dollar\n     *\n     * @description Numeric code: 124\n     * @description Alphabetic code: CAD\n     * @description Countries and territories: Canada\n     * @description Currency symbol: C$\n     */\n    CanadianDollar = `CAD`,\n\n    /**\n     * Armenian dram\n     *\n     * @description Numeric code: 051\n     * @description Alphabetic code: AMD\n     * @description Countries and territories: Armenia\n     * @description Currency symbol: ֏\n     */\n    ArmenianDram = `AMD`,\n\n    /**\n     * Ukrainian hryvnia\n     *\n     * @description Numeric code: 980\n     * @description Alphabetic code: UAH\n     * @description Countries and territories: Ukraine\n     * @description Currency symbol: ₴\n     */\n    Hryvnia = `UAH`,\n\n    /**\n     * Mexican peso\n     *\n     * @description Numeric code: 484\n     * @description Alphabetic code: MXN\n     * @description Countries and territories: Mexico\n     * @description Currency symbol: $\n     */\n    MexicanPeso = `MXN`,\n\n    /**\n     * Uzbek sum\n     *\n     * @description Numeric code: 860\n     * @description Alphabetic code: UZS\n     * @description Countries and territories: Uzbekistan\n     * @description Currency symbol: So'm\n     */\n    UzbekSum = `UZS`,\n\n    /**\n     * Kyrgyzstani som\n     *\n     * @description Numeric code: 417\n     * @description Alphabetic code: KGS\n     * @description Countries and territories: Kyrgyzstan\n     * @description Currency symbol: c\n     */\n    KyrgyzstanSom = `KGS`,\n\n    /**\n     * United Arab Emirates dirham\n     *\n     * @description Numeric code: 784\n     * @description Alphabetic code: AED\n     * @description Countries and territories: United Arab Emirates\n     * @description Currency symbol: Dh\n     */\n    Dirham = `AED`,\n}\n","export * from './currency';\nexport * from './currency-code';\nexport * from './money-sign';\nexport * from './payment-system';\n","/**\n * negative-only — show sign only for negative numbers\n * always — always show sign, except for zero\n * never — never show sign\n * force-negative — show minus no matter the number, except for zero\n * force-positive — show plus no matter the number, except for zero\n * @deprecated use join type {@link TuiMoneySignT}\n * TODO: delete in v3.0\n */\nexport const enum TuiMoneySign {\n    NegativeOnly = `negative-only`,\n    Always = `always`,\n    Never = `never`,\n    ForceNegative = `force-negative`,\n    ForcePositive = `force-positive`,\n}\n","export const enum TuiPaymentSystem {\n    Visa = `visa`,\n    Electron = `electron`,\n    Mastercard = `mastercard`,\n    Maestro = `maestro`,\n    Mir = `mir`,\n}\n\nexport type TuiPaymentSystemT = 'visa' | 'electron' | 'mastercard' | 'maestro' | 'mir';\n","export * from '@taiga-ui/addon-commerce/components';\nexport * from '@taiga-ui/addon-commerce/constants';\nexport * from '@taiga-ui/addon-commerce/enums';\nexport * from '@taiga-ui/addon-commerce/interfaces';\nexport * from '@taiga-ui/addon-commerce/pipes';\nexport * from '@taiga-ui/addon-commerce/tokens';\nexport * from '@taiga-ui/addon-commerce/types';\nexport * from '@taiga-ui/addon-commerce/utils';\nexport * from '@taiga-ui/addon-commerce/validators';\n","import {NgModule} from '@angular/core';\n\nimport {TuiCurrencyPipe} from './currency.pipe';\n\n@NgModule({\n    declarations: [TuiCurrencyPipe],\n    exports: [TuiCurrencyPipe],\n})\nexport class TuiCurrencyPipeModule {}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {TuiCurrencyVariants} from '@taiga-ui/addon-commerce/types';\nimport {formatCurrency} from '@taiga-ui/addon-commerce/utils';\n\n@Pipe({\n    name: `tuiCurrency`,\n})\nexport class TuiCurrencyPipe implements PipeTransform {\n    transform(currency: TuiCurrencyVariants): string {\n        return formatCurrency(currency);\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiFormatCardPipe} from './format-card.pipe';\n\n@NgModule({\n    declarations: [TuiFormatCardPipe],\n    exports: [TuiFormatCardPipe],\n})\nexport class TuiFormatCardModule {}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: `tuiFormatCard`})\nexport class TuiFormatCardPipe implements PipeTransform {\n    transform(value: string | null = ``, cardPrefilled: boolean = false): string {\n        return value && !cardPrefilled\n            ? value\n                  .split(``)\n                  .map((char, index) => (index && index % 4 === 0 ? ` ${char}` : char))\n                  .join(``)\n            : ``;\n    }\n}\n","export * from './currency/currency.module';\nexport * from './currency/currency.pipe';\nexport * from './format-card/format-card.module';\nexport * from './format-card/format-card.pipe';\n","import {InjectionToken} from '@angular/core';\nimport {extractI18n} from '@taiga-ui/i18n';\nimport {Observable, of} from 'rxjs';\n\nexport const TUI_CARD_NUMBER_TEXTS = new InjectionToken(`Number and card number i18n`, {\n    factory: extractI18n(`cardNumber`),\n});\n\nexport const TUI_CARD_EXPIRY_TEXTS = new InjectionToken(`Expiry and card expiry i18n`, {\n    factory: extractI18n(`cardExpiry`),\n});\n\nexport const TUI_CARD_CVC_TEXTS = new InjectionToken<Observable<[string, string]>>(\n    `Card CVC number text`,\n    {\n        factory: () => of([`CVC`, `CVC/CVV`]),\n    },\n);\n","export * from './i18n';\n","import {TUI_NON_DIGIT_REGEXP, TuiTextMaskPipeHandler} from '@taiga-ui/core';\n\nconst TUI_EXP_YEAR_MONTH = /^\\d{2}[/|.]\\d{4}$/;\nconst TUI_EXP_SAFARI = /^\\d{1,4}.\\d{1,2}.\\d{1,4}$/;\n\n/**\n * Correct expiration date text allowing only valid months\n * @internal\n *\n * @returns MM/YY\n */\nexport function tuiCreateAutoCorrectedExpirePipe(): TuiTextMaskPipeHandler {\n    return (conformedValue, {rawValue}) => {\n        // Autofilled with MM/YYYY format\n        if (TUI_EXP_YEAR_MONTH.test(rawValue)) {\n            conformedValue = `${rawValue.slice(0, 2)}/${rawValue.slice(5)}`;\n        }\n\n        // Autofilled with Safari crazy format\n        if (\n            rawValue.length > 7 &&\n            rawValue.length < 11 &&\n            TUI_EXP_SAFARI.test(rawValue)\n        ) {\n            const array = rawValue.split(TUI_NON_DIGIT_REGEXP);\n            const month = array[1];\n            const year = array.find(({length}) => length === 4);\n\n            conformedValue = `${`0`.repeat(2 - month.length)}${month}/${\n                year ? year.slice(2) : ``\n            }`;\n        }\n\n        const indexesOfPipedChars: number[] = [];\n        const conformedValueArr = conformedValue.split(``);\n\n        if (parseInt(conformedValueArr[0], 10) > 1) {\n            conformedValueArr[2] = `/`;\n            conformedValueArr[1] = conformedValueArr[0];\n            conformedValueArr[0] = `0`;\n            indexesOfPipedChars.push(0);\n        }\n\n        return {\n            value: conformedValueArr.join(``),\n            indexesOfPipedChars,\n        };\n    };\n}\n","import {TuiCurrencyVariants} from '@taiga-ui/addon-commerce/types';\nimport {padStart} from '@taiga-ui/cdk';\n\nimport {getCurrencySymbol} from './get-currency-symbol';\n\n/**\n * @deprecated: use {@link tuiFormatCurrency} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function formatCurrency(currency: TuiCurrencyVariants): string {\n    const stringifiedCurrency = stringifyCurrency(currency);\n\n    return getCurrencySymbol(stringifiedCurrency) || stringifiedCurrency;\n}\n\nexport const tuiFormatCurrency = formatCurrency;\n\nfunction stringifyCurrency(currency: TuiCurrencyVariants): string {\n    return currency === null || typeof currency === `string`\n        ? currency || ``\n        : padStart(String(currency), 3, `0`);\n}\n","import {TuiCurrency, TuiCurrencyCode} from '@taiga-ui/addon-commerce/enums';\nimport {TuiCurrencyVariants} from '@taiga-ui/addon-commerce/types';\n\n/**\n * @deprecated: use {@link tuiGetCurrencySymbol} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function getCurrencySymbol(currency: TuiCurrencyVariants): string | null {\n    switch (currency) {\n        case TuiCurrency.Ruble:\n        case TuiCurrencyCode.Ruble:\n            return `₽`;\n        case TuiCurrency.Dollar:\n        case TuiCurrencyCode.Dollar:\n        case TuiCurrency.MexicanPeso:\n        case TuiCurrencyCode.MexicanPeso:\n            return `$`;\n        case TuiCurrency.SingaporeDollar:\n        case TuiCurrencyCode.SingaporeDollar:\n            return `S$`;\n        case TuiCurrency.AustralianDollar:\n        case TuiCurrencyCode.AustralianDollar:\n            return `A$`;\n        case TuiCurrency.HongKongDollar:\n        case TuiCurrencyCode.HongKongDollar:\n            return `HK$`;\n        case TuiCurrency.CanadianDollar:\n        case TuiCurrencyCode.CanadianDollar:\n            return `C$`;\n        case TuiCurrency.Euro:\n        case TuiCurrencyCode.Euro:\n            return `€`;\n        case TuiCurrency.Pound:\n        case TuiCurrencyCode.Pound:\n            return `£`;\n        case TuiCurrency.Baht:\n        case TuiCurrencyCode.Baht:\n            return `฿`;\n        case TuiCurrency.TurkishLira:\n        case TuiCurrencyCode.TurkishLira:\n            return `₺`;\n        case TuiCurrency.YuanRenminbi:\n        case TuiCurrencyCode.YuanRenminbi:\n            return `CN¥`;\n        case TuiCurrency.Yen:\n        case TuiCurrencyCode.Yen:\n            return `¥`;\n        case TuiCurrency.IsraeliShekel:\n        case TuiCurrencyCode.IsraeliShekel:\n            return `₪`;\n        case TuiCurrency.IndianRupee:\n        case TuiCurrencyCode.IndianRupee:\n            return `₹`;\n        case TuiCurrency.SwissFranc:\n        case TuiCurrencyCode.SwissFranc:\n            return `₣`;\n        case TuiCurrency.ArmenianDram:\n        case TuiCurrencyCode.ArmenianDram:\n            return `֏`;\n        case TuiCurrency.Won:\n        case TuiCurrencyCode.Won:\n            return `₩`;\n        case TuiCurrency.Tenge:\n        case TuiCurrencyCode.Tenge:\n            return `₸`;\n        case TuiCurrency.Hryvnia:\n        case TuiCurrencyCode.Hryvnia:\n            return `₴`;\n        case TuiCurrency.UzbekSum:\n        case TuiCurrencyCode.UzbekSum:\n            return `So'm`;\n        case TuiCurrency.KyrgyzstanSom:\n        case TuiCurrencyCode.KyrgyzstanSom:\n            return `c`;\n        case TuiCurrency.Dirham:\n        case TuiCurrencyCode.Dirham:\n            return `Dh`;\n        default:\n            return null;\n    }\n}\n\nexport const tuiGetCurrencySymbol = getCurrencySymbol;\n","import {TuiPaymentSystem} from '@taiga-ui/addon-commerce/enums';\n\n/**\n * @deprecated: use {@link tuiGetPaymentSystem} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function getPaymentSystem(cardNumber: string): TuiPaymentSystem | null {\n    if (cardNumber === ``) {\n        return null;\n    }\n\n    const one = Number.parseInt(cardNumber[0], 10);\n    const two = Number.parseInt(cardNumber.slice(0, 2), 10);\n    const three = Number.parseInt(cardNumber.slice(0, 3), 10);\n    const four = Number.parseInt(cardNumber.slice(0, 4), 10);\n\n    if (isMaestro(three, two, one)) {\n        return TuiPaymentSystem.Maestro;\n    }\n\n    if (isMastercard(four, two, one)) {\n        return TuiPaymentSystem.Mastercard;\n    }\n\n    if (isMir(four)) {\n        return TuiPaymentSystem.Mir;\n    }\n\n    if (isElectron(four)) {\n        return TuiPaymentSystem.Electron;\n    }\n\n    if (isVisa(one)) {\n        return TuiPaymentSystem.Visa;\n    }\n\n    return null;\n}\n\nexport const tuiGetPaymentSystem = getPaymentSystem;\n\n/**\n * @deprecated: use {@link tuiIsMaestro} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isMaestro(three: number, two: number, one: number): boolean {\n    if (one === 6) {\n        return true;\n    }\n\n    if (two === 50 || (two > 55 && two < 59)) {\n        return true;\n    }\n\n    if (three < 500) {\n        return false;\n    }\n\n    return three < 510;\n}\n\nexport const tuiIsMaestro = isMaestro;\n\n/**\n * @deprecated: use {@link tuiIsMastercard} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isMastercard(four: number, two: number, one: number): boolean {\n    if (one === 5) {\n        return true;\n    }\n\n    if (two < 10) {\n        return false;\n    }\n\n    if (two > 50 && two < 56) {\n        return true;\n    }\n\n    if (four < 1000) {\n        return false;\n    }\n\n    return four > 2220 && four < 2721;\n}\n\nexport const tuiIsMastercard = isMastercard;\n\n/**\n * @deprecated: use {@link tuiIsMir} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isMir(four: number): boolean {\n    return four > 2199 && four < 2205;\n}\n\nexport const tuiIsMir = isMir;\n\n/**\n * @deprecated: use {@link tuiIsElectron} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isElectron(four: number): boolean {\n    switch (four) {\n        case 4026:\n        case 4175:\n        case 4405:\n        case 4508:\n        case 4844:\n        case 4913:\n        case 4917:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport const tuiIsElectron = isElectron;\n\n/**\n * @deprecated: use {@link tuiIsVisa} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isVisa(one: number): boolean {\n    return one === 4;\n}\n\nexport const tuiIsVisa = isVisa;\n","export * from './create-auto-corrected-expire-pipe';\nexport * from './format-currency';\nexport * from './get-currency-symbol';\nexport * from './get-payment-system';\nexport * from './is-card-length-valid';\nexport * from './is-card-number-valid';\nexport * from './is-expire-valid';\n","import {TuiPaymentSystem} from '@taiga-ui/addon-commerce/enums';\n\nimport {getPaymentSystem} from './get-payment-system';\n\n/**\n * @deprecated: use {@link tuiIsCardLengthValid} instead\n * Validates card number length using payment system dictionary\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isCardLengthValid(cardNumber: string): boolean {\n    const {length} = cardNumber;\n    const paymentSystem = getPaymentSystem(cardNumber);\n\n    switch (paymentSystem) {\n        case TuiPaymentSystem.Electron:\n            return length === 16;\n        case TuiPaymentSystem.Maestro:\n            return length > 11 && length < 20;\n        case TuiPaymentSystem.Mastercard:\n        case TuiPaymentSystem.Mir:\n            return length > 15 && length < 20;\n        case TuiPaymentSystem.Visa:\n            return length > 12 && length < 20;\n        default:\n            return length > 8 && length < 20;\n    }\n}\n\nexport const tuiIsCardLengthValid = isCardLengthValid;\n","import {TUI_NON_DIGITS_REGEXP} from '@taiga-ui/core';\n\n/**\n * @deprecated: use {@link tuiIsCardNumberValid} instead\n * Validates card number using Luhn algorithm\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isCardNumberValid(value: string | number): boolean {\n    const cardNumber = String(value).replace(TUI_NON_DIGITS_REGEXP, ``);\n\n    const {length} = cardNumber;\n    const arr = cardNumber.split(``).map((char, index) => {\n        const digit = parseInt(char, 10);\n\n        if ((index + length) % 2 === 0) {\n            const digitX2 = digit * 2;\n\n            return digitX2 > 9 ? digitX2 - 9 : digitX2;\n        }\n\n        return digit;\n    });\n\n    return !(arr.reduce((a, b) => a + b, 0) % 10);\n}\n\nexport const tuiIsCardNumberValid = isCardNumberValid;\n","/**\n * @deprecated: use {@link tuiIsExpireValid} instead\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function isExpireValid(expire: string): boolean {\n    const today = new Date();\n    const currentMonth = today.getMonth();\n    const currentYear = today.getFullYear() - 2000;\n    const month = parseInt(expire.slice(0, 2), 0);\n    const year = parseInt(expire.slice(-2), 0);\n\n    return year > currentYear || (year === currentYear && month >= currentMonth);\n}\n\nexport const tuiIsExpireValid = isExpireValid;\n","import {AbstractControl, ValidationErrors} from '@angular/forms';\nimport {isExpireValid} from '@taiga-ui/addon-commerce/utils';\nimport {TuiValidationError} from '@taiga-ui/cdk';\n\nexport function tuiCardExpireValidator({\n    value,\n}: AbstractControl): ValidationErrors | null {\n    return value?.expire?.length === 5 && !isExpireValid(value?.expire)\n        ? {expire: new TuiValidationError(`Expire date`)}\n        : null;\n}\n","import {AbstractControl, ValidationErrors} from '@angular/forms';\nimport {isCardNumberValid} from '@taiga-ui/addon-commerce/utils';\nimport {TuiValidationError} from '@taiga-ui/cdk';\n\nexport function tuiCardNumberValidator({\n    value,\n}: AbstractControl): ValidationErrors | null {\n    return value?.card && !isCardNumberValid(value.card)\n        ? {card: new TuiValidationError(`Invalid card number`)}\n        : null;\n}\n","export * from './card-expire.validator';\nexport * from './card-number.validator';\nexport * from './luhn.validator';\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {isCardNumberValid} from '@taiga-ui/addon-commerce/utils';\nimport {TuiValidationError} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nexport function tuiCreateLuhnValidator(message: PolymorpheusContent): ValidatorFn {\n    return ({value}: AbstractControl) => {\n        return isCardNumberValid(value) ? null : {luhn: new TuiValidationError(message)};\n    };\n}\n"],"sourceRoot":"webpack:///"}