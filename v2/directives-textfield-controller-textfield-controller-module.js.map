{"version":3,"sources":["./src/modules/components/abstract/inherited-documentation/abstract-props-accessor.ts","./src/modules/directives/textfield-controller/examples/1/index.ts","./src/modules/directives/textfield-controller/examples/1/index.html","./src/modules/directives/textfield-controller/textfield-controller.component.ts","./src/modules/directives/textfield-controller/textfield-controller.template.html","./src/modules/directives/textfield-controller/textfield-controller.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAA6C;AAItC,MAAM,uBAAuB,GAChC,IAAI,4DAAc,CACd,yCAAyC,CAC5C,CAAC;;;;;;;;;;;;;ACPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACuB;AACL;;;;;;AAQnD,MAAM,8BAA8B;;4GAA9B,8BAA8B;8GAA9B,8BAA8B;QCT3C,yEAII;QACA,6FAAyD;QAAA,+DAAI;QAAA,4DAA0B;QAC3F,4DAAM;;QAJF,qFAA4B;;6FDOnB,8BAA8B;cAN1C,uDAAS;eAAC;gBACP,QAAQ,EAAE,oCAAoC;gBAC9C,WAAW,EAAE,cAAc;gBAC3B,+FAAe;gBACf,wFAAa;aAChB;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACe;AACQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICKvD,oEACI;IADJ,oEACI;IACA,uEAKI;IAAA,kEAAM;IACV,4DAAI;IAER,yDAAI;IAAJ,4DAAI;IAEJ,oEACI;IADJ,oEACI;IAEA,uEAKI;IAAA,kEAAM;IACV,4DAAI;IAER,yDAAI;IAAJ,4DAAI;IAEJ,oEACI;IADJ,gEACI;IAEJ,4DAAI;IAEJ,sFAMI;IANJ,wEAMI;IAAA,iGAAyE;IAC7E,4DAAkB;;;IAHd,2DAAoB;IAApB,oFAAoB;;;IAShB,gFASI;IAAA,kEACJ;IAAA,4DAAY;;;IATR,uFAAuB;;;;;;;;;;;;IAqB3B,kEAAM;IAEN,mEAKI;;;;;;;;;;;;;;;;;;;;;;;;IAsBJ,kEAAM;IAEN,mEAII;;;;;;;;;;;;;;;;;;;;;;;;IAoBJ,kEAAM;;;;;;;;;;;;;IAWN,wEAII;IAAA,kEAAM;IACV,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8BJ,kEAAM;;;;;IA7Hd,kFACI;IAAA,6JACI;IAYR,4DAAe;IACf,wFACI;IAAA,gKAQI;IAFA,gaAA6C;IAajD,gKAOI;IAFA,2ZAAwC;IAI5C,gKAQI;IAFA,yaAAsD;IAY1D,gKAOI;IAFA,+ZAA4C;IAIhD,iKAQI;IAFA,6ZAA0C;IAK9C,iKAOI;IAFA,gaAA6C;IAUjD,iKAQI;IAFA,6ZAA0C;IAI9C,mKAQI;IAFA,yZAAqC;IAIzC,mKAQI;IAFA,yZAAqC;IAK7C,4DAAwB;;;IAhIV,mFAAmB;IAqBzB,0DAAoD;IAApD,oHAAoD;IAmBpD,0DAAwC;IAAxC,sGAAwC;IASxC,0DAAqD;IAArD,qHAAqD;IAkBrD,0DAA4C;IAA5C,0GAA4C;IAS5C,0DAAiD;IAAjD,iHAAiD;IAWjD,0DAA6C;IAA7C,2GAA6C;IAe7C,0DAAiD;IAAjD,iHAAiD;IAUjD,0DAA4C;IAA5C,4GAA4C;IAU5C,0DAA4C;IAA5C,4GAA4C;;;;;;;;;;;;;;;;;;;IAapD,yEACI;IAAA,qEACI;IAAA,oEACI;IADJ,qEACI;IACA,kEAAM;IAEV,yDAAI;IAAJ,4DAAI;IAEJ,8EAGgB;IACpB,4DAAK;IAEL,qEACI;IAAA,oEAAQ;IAAR,gEAAQ;IAA8C,4DAAI;IAE1D,8EAGgB;IACpB,4DAAK;IACT,4DAAK;;;IAZO,0DAAsB;IAAtB,sFAAsB;IAStB,0DAAoB;IAApB,oFAAoB;;AD9LjC,MAAM,sCAAsC;IALnD;QAMa,kBAAa,GAAG,8VAAyD,CAAC;QAC1E,gBAAW,GAAG,sWAA2D,CAAC;QAE1E,aAAQ,GAAkB;YAC/B,UAAU,EAAE,0SAA4C;YACxD,IAAI,EAAE,kTAA8C;SACvD,CAAC;QAEO,iBAAY,GAAuC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAEnE,sBAAiB,GAA6B,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAElE,sBAAiB,GAAsB,CAAC,EAAE,CAAC,CAAC;QAE5C,iBAAY,GAA6B;YAC9C,MAAM;YACN,OAAO;YACP,UAAU;YACV,KAAK;YACL,KAAK;SACR,CAAC;QAEF,SAAI,GAAkB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAElC,0BAAqB,GAAG,CAAC,MAAM,CAAC,CAAC;QAE1C,0BAAqB,GAAkB,IAAI,CAAC;QAE5C,yBAAoB,GAAqC;YACrD,EAAE;YACF,KAAK;YACL,SAAS;YACT,WAAW;YACX,cAAc;YACd,aAAa;YACb,SAAS;YACT,YAAY;YACZ,iBAAiB;YACjB,aAAa;YACb,UAAU;YACV,OAAO;YACP,gBAAgB;YAChB,aAAa;YACb,cAAc;SACjB,CAAC;QAEF,iBAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;QAC5C,YAAO,GAAG,KAAK,CAAC;QAChB,gBAAW,GAAG,EAAE,CAAC;QACjB,iBAAY,GAAG,KAAK,CAAC;QACrB,SAAI,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC5B,cAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACtC,cAAS,GAAkB,IAAI,CAAC;QAEvB,YAAO,GAAG,IAAI,0DAAW,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;KAClE;;4HAxDY,sCAAsC;sHAAtC,sCAAsC;QCZnD,kFAMI;QANJ,sEAMI;QAAA,mJACI;QAwCJ,oJACI;QAmIJ,mJAII;QAJJ,sEAII;QAwBR,4DAAe;;6FDnMF,sCAAsC;cALlD,uDAAS;eAAC;gBACP,QAAQ,EAAE,kCAAkC;gBAC5C,WAAW,EAAE,sCAAsC;gBACnD,+FAAe;aAClB;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACN;AACyB;AACnB;AACyB;AAM9C;AACqB;AAEiH;AAClG;AAC4B;;;AAsBjF,MAAM,mCAAmC;;kHAAnC,mCAAmC;gMAAnC,mCAAmC,kBAnBnC;YACL,4DAAY;YACZ,kEAAmB;YACnB,4DAAa;YACb,0EAA2B;YAC3B,2EAA4B;YAC5B,sEAAuB;YACvB,qEAAiB;YACjB,4DAAc;YACd,wKAAsC;YACtC,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,0EAAc,CAAC,sGAAsC,CAAC,CAAC;SAChF;mIAOQ,mCAAmC,mBALxC,sGAAsC;QACtC,0EAA8B,aAd9B,4DAAY;QACZ,kEAAmB;QACnB,4DAAa;QACb,0EAA2B;QAC3B,2EAA4B;QAC5B,sEAAuB;QACvB,qEAAiB;QACjB,4DAAc;QACd,wKAAsC;QACtC,0DAAW,2EAOL,sGAAsC;6FAEvC,mCAAmC;cApB/C,sDAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,4DAAY;oBACZ,kEAAmB;oBACnB,4DAAa;oBACb,0EAA2B;oBAC3B,2EAA4B;oBAC5B,sEAAuB;oBACvB,qEAAiB;oBACjB,4DAAc;oBACd,wKAAsC;oBACtC,0DAAW;oBACX,4DAAY,CAAC,QAAQ,CAAC,0EAAc,CAAC,sGAAsC,CAAC,CAAC;iBAChF;gBACD,YAAY,EAAE;oBACV,sGAAsC;oBACtC,0EAA8B;iBACjC;gBACD,OAAO,EAAE,CAAC,sGAAsC,CAAC;aACpD","file":"directives-textfield-controller-textfield-controller-module.js","sourcesContent":["import {InjectionToken} from '@angular/core';\n\nimport {TuiSupportingDocumentationComponent} from './supporting-documentation-component';\n\nexport const ABSTRACT_PROPS_ACCESSOR =\n    new InjectionToken<TuiSupportingDocumentationComponent>(\n        `Component extends AbstractExample class`,\n    );\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-textfield-controller-example-1`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTextfieldControllerExample1 {}\n","<!-- Works in several levels-->\n<div\n    class=\"wrapper tui-space_top-3\"\n    [tuiTextfieldCleaner]=\"true\"\n>\n    <!-- You can also put directive directly on textfield -->\n    <tui-primitive-textfield tuiTextfieldExampleText=\"Hello\">Cool</tui-primitive-textfield>\n</div>\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\nimport {TuiAutofillFieldName, TuiInputModeT, TuiInputTypeT} from '@taiga-ui/cdk';\nimport {TuiSizeL, TuiSizeS} from '@taiga-ui/core';\n\n@Component({\n    selector: `example-tui-textfield-controller`,\n    templateUrl: `./textfield-controller.template.html`,\n    changeDetection,\n})\nexport class ExampleTuiTextfieldControllerComponent {\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n    };\n\n    readonly sizeVariants: ReadonlyArray<TuiSizeS | TuiSizeL> = [`s`, `m`, `l`];\n\n    readonly inputModeVariants: readonly TuiInputModeT[] = [`text`, `numeric`];\n\n    readonly maxLengthVariants: readonly number[] = [10];\n\n    readonly typeVariants: readonly TuiInputTypeT[] = [\n        `text`,\n        `email`,\n        `password`,\n        `tel`,\n        `url`,\n    ];\n\n    type: TuiInputTypeT = this.typeVariants[0];\n\n    readonly customContentVariants = [`Bell`];\n\n    customContentSelected: string | null = null;\n\n    autocompleteVariants: Array<TuiAutofillFieldName | ''> = [\n        ``,\n        `off`,\n        `cc-name`,\n        `cc-number`,\n        `cc-exp-month`,\n        `cc-exp-year`,\n        `cc-type`,\n        `given-name`,\n        `additional-name`,\n        `family-name`,\n        `username`,\n        `email`,\n        `street-address`,\n        `postal-code`,\n        `country-name`,\n    ];\n\n    autocomplete = this.autocompleteVariants[0];\n    cleaner = false;\n    exampleText = ``;\n    labelOutside = false;\n    size = this.sizeVariants[2];\n    inputMode = this.inputModeVariants[0];\n    maxLength: number | null = null;\n\n    readonly control = new FormControl(`111`, Validators.required);\n}\n","<tui-doc-page\n    i18n-header\n    header=\"TextfieldController\"\n    package=\"CORE\"\n    type=\"directives\"\n>\n    <ng-template pageTab>\n        <p i18n>\n            Directive allows to customize\n            <a\n                tuiLink\n                target=\"_blank\"\n                routerLink=\"/components/primitive-textfield\"\n            >\n                <code>TuiPrimitiveTextfield</code>\n            </a>\n            with parameters that it adds into DI tree.\n        </p>\n\n        <p i18n>\n            That means that you can use the directive on any root element and it will customize all textfields in this\n            scope. Most Taiga UI form controls are based on\n            <a\n                tuiLink\n                target=\"_blank\"\n                routerLink=\"/components/primitive-textfield\"\n            >\n                <code>TuiPrimitiveTextfield</code>\n            </a>\n            and thus accept these options.\n        </p>\n\n        <p i18n>\n            If there are several controllers above textfield, their values will be merged. The nearest directives are in\n            priority.\n        </p>\n\n        <tui-doc-example\n            id=\"base\"\n            i18n-heading\n            heading=\"Basic\"\n            [content]=\"example1\"\n        >\n            <tui-textfield-controller-example-1></tui-textfield-controller-example-1>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        <tui-doc-demo [control]=\"control\">\n            <ng-template>\n                <tui-input\n                    [formControl]=\"control\"\n                    [tuiTextfieldAutocomplete]=\"autocomplete\"\n                    [tuiTextfieldCleaner]=\"cleaner\"\n                    [tuiTextfieldLabelOutside]=\"labelOutside\"\n                    [tuiTextfieldInputMode]=\"inputMode\"\n                    [tuiTextfieldSize]=\"size\"\n                    [tuiTextfieldExampleText]=\"exampleText\"\n                >\n                    Hello\n                </tui-input>\n            </ng-template>\n        </tui-doc-demo>\n        <tui-doc-documentation>\n            <ng-template\n                i18n\n                documentationPropertyName=\"tuiTextfieldAutocomplete\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiAutofillFieldName | null\"\n                [documentationPropertyValues]=\"autocompleteVariants\"\n                [(documentationPropertyValue)]=\"autocomplete\"\n            >\n                <code>autocomplete</code>\n                attribute for a native input (\n                <a\n                    tuiLink\n                    target=\"_blanl\"\n                    href=\"https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#inappropriate-for-the-control\"\n                >\n                    see names\n                </a>\n                )\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"tuiTextfieldCleaner\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"cleaner\"\n            >\n                Shows a cross to reset a value\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"tuiTextfieldCustomContent\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"PolymorpheusContent\"\n                [documentationPropertyValues]=\"customContentVariants\"\n                [(documentationPropertyValue)]=\"customContentSelected\"\n            >\n                Right content (e.g. avatar with maximum size 32x32px). If it gets a string, it is inserted as\n                <code>src</code>\n                or as icon name into\n                <a\n                    routerLink=\"/components/svg\"\n                    tuiLink\n                >\n                    tui-svg\n                </a>\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"tuiTextfieldExampleText\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"string\"\n                [(documentationPropertyValue)]=\"exampleText\"\n            >\n                Example text shown on empty focused input\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"tuiTextfieldInputMode\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiInputModeT\"\n                [documentationPropertyValues]=\"inputModeVariants\"\n                [(documentationPropertyValue)]=\"inputMode\"\n            >\n                <code>inputmode</code>\n                attribute for a native input. You can use it to set screen keyboard view on mobile devices\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"tuiTextfieldLabelOutside\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"labelOutside\"\n            >\n                Label is outside a component and made with\n                <a\n                    tuiLink\n                    routerLink=\"/components/label\"\n                >\n                    <code>Label</code>\n                </a>\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"tuiTextfieldMaxLength\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"number | null\"\n                [documentationPropertyValues]=\"maxLengthVariants\"\n                [(documentationPropertyValue)]=\"maxLength\"\n            >\n                Maximum number of symbols to type. Does not with with mask together\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"tuiTextfieldSize\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiSizeS | TuiSizeL\"\n                [documentationPropertyValues]=\"sizeVariants\"\n                [(documentationPropertyValue)]=\"size\"\n            >\n                Size\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"tuiTextfieldType\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiInputTypeT\"\n                [documentationPropertyValues]=\"typeVariants\"\n                [(documentationPropertyValue)]=\"type\"\n            >\n                <code>type</code>\n                attribute for a native input\n            </ng-template>\n        </tui-doc-documentation>\n    </ng-template>\n\n    <ng-template\n        i18n-pageTab\n        pageTab=\"Setup\"\n    >\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Import\n                    <code>TuiTextfieldControllerModule</code>\n                    in the same module where you want to use the directive:\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Use it on Taiga UI controls or parent elements</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {\n    TuiHintControllerModule,\n    TuiLinkModule,\n    TuiPrimitiveTextfieldModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TuiInputModule} from '@taiga-ui/kit';\n\nimport {TextfieldControllerDocumentationModule} from '../../components/abstract/textfield-controller-documentation/textfield-controller-documentation.module';\nimport {TuiTextfieldControllerExample1} from './examples/1';\nimport {ExampleTuiTextfieldControllerComponent} from './textfield-controller.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        TuiLinkModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiHintControllerModule,\n        TuiAddonDocModule,\n        TuiInputModule,\n        TextfieldControllerDocumentationModule,\n        FormsModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiTextfieldControllerComponent)),\n    ],\n    declarations: [\n        ExampleTuiTextfieldControllerComponent,\n        TuiTextfieldControllerExample1,\n    ],\n    exports: [ExampleTuiTextfieldControllerComponent],\n})\nexport class ExampleTuiTextfieldControllerModule {}\n"],"sourceRoot":"webpack:///"}