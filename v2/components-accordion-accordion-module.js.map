{"version":3,"sources":["./src/modules/components/accordion/accordion.component.ts","./src/modules/components/accordion/accordion.template.html","./src/modules/components/accordion/accordion.module.ts","./src/modules/components/accordion/examples/1/index.ts","./src/modules/components/accordion/examples/1/index.html","./src/modules/components/accordion/examples/2/index.ts","./src/modules/components/accordion/examples/2/index.html","./src/modules/components/accordion/examples/3/index.ts","./src/modules/components/accordion/examples/3/index.html","./src/modules/components/accordion/examples/4/index.ts","./src/modules/components/accordion/examples/4/index.html"],"names":[],"mappings":"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","file":"components-accordion-accordion-module.js","sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {Component, ElementRef, Inject, ViewChild} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\nimport {tuiCustomEvent} from '@taiga-ui/cdk';\nimport {TUI_EXPAND_LOADED, TuiSizeS} from '@taiga-ui/core';\n\n@Component({\n    selector: `example-accordion`,\n    templateUrl: `./accordion.template.html`,\n    changeDetection,\n})\nexport class ExampleTuiAccordionComponent {\n    @ViewChild(`content`)\n    content?: ElementRef;\n\n    async = false;\n    closeOthers = true;\n    disabled = false;\n    noPadding = false;\n    open = false;\n    rounded = true;\n    showArrow = true;\n    disableHover = false;\n\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n        LESS: import(`!!raw-loader!./examples/1/index.less`),\n    };\n\n    readonly example2: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/2/index.ts`),\n        HTML: import(`!!raw-loader!./examples/2/index.html`),\n        LESS: import(`!!raw-loader!./examples/2/index.less`),\n    };\n\n    readonly example3: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/3/index.ts`),\n        HTML: import(`!!raw-loader!./examples/3/index.html`),\n        LESS: import(`!!raw-loader!./examples/3/index.less`),\n    };\n\n    readonly example4: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/4/index.ts`),\n        HTML: import(`!!raw-loader!./examples/4/index.html`),\n        LESS: import(`!!raw-loader!./examples/4/index.less`),\n    };\n\n    readonly bordersVariants = [`all`, `top-bottom`] as const;\n\n    borders: 'all' | 'top-bottom' = this.bordersVariants[0];\n\n    readonly sizeVariants: readonly TuiSizeS[] = [`s`, `m`];\n\n    size: TuiSizeS = this.sizeVariants[1];\n\n    constructor(@Inject(DOCUMENT) private readonly documentRef: Document) {}\n\n    onOpenChange(open: boolean): void {\n        this.open = open;\n\n        if (!this.async || !open) {\n            return;\n        }\n\n        setTimeout(() => {\n            const event = tuiCustomEvent(\n                TUI_EXPAND_LOADED,\n                {bubbles: true},\n                this.documentRef,\n            );\n\n            if (this.content) {\n                this.content.nativeElement.dispatchEvent(event);\n            }\n        }, 3000);\n    }\n}\n","<tui-doc-page\n    header=\"Accordion\"\n    package=\"KIT\"\n    type=\"components\"\n>\n    <ng-template pageTab>\n        <p i18n>An element that allows to show and hide content in sections</p>\n\n        <p i18n>Only one section of accordion can be opened by default</p>\n\n        <tui-doc-example\n            id=\"base\"\n            i18n-heading\n            heading=\"Basic\"\n            [content]=\"example1\"\n        >\n            <tui-accordion-example-1></tui-accordion-example-1>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"custom\"\n            i18n-heading\n            heading=\"with custom design\"\n            [content]=\"example2\"\n        >\n            <tui-accordion-example-2></tui-accordion-example-2>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"single\"\n            i18n-heading\n            heading=\"alone\"\n            [content]=\"example3\"\n        >\n            <tui-accordion-example-3></tui-accordion-example-3>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"eagerAndLazy\"\n            i18n-heading\n            heading=\"Eager and Lazy content\"\n            [content]=\"example4\"\n        >\n            <tui-accordion-example-4></tui-accordion-example-4>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        <tui-doc-demo>\n            <tui-accordion\n                [closeOthers]=\"closeOthers\"\n                [rounded]=\"rounded\"\n            >\n                <tui-accordion-item\n                    [borders]=\"borders\"\n                    [disabled]=\"disabled\"\n                    [noPadding]=\"noPadding\"\n                    [size]=\"size\"\n                    [showArrow]=\"showArrow\"\n                    [disableHover]=\"disableHover\"\n                >\n                    Taiga UI cdk\n                    <ng-template tuiAccordionItemContent>\n                        Development kit consisting of the low level tools and abstractions used to develop Taiga UI\n                        Angular entities\n                    </ng-template>\n                </tui-accordion-item>\n                <tui-accordion-item\n                    [borders]=\"borders\"\n                    [disabled]=\"disabled\"\n                    [noPadding]=\"noPadding\"\n                    [size]=\"size\"\n                    [showArrow]=\"showArrow\"\n                    [disableHover]=\"disableHover\"\n                    [async]=\"async\"\n                    [open]=\"open\"\n                    (openChange)=\"onOpenChange($event)\"\n                >\n                    Taiga UI core\n                    <ng-template tuiAccordionItemContent>\n                        <div #content>\n                            Basic elements needed to develop components, directives and more using Taiga UI design\n                            system\n                        </div>\n                    </ng-template>\n                </tui-accordion-item>\n            </tui-accordion>\n        </tui-doc-demo>\n\n        <tui-accordion\n            class=\"b-full-width\"\n            [closeOthers]=\"false\"\n        >\n            <tui-accordion-item [open]=\"true\">\n                TuiAccordionComponent\n                <ng-template tuiAccordionItemContent>\n                    <tui-doc-documentation>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"closeOthers\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"closeOthers\"\n                        >\n                            Other sections are closed when user opens one\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"rounded\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"rounded\"\n                        >\n                            Rounded accordion style\n                        </ng-template>\n                    </tui-doc-documentation>\n                </ng-template>\n            </tui-accordion-item>\n            <tui-accordion-item>\n                TuiAccordionItemComponent\n                <ng-template tuiAccordionItemContent>\n                    <tui-doc-documentation>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"async\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"async\"\n                        >\n                            Waits for a custom event\n                            <code>TUI_EXPAND_LOADED</code>\n                            before opening. Content is initialized when opening starts\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"borders\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"'all' | 'top-bottom' | null\"\n                            [documentationPropertyValues]=\"bordersVariants\"\n                            [(documentationPropertyValue)]=\"borders\"\n                        >\n                            Borders variants\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"disabled\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"disabled\"\n                        >\n                            Disabled state for an item\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"noPadding\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"noPadding\"\n                        >\n                            Removes default paddings\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"disableHover\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"disableHover\"\n                        >\n                            Disabled header hover state\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"open\"\n                            documentationPropertyMode=\"input-output\"\n                            documentationPropertyType=\"boolean\"\n                            [documentationPropertyValue]=\"open\"\n                            (documentationPropertyValueChange)=\"onOpenChange($event)\"\n                        >\n                            Open / close state of section\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"size\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"TuiSizeS\"\n                            [documentationPropertyValues]=\"sizeVariants\"\n                            [(documentationPropertyValue)]=\"size\"\n                        >\n                            Size of an accordion item\n                        </ng-template>\n                        <ng-template\n                            i18n\n                            documentationPropertyName=\"showArrow\"\n                            documentationPropertyMode=\"input\"\n                            documentationPropertyType=\"boolean\"\n                            [(documentationPropertyValue)]=\"showArrow\"\n                        >\n                            Show / hide an arrow\n                        </ng-template>\n                    </tui-doc-documentation>\n                </ng-template>\n            </tui-accordion-item>\n        </tui-accordion>\n    </ng-template>\n\n    <ng-template pageTab>\n        <ol class=\"b-demo-steps\">\n            <li i18n>\n                Import\n                <code>TuiAccordionModule</code>\n                into a module where you want to use our component\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li i18n>\n                Add it into template:\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {TuiMoneyModule} from '@taiga-ui/addon-commerce';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {\n    TuiButtonModule,\n    TuiDataListModule,\n    TuiModeModule,\n    TuiSvgModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {\n    TuiAccordionModule,\n    TuiDataListWrapperModule,\n    TuiInputModule,\n    TuiSelectModule,\n} from '@taiga-ui/kit';\n\nimport {ExampleTuiAccordionComponent} from './accordion.component';\nimport {TuiAccordionExample1} from './examples/1';\nimport {TuiAccordionExample2} from './examples/2';\nimport {TuiAccordionExample3} from './examples/3';\nimport {TuiAccordionExample4} from './examples/4';\n\n@NgModule({\n    imports: [\n        TuiButtonModule,\n        TuiInputModule,\n        TuiSelectModule,\n        TuiMoneyModule,\n        TuiSvgModule,\n        TuiAccordionModule,\n        TuiModeModule,\n        TuiDataListModule,\n        TuiDataListWrapperModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TuiTextfieldControllerModule,\n        TuiAddonDocModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiAccordionComponent)),\n    ],\n    declarations: [\n        ExampleTuiAccordionComponent,\n        TuiAccordionExample1,\n        TuiAccordionExample2,\n        TuiAccordionExample3,\n        TuiAccordionExample4,\n    ],\n    exports: [ExampleTuiAccordionComponent],\n})\nexport class ExampleTuiAccordionModule {}\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-accordion-example-1`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiAccordionExample1 {}\n","<tui-accordion class=\"container\">\n    <tui-accordion-item>\n        Taiga UI cdk\n        <ng-template tuiAccordionItemContent>\n            Development kit consisting of the low level tools and abstractions used to develop Taiga UI Angular entities\n        </ng-template>\n    </tui-accordion-item>\n    <tui-accordion-item>\n        Taiga UI core\n        <ng-template tuiAccordionItemContent>\n            <div #content>\n                Basic elements needed to develop components, directives and more using Taiga UI design system\n            </div>\n        </ng-template>\n    </tui-accordion-item>\n    <tui-accordion-item>\n        Taiga UI kit\n        <ng-template tuiAccordionItemContent>\n            The main set of components used to build Taiga UI based Angular applications\n        </ng-template>\n    </tui-accordion-item>\n</tui-accordion>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\nclass Account {\n    constructor(readonly name: string, readonly balance: number) {}\n\n    toString(): string {\n        return `${this.name} (${this.balance})`;\n    }\n}\n\n@Component({\n    selector: `tui-accordion-example-2`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiAccordionExample2 {\n    readonly accounts = [\n        new Account(`Rubles`, 500),\n        new Account(`Dollar`, 237),\n        new Account(`Euro`, 100),\n    ];\n\n    svgIcons = {\n        rubles: import(`!!raw-loader!./rubles.svg`) as Promise<{default: string}>,\n    };\n\n    testForm = new FormGroup({\n        name: new FormControl(``),\n        accounts: new FormControl(this.accounts[0]),\n    });\n}\n","<tui-accordion\n    *ngIf=\"svgIcons.rubles | async as lazySvg\"\n    class=\"container\"\n    [rounded]=\"false\"\n>\n    <tui-accordion-item\n        borders=\"top-bottom\"\n        [showArrow]=\"false\"\n    >\n        <div class=\"operation-header\">\n            <div class=\"operation-date\">\n                4\n                <div class=\"operation-month\">May</div>\n            </div>\n            <div class=\"operation-pic\">\n                <tui-svg\n                    class=\"operation-icon\"\n                    [src]=\"lazySvg?.default || ''\"\n                ></tui-svg>\n            </div>\n            <div class=\"operation-title\">Get your money</div>\n            <div class=\"operation-info\">\n                <tui-money\n                    class=\"operation-amount\"\n                    [value]=\"23000\"\n                ></tui-money>\n                <div class=\"operation-status\">Waiting for approve</div>\n            </div>\n        </div>\n        <ng-template tuiAccordionItemContent>\n            <h3 class=\"form-title\">Payment form</h3>\n            <form\n                class=\"operation-form\"\n                [formGroup]=\"testForm\"\n            >\n                <tui-input\n                    tuiTextfieldExampleText=\"Roman Sedov\"\n                    formControlName=\"name\"\n                    class=\"input\"\n                >\n                    Your name\n                </tui-input>\n                <tui-select\n                    formControlName=\"accounts\"\n                    class=\"input\"\n                >\n                    Choose an account\n                    <tui-data-list-wrapper\n                        *tuiDataList\n                        [items]=\"accounts\"\n                    ></tui-data-list-wrapper>\n                </tui-select>\n                <div class=\"buttons\">\n                    <button\n                        tuiButton\n                        type=\"submit\"\n                        size=\"l\"\n                        class=\"tui-space_right-2\"\n                    >\n                        Send\n                    </button>\n                    <button\n                        tuiButton\n                        type=\"button\"\n                        appearance=\"flat\"\n                        size=\"l\"\n                    >\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </ng-template>\n    </tui-accordion-item>\n    <tui-accordion-item\n        borders=\"top-bottom\"\n        [showArrow]=\"false\"\n    >\n        <div class=\"operation-header\">\n            <div class=\"operation-date\">\n                5\n                <div class=\"operation-month\">May</div>\n            </div>\n            <div class=\"operation-pic\">\n                <tui-svg\n                    class=\"operation-icon\"\n                    [src]=\"lazySvg?.default || ''\"\n                ></tui-svg>\n            </div>\n            <div class=\"operation-title\">Get your money back</div>\n            <div class=\"operation-info\">\n                <tui-money\n                    class=\"operation-amount\"\n                    [value]=\"23000\"\n                ></tui-money>\n                <div class=\"operation-status operation-status_success\">Approved</div>\n            </div>\n        </div>\n        <ng-template tuiAccordionItemContent>\n            <h3 class=\"form-title\">Payment form</h3>\n            <form\n                class=\"operation-form\"\n                [formGroup]=\"testForm\"\n            >\n                <tui-input\n                    tuiTextfieldExampleText=\"Roman Sedov\"\n                    formControlName=\"name\"\n                    class=\"input\"\n                >\n                    Your name\n                </tui-input>\n                <tui-select\n                    formControlName=\"accounts\"\n                    class=\"input\"\n                >\n                    Choose an account\n                    <tui-data-list-wrapper\n                        *tuiDataList\n                        [items]=\"accounts\"\n                    ></tui-data-list-wrapper>\n                </tui-select>\n                <div class=\"buttons\">\n                    <button\n                        tuiButton\n                        type=\"submit\"\n                        size=\"l\"\n                        class=\"tui-space_right-2\"\n                    >\n                        Send\n                    </button>\n                    <button\n                        tuiButton\n                        type=\"button\"\n                        appearance=\"flat\"\n                        size=\"l\"\n                    >\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </ng-template>\n    </tui-accordion-item>\n    <tui-accordion-item\n        borders=\"top-bottom\"\n        [showArrow]=\"false\"\n    >\n        <div class=\"operation-header\">\n            <div class=\"operation-date\">\n                6\n                <div class=\"operation-month\">May</div>\n            </div>\n            <div class=\"operation-pic\">\n                <tui-svg\n                    class=\"operation-icon\"\n                    [src]=\"lazySvg?.default || ''\"\n                ></tui-svg>\n            </div>\n            <div class=\"operation-title\">Get your neighbor's money</div>\n            <div class=\"operation-info\">\n                <tui-money\n                    class=\"operation-amount\"\n                    [value]=\"23000\"\n                ></tui-money>\n                <div class=\"operation-status operation-status_error\">Declined</div>\n            </div>\n        </div>\n        <ng-template tuiAccordionItemContent>\n            <h3 class=\"form-title\">Payment form</h3>\n            <form\n                class=\"operation-form\"\n                [formGroup]=\"testForm\"\n            >\n                <tui-input\n                    tuiTextfieldExampleText=\"Roman Sedov\"\n                    formControlName=\"name\"\n                    class=\"input\"\n                >\n                    Your name\n                </tui-input>\n                <tui-select\n                    formControlName=\"accounts\"\n                    class=\"input\"\n                >\n                    Choose an account\n                    <tui-data-list-wrapper\n                        *tuiDataList\n                        [items]=\"accounts\"\n                    ></tui-data-list-wrapper>\n                </tui-select>\n                <div class=\"buttons\">\n                    <button\n                        tuiButton\n                        type=\"submit\"\n                        size=\"l\"\n                        class=\"tui-space_right-2\"\n                    >\n                        Send\n                    </button>\n                    <button\n                        tuiButton\n                        type=\"button\"\n                        appearance=\"flat\"\n                        size=\"l\"\n                    >\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </ng-template>\n    </tui-accordion-item>\n</tui-accordion>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-accordion-example-3`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiAccordionExample3 {}\n","<tui-accordion-item class=\"container\">\n    Taiga UI cdk\n    <ng-template tuiAccordionItemContent>\n        Development kit consisting of the low level tools and abstractions used to develop Taiga UI Angular entities\n    </ng-template>\n</tui-accordion-item>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-accordion-example-4`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiAccordionExample4 {}\n","<tui-accordion-item class=\"container\">\n    Taiga UI lazy\n    <ng-template tuiAccordionItemContent>I'm lazy content</ng-template>\n</tui-accordion-item>\n\n<tui-accordion-item class=\"container\">\n    Taiga UI eager\n    <div tuiAccordionItemContent>I'm eager content</div>\n</tui-accordion-item>\n"],"sourceRoot":"webpack:///"}