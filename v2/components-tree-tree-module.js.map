{"version":3,"sources":["./src/modules/components/tree/examples/1/index.ts","./src/modules/components/tree/examples/1/index.html","./src/modules/components/tree/examples/2/index.ts","./src/modules/components/tree/examples/2/index.html","./src/modules/components/tree/examples/3/index.ts","./src/modules/components/tree/examples/3/index.html","./src/modules/components/tree/examples/4/index.ts","./src/modules/components/tree/examples/4/index.html","./src/modules/components/tree/examples/5/content.ts","./src/modules/components/tree/examples/5/index.ts","./src/modules/components/tree/examples/5/index.html","./src/modules/components/tree/examples/6/index.ts","./src/modules/components/tree/examples/6/index.html","./src/modules/components/tree/examples/7/index.ts","./src/modules/components/tree/examples/7/index.html","./src/modules/components/tree/examples/7/service.ts","./src/modules/components/tree/tree.component.ts","./src/modules/components/tree/tree.template.html","./src/modules/components/tree/tree.module.ts"],"names":[],"mappings":"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","file":"components-tree-tree-module.js","sourcesContent":["import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-tree-example-1`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTreeExample1 {}\n","<ng-container [tuiTreeController]=\"true\">\n    <tui-tree-item>\n        Fruits\n        <tui-tree-item>\n            Apples\n            <tui-tree-item>Granny Smith</tui-tree-item>\n            <tui-tree-item>Red Delicious</tui-tree-item>\n        </tui-tree-item>\n        <tui-tree-item>Oranges</tui-tree-item>\n    </tui-tree-item>\n    <tui-tree-item>\n        Animals\n        <tui-tree-item>Cats</tui-tree-item>\n        <tui-tree-item>Dogs</tui-tree-item>\n    </tui-tree-item>\n</ng-container>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-tree-example-2`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    encapsulation,\n    changeDetection,\n})\nexport class TuiTreeExample2 {\n    readonly data = [\n        `Top level 1`,\n        [`Second level item`, [`Third level 1`, `Third level 2`, `Third level 3`]],\n        `Top level 2`,\n        `Top level 3`,\n        [`Second 1`, `Second 2`],\n    ];\n}\n","<tui-tree [value]=\"data\"></tui-tree>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {EMPTY_ARRAY, TuiHandler} from '@taiga-ui/cdk';\n\ninterface TreeNode {\n    readonly text: string;\n    readonly icon?: string;\n    readonly children?: readonly TreeNode[];\n}\n\n@Component({\n    selector: `tui-tree-example-3`,\n    templateUrl: `./index.html`,\n    styleUrls: [`index.less`],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTreeExample3 {\n    readonly data: TreeNode = {\n        text: `Topmost`,\n        children: [\n            {\n                text: `Top level 1`,\n                icon: `tuiIconHeart`,\n                children: [\n                    {\n                        text: `Another item`,\n                        children: [\n                            {text: `Next level 1`, icon: `tuiIconHeart`},\n                            {text: `Next level 2`, icon: `tuiIconHeart`},\n                            {text: `Next level 3`},\n                        ],\n                    },\n                ],\n            },\n            {text: `Top level 2`},\n            {\n                text: `Top level 3`,\n                children: [{text: `Test 1`}, {text: `Test 2`, icon: `tuiIconHeart`}],\n            },\n        ],\n    };\n\n    readonly handler: TuiHandler<TreeNode, readonly TreeNode[]> = item =>\n        item.children || EMPTY_ARRAY;\n}\n","<tui-tree\n    [tuiTreeController]=\"true\"\n    [value]=\"data\"\n    [content]=\"content\"\n    [childrenHandler]=\"handler\"\n></tui-tree>\n\n<ng-template\n    #content\n    let-value\n    let-node=\"node\"\n>\n    <div\n        class=\"wrapper\"\n        [style.opacity]=\"1 / node.level\"\n    >\n        <tui-svg\n            *ngIf=\"value.icon\"\n            [src]=\"value.icon\"\n        ></tui-svg>\n        {{ value.text }}\n    </div>\n</ng-template>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {EMPTY_ARRAY, TuiHandler} from '@taiga-ui/cdk';\n\ninterface TreeNode {\n    readonly text: string;\n    readonly children?: readonly TreeNode[];\n}\n\n@Component({\n    selector: `tui-tree-example-4`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTreeExample4 {\n    readonly data: TreeNode = {\n        text: `Topmost`,\n        children: [\n            {\n                text: `Top level 1`,\n                children: [\n                    {\n                        text: `Another item`,\n                        children: [\n                            {text: `Next level 1`},\n                            {text: `Next level 2`},\n                            {text: `Next level 3`},\n                        ],\n                    },\n                ],\n            },\n            {text: `Top level 2`},\n            {\n                text: `Top level 3`,\n                children: [{text: `Test 1`}, {text: `Test 2`}],\n            },\n        ],\n    };\n\n    readonly map = new Map<TreeNode, boolean>();\n\n    readonly handler: TuiHandler<TreeNode, readonly TreeNode[]> = item =>\n        item.children || EMPTY_ARRAY;\n\n    toggleTopmost(): void {\n        this.map.set(this.data, !this.map.get(this.data));\n    }\n\n    toggleLevel(): void {\n        this.map.set(this.data.children![0], !this.map.get(this.data.children![0]));\n    }\n}\n","<tui-tree\n    [tuiTreeController]=\"false\"\n    [map]=\"map\"\n    [value]=\"data\"\n    [content]=\"content\"\n    [childrenHandler]=\"handler\"\n></tui-tree>\n\n<ng-template\n    #content\n    let-item\n>\n    {{ item.text }}\n</ng-template>\n\n<p>\n    <button\n        tuiButton\n        size=\"s\"\n        class=\"tui-space_right-2\"\n        (click)=\"toggleTopmost()\"\n    >\n        Toggle Topmost\n    </button>\n    <button\n        tuiButton\n        size=\"s\"\n        (click)=\"toggleLevel()\"\n    >\n        Toggle Top level 1\n    </button>\n</p>\n","import {Component} from '@angular/core';\nimport {TuiTreeItemContentComponent} from '@taiga-ui/kit';\n\n@Component({\n    selector: `folders`,\n    template: `\n        <tui-svg\n            class=\"tui-space_right-2\"\n            [src]=\"icon\"\n        ></tui-svg>\n        <ng-container [ngTemplateOutlet]=\"context.template\"></ng-container>\n    `,\n    styleUrls: [`content.less`],\n    host: {\n        '(click)': `onClick()`,\n    },\n})\nexport class FoldersComponent extends TuiTreeItemContentComponent {\n    get icon(): string {\n        return this.isExpandable ? `tuiIconFolderLarge` : `tuiIconFileLarge`;\n    }\n}\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {EMPTY_ARRAY, TuiHandler} from '@taiga-ui/cdk';\nimport {TUI_TREE_CONTENT} from '@taiga-ui/kit';\nimport {PolymorpheusComponent} from '@tinkoff/ng-polymorpheus';\n\nimport {FoldersComponent} from './content';\n\ninterface TreeNode {\n    readonly text: string;\n    readonly children?: readonly TreeNode[];\n}\n\n@Component({\n    selector: `tui-tree-example-5`,\n    templateUrl: `./index.html`,\n    styleUrls: [`index.less`],\n    providers: [\n        {\n            provide: TUI_TREE_CONTENT,\n            useValue: new PolymorpheusComponent(FoldersComponent),\n        },\n    ],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTreeExample5 {\n    readonly data: TreeNode = {\n        text: `Topmost`,\n        children: [\n            {\n                text: `Top level 1`,\n                children: [\n                    {\n                        text: `Another item`,\n                        children: [\n                            {text: `Next level 1`},\n                            {text: `Next level 2`},\n                            {text: `Next level 3`},\n                        ],\n                    },\n                ],\n            },\n            {text: `Top level 2`},\n            {\n                text: `Top level 3`,\n                children: [{text: `Test 1`}, {text: `Test 2`}],\n            },\n        ],\n    };\n\n    readonly handler: TuiHandler<TreeNode, readonly TreeNode[]> = item =>\n        item.children || EMPTY_ARRAY;\n}\n","<tui-tree\n    *ngFor=\"let item of data.children\"\n    [tuiTreeController]=\"true\"\n    [value]=\"item\"\n    [content]=\"content\"\n    [childrenHandler]=\"handler\"\n></tui-tree>\n\n<ng-template\n    #content\n    let-item\n>\n    {{ item.text }}\n</ng-template>\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {EMPTY_ARRAY, TuiHandler} from '@taiga-ui/cdk';\n\ninterface TreeNode {\n    readonly text: string;\n    readonly children?: readonly TreeNode[];\n}\n\n@Component({\n    selector: `tui-tree-example-6`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTreeExample6 {\n    map = new Map<TreeNode, boolean>();\n\n    readonly data: TreeNode = {\n        text: `Topmost`,\n        children: [\n            {\n                text: `Top level 1`,\n                children: [\n                    {\n                        text: `Another item`,\n                        children: [\n                            {text: `Next level 1`},\n                            {text: `Next level 2`},\n                            {text: `Next level 3`},\n                        ],\n                    },\n                ],\n            },\n            {text: `Top level 2`},\n            {\n                text: `Top level 3`,\n                children: [{text: `Test 1`}, {text: `Test 2`}],\n            },\n        ],\n    };\n\n    readonly handler: TuiHandler<TreeNode, readonly TreeNode[]> = item =>\n        item.children || EMPTY_ARRAY;\n\n    readonly getValue = (item: TreeNode, map: Map<TreeNode, boolean>): boolean | null => {\n        const flat = flatten(item);\n        const result = !!map.get(flat[0]);\n\n        for (let i = 0; i < flat.length; i++) {\n            if (result !== !!map.get(flat[i])) {\n                return null;\n            }\n        }\n\n        return result;\n    };\n\n    onChecked(node: TreeNode, value: boolean): void {\n        flatten(node).forEach(item => this.map.set(item, value));\n\n        this.map = new Map(this.map.entries());\n    }\n}\n\nfunction flatten(item: TreeNode): readonly TreeNode[] {\n    return item.children\n        ? item.children.map(flatten).reduce((arr, item) => [...arr, ...item], [])\n        : [item];\n}\n","<tui-tree\n    *ngFor=\"let item of data.children\"\n    [tuiTreeController]=\"true\"\n    [value]=\"item\"\n    [content]=\"content\"\n    [childrenHandler]=\"handler\"\n></tui-tree>\n\n<ng-template\n    #content\n    let-item\n>\n    <tui-checkbox-labeled\n        class=\"tui-space_vertical-2 tui-space_left-1\"\n        [ngModel]=\"item | tuiMapper: getValue:map\"\n        (ngModelChange)=\"onChecked(item, $event)\"\n    >\n        {{ item.text }}\n    </tui-checkbox-labeled>\n</ng-template>\n","import {Component, Inject} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiHandler} from '@taiga-ui/cdk';\nimport {\n    TUI_TREE_LOADER,\n    TUI_TREE_LOADING,\n    TUI_TREE_START,\n    TuiTreeService,\n} from '@taiga-ui/kit';\n\nimport {TreeLoader} from './service';\n\nexport interface Item {\n    readonly text: string;\n    readonly children?: boolean;\n}\n\n@Component({\n    selector: `tui-tree-example-7`,\n    templateUrl: `./index.html`,\n    styleUrls: [`./index.less`],\n    changeDetection,\n    encapsulation,\n    providers: [\n        TuiTreeService,\n        {\n            provide: TUI_TREE_START,\n            useValue: {text: `Topmost`},\n        },\n        {\n            provide: TUI_TREE_LOADER,\n            useClass: TreeLoader,\n        },\n    ],\n})\nexport class TuiTreeExample7 {\n    map = new Map<Item, boolean>();\n\n    constructor(\n        @Inject(TUI_TREE_LOADING) readonly loading: unknown,\n        @Inject(TuiTreeService) readonly service: TuiTreeService<Item>,\n    ) {}\n\n    childrenHandler: TuiHandler<Item, readonly Item[]> = item =>\n        this.service.getChildren(item);\n\n    onToggled(item: Item): void {\n        this.service.loadChildren(item);\n    }\n}\n","<tui-tree\n    [tuiTreeController]=\"false\"\n    [map]=\"map\"\n    [value]=\"service.data$ | async\"\n    [childrenHandler]=\"childrenHandler\"\n    [content]=\"content\"\n    (toggled)=\"onToggled($event)\"\n></tui-tree>\n\n<ng-template\n    #content\n    let-item\n>\n    <tui-loader\n        *ngIf=\"item === loading; else text\"\n        class=\"loader\"\n    ></tui-loader>\n    <ng-template #text>{{ item.text }}</ng-template>\n</ng-template>\n","import {Injectable} from '@angular/core';\nimport {TuiTreeLoader} from '@taiga-ui/kit';\nimport {Observable, timer} from 'rxjs';\nimport {mapTo} from 'rxjs/operators';\n\nimport {Item} from './index';\n\n@Injectable()\nexport class TreeLoader implements TuiTreeLoader<Item> {\n    loadChildren({text}: Item): Observable<Item[]> {\n        return timer(3000).pipe(\n            mapTo([\n                {text: `${text} 1`, children: Math.random() > 0.5},\n                {text: `${text} 2`, children: Math.random() > 0.5},\n                {text: `${text} 3`, children: Math.random() > 0.5},\n            ]),\n        );\n    }\n\n    hasChildren({children}: Item): boolean {\n        return !!children;\n    }\n}\n","import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\n\n@Component({\n    selector: `example-tree`,\n    templateUrl: `./tree.template.html`,\n    changeDetection,\n})\nexport class ExampleTuiTreeComponent {\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n\n    readonly example1 = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n    };\n\n    readonly example2 = {\n        TypeScript: import(`!!raw-loader!./examples/2/index.ts`),\n        HTML: import(`!!raw-loader!./examples/2/index.html`),\n        LESS: import(`!!raw-loader!./examples/2/index.less`),\n    };\n\n    readonly example3 = {\n        TypeScript: import(`!!raw-loader!./examples/3/index.ts`),\n        HTML: import(`!!raw-loader!./examples/3/index.html`),\n        LESS: import(`!!raw-loader!./examples/3/index.less`),\n    };\n\n    readonly example4 = {\n        TypeScript: import(`!!raw-loader!./examples/4/index.ts`),\n        HTML: import(`!!raw-loader!./examples/4/index.html`),\n    };\n\n    readonly example5 = {\n        TypeScript: import(`!!raw-loader!./examples/5/index.ts`),\n        HTML: import(`!!raw-loader!./examples/5/index.html`),\n        LESS: import(`!!raw-loader!./examples/5/index.less`),\n        'content.ts': import(`!!raw-loader!./examples/5/content`),\n        'content.less': import(`!!raw-loader!./examples/5/content.less`),\n    };\n\n    readonly example6 = {\n        TypeScript: import(`!!raw-loader!./examples/6/index.ts`),\n        HTML: import(`!!raw-loader!./examples/6/index.html`),\n    };\n\n    readonly example7 = {\n        TypeScript: import(`!!raw-loader!./examples/7/index.ts`),\n        HTML: import(`!!raw-loader!./examples/7/index.html`),\n        LESS: import(`!!raw-loader!./examples/7/index.less`),\n        'service.ts': import(`!!raw-loader!./examples/7/service`),\n    };\n}\n","<tui-doc-page\n    header=\"Tree\"\n    package=\"KIT\"\n    type=\"components\"\n>\n    <ng-template pageTab>\n        <p i18n>Component to display tree-like data structure</p>\n\n        <tui-doc-example\n            id=\"manual\"\n            i18n-heading\n            heading=\"Manual\"\n            [content]=\"example1\"\n        >\n            <tui-tree-example-1></tui-tree-example-1>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"array\"\n            i18n-heading\n            heading=\"Array\"\n            [content]=\"example2\"\n        >\n            <tui-tree-example-2></tui-tree-example-2>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"template\"\n            i18n-heading\n            heading=\"Template\"\n            [content]=\"example3\"\n        >\n            <tui-tree-example-3></tui-tree-example-3>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"programmatic\"\n            i18n-heading\n            heading=\"Programmatic control\"\n            [content]=\"example4\"\n        >\n            <tui-tree-example-4></tui-tree-example-4>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"custom\"\n            i18n-heading\n            heading=\"Custom\"\n            [content]=\"example5\"\n        >\n            <tui-tree-example-5></tui-tree-example-5>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"checkbox\"\n            i18n-heading\n            heading=\"Checkbox\"\n            [content]=\"example6\"\n        >\n            <tui-tree-example-6></tui-tree-example-6>\n        </tui-doc-example>\n\n        <tui-doc-example\n            id=\"async\"\n            i18n-heading\n            heading=\"Asynchronous\"\n            [content]=\"example7\"\n        >\n            <tui-tree-example-7></tui-tree-example-7>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        <tui-doc-documentation\n            heading=\"TreeItem\"\n            [showValues]=\"false\"\n        >\n            <ng-template\n                documentationPropertyName=\"tuiTreeController\"\n                documentationPropertyType=\"boolean\"\n                documentationPropertyMode=\"input\"\n            >\n                Directive used to enable opening/closing of nodes with children.\n                <code>Boolean</code>\n                input is the default state.\n            </ng-template>\n        </tui-doc-documentation>\n\n        <tui-doc-documentation\n            heading=\"Tree\"\n            [showValues]=\"false\"\n        >\n            <ng-template\n                documentationPropertyName=\"childrenHandler\"\n                documentationPropertyType=\"TuiHandler<T, readonly T[]>\"\n                documentationPropertyMode=\"input\"\n            ></ng-template>\n            <ng-template\n                documentationPropertyName=\"content\"\n                documentationPropertyType=\"PolymorpheusContent<TuiTreeContext>\"\n                documentationPropertyMode=\"input\"\n            ></ng-template>\n            <ng-template\n                documentationPropertyName=\"data\"\n                documentationPropertyType=\"T\"\n                documentationPropertyMode=\"input\"\n            ></ng-template>\n            <ng-template\n                documentationPropertyName=\"tuiTreeController\"\n                documentationPropertyType=\"boolean\"\n                documentationPropertyMode=\"input\"\n            >\n                Directive used to enable opening/closing of nodes with children.\n                <code>Boolean</code>\n                input is the default state.\n            </ng-template>\n            <ng-template\n                documentationPropertyName=\"map\"\n                documentationPropertyType=\"Map<T, boolean>\"\n                documentationPropertyMode=\"input\"\n            >\n                A map used with controller directive for manual programmatic toggling.\n            </ng-template>\n        </tui-doc-documentation>\n\n        <tui-doc-documentation\n            heading=\"Tokens\"\n            [showValues]=\"false\"\n        >\n            <ng-template\n                documentationPropertyName=\"TUI_TREE_CONTENT\"\n                documentationPropertyType=\"PolymorpheusContent<TuiTreeItemContext>\"\n            >\n                Provide your own component used internally to display node content (see\n                <a\n                    tuiLink\n                    routerLink=\"/components/tree\"\n                    fragment=\"custom\"\n                >\n                    this example\n                </a>\n                )\n            </ng-template>\n            <ng-template\n                documentationPropertyName=\"TUI_TREE_CONTROLLER\"\n                documentationPropertyType=\"TuiTreeController\"\n            >\n                Provide your own open/closed controlling mechanism\n            </ng-template>\n            <ng-template\n                documentationPropertyName=\"TUI_TREE_ACCESSOR\"\n                documentationPropertyType=\"TuiTreeAccessor<T>\"\n            >\n                Provide your own tracker for value/node pairs (so you can match\n                <code>TreeItem</code>\n                instances to their corresponding\n                <code>data: T</code>\n                when using\n                <code>Tree</code>\n                component with custom open/closed controller)\n            </ng-template>\n        </tui-doc-documentation>\n    </ng-template>\n\n    <ng-template pageTab>\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Import\n                    <code>TuiTreeModule</code>\n                    into a module where you want to use our component\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Add to the template:</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {TuiMapperPipeModule} from '@taiga-ui/cdk';\nimport {\n    TuiButtonModule,\n    TuiLinkModule,\n    TuiLoaderModule,\n    TuiSvgModule,\n} from '@taiga-ui/core';\nimport {TuiCheckboxLabeledModule, TuiTreeModule} from '@taiga-ui/kit';\n\nimport {TuiTreeExample1} from './examples/1';\nimport {TuiTreeExample2} from './examples/2';\nimport {TuiTreeExample3} from './examples/3';\nimport {TuiTreeExample4} from './examples/4';\nimport {TuiTreeExample5} from './examples/5';\nimport {FoldersComponent} from './examples/5/content';\nimport {TuiTreeExample6} from './examples/6';\nimport {TuiTreeExample7} from './examples/7';\nimport {ExampleTuiTreeComponent} from './tree.component';\n\n@NgModule({\n    imports: [\n        TuiTreeModule,\n        TuiSvgModule,\n        TuiButtonModule,\n        TuiLinkModule,\n        TuiCheckboxLabeledModule,\n        TuiMapperPipeModule,\n        TuiLoaderModule,\n        FormsModule,\n        CommonModule,\n        TuiAddonDocModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiTreeComponent)),\n    ],\n    entryComponents: [FoldersComponent],\n    declarations: [\n        ExampleTuiTreeComponent,\n        FoldersComponent,\n        TuiTreeExample1,\n        TuiTreeExample2,\n        TuiTreeExample3,\n        TuiTreeExample4,\n        TuiTreeExample5,\n        TuiTreeExample6,\n        TuiTreeExample7,\n    ],\n    exports: [ExampleTuiTreeComponent],\n})\nexport class ExampleTuiTreeModule {}\n"],"sourceRoot":"webpack:///"}