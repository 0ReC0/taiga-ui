{"version":3,"sources":["/home/runner/work/taiga-ui/taiga-ui/node_modules/@tiptap/starter-kit/dist/tiptap-starter-kit.esm.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACa;AACZ;AACa;AACb;AACW;AACH;AACI;AACF;AACC;AACL;AACA;AACe;AACjB;AACK;AACM;AACL;AACN;AACJ;;AAE1C,mBAAmB,sDAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,4BAA4B,oEAAU;AACtC;AACA;AACA,4BAA4B,8DAAI;AAChC;AACA;AACA,4BAA4B,qEAAU;AACtC;AACA;AACA,4BAA4B,8DAAI;AAChC;AACA;AACA,4BAA4B,oEAAS;AACrC;AACA;AACA,4BAA4B,kEAAQ;AACpC;AACA;AACA,4BAA4B,oEAAU;AACtC;AACA;AACA,4BAA4B,mEAAS;AACrC;AACA;AACA,4BAA4B,oEAAS;AACrC;AACA;AACA,4BAA4B,kEAAO;AACnC;AACA;AACA,4BAA4B,kEAAO;AACnC;AACA;AACA,4BAA4B,0EAAc;AAC1C;AACA;AACA,4BAA4B,iEAAM;AAClC;AACA;AACA,4BAA4B,oEAAQ;AACpC;AACA;AACA,4BAA4B,uEAAW;AACvC;AACA;AACA,4BAA4B,oEAAS;AACrC;AACA;AACA,4BAA4B,iEAAM;AAClC;AACA;AACA,4BAA4B,+DAAI;AAChC;AACA;AACA,KAAK;AACL,CAAC;;AAEgC;AACjC","file":"tiptap-starter-kit.js","sourcesContent":["import { Extension } from '@tiptap/core';\nimport Blockquote from '@tiptap/extension-blockquote';\nimport Bold from '@tiptap/extension-bold';\nimport BulletList from '@tiptap/extension-bullet-list';\nimport Code from '@tiptap/extension-code';\nimport CodeBlock from '@tiptap/extension-code-block';\nimport Document from '@tiptap/extension-document';\nimport Dropcursor from '@tiptap/extension-dropcursor';\nimport Gapcursor from '@tiptap/extension-gapcursor';\nimport HardBreak from '@tiptap/extension-hard-break';\nimport Heading from '@tiptap/extension-heading';\nimport History from '@tiptap/extension-history';\nimport HorizontalRule from '@tiptap/extension-horizontal-rule';\nimport Italic from '@tiptap/extension-italic';\nimport ListItem from '@tiptap/extension-list-item';\nimport OrderedList from '@tiptap/extension-ordered-list';\nimport Paragraph from '@tiptap/extension-paragraph';\nimport Strike from '@tiptap/extension-strike';\nimport Text from '@tiptap/extension-text';\n\nconst StarterKit = Extension.create({\r\n    name: 'starterKit',\r\n    addExtensions() {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\r\n        const extensions = [];\r\n        if (this.options.blockquote !== false) {\r\n            extensions.push(Blockquote.configure((_a = this.options) === null || _a === void 0 ? void 0 : _a.blockquote));\r\n        }\r\n        if (this.options.bold !== false) {\r\n            extensions.push(Bold.configure((_b = this.options) === null || _b === void 0 ? void 0 : _b.bold));\r\n        }\r\n        if (this.options.bulletList !== false) {\r\n            extensions.push(BulletList.configure((_c = this.options) === null || _c === void 0 ? void 0 : _c.bulletList));\r\n        }\r\n        if (this.options.code !== false) {\r\n            extensions.push(Code.configure((_d = this.options) === null || _d === void 0 ? void 0 : _d.code));\r\n        }\r\n        if (this.options.codeBlock !== false) {\r\n            extensions.push(CodeBlock.configure((_e = this.options) === null || _e === void 0 ? void 0 : _e.codeBlock));\r\n        }\r\n        if (this.options.document !== false) {\r\n            extensions.push(Document.configure((_f = this.options) === null || _f === void 0 ? void 0 : _f.document));\r\n        }\r\n        if (this.options.dropcursor !== false) {\r\n            extensions.push(Dropcursor.configure((_g = this.options) === null || _g === void 0 ? void 0 : _g.dropcursor));\r\n        }\r\n        if (this.options.gapcursor !== false) {\r\n            extensions.push(Gapcursor.configure((_h = this.options) === null || _h === void 0 ? void 0 : _h.gapcursor));\r\n        }\r\n        if (this.options.hardBreak !== false) {\r\n            extensions.push(HardBreak.configure((_j = this.options) === null || _j === void 0 ? void 0 : _j.hardBreak));\r\n        }\r\n        if (this.options.heading !== false) {\r\n            extensions.push(Heading.configure((_k = this.options) === null || _k === void 0 ? void 0 : _k.heading));\r\n        }\r\n        if (this.options.history !== false) {\r\n            extensions.push(History.configure((_l = this.options) === null || _l === void 0 ? void 0 : _l.history));\r\n        }\r\n        if (this.options.horizontalRule !== false) {\r\n            extensions.push(HorizontalRule.configure((_m = this.options) === null || _m === void 0 ? void 0 : _m.horizontalRule));\r\n        }\r\n        if (this.options.italic !== false) {\r\n            extensions.push(Italic.configure((_o = this.options) === null || _o === void 0 ? void 0 : _o.italic));\r\n        }\r\n        if (this.options.listItem !== false) {\r\n            extensions.push(ListItem.configure((_p = this.options) === null || _p === void 0 ? void 0 : _p.listItem));\r\n        }\r\n        if (this.options.orderedList !== false) {\r\n            extensions.push(OrderedList.configure((_q = this.options) === null || _q === void 0 ? void 0 : _q.orderedList));\r\n        }\r\n        if (this.options.paragraph !== false) {\r\n            extensions.push(Paragraph.configure((_r = this.options) === null || _r === void 0 ? void 0 : _r.paragraph));\r\n        }\r\n        if (this.options.strike !== false) {\r\n            extensions.push(Strike.configure((_s = this.options) === null || _s === void 0 ? void 0 : _s.strike));\r\n        }\r\n        if (this.options.text !== false) {\r\n            extensions.push(Text.configure((_t = this.options) === null || _t === void 0 ? void 0 : _t.text));\r\n        }\r\n        return extensions;\r\n    },\r\n});\n\nexport { StarterKit as default };\n//# sourceMappingURL=tiptap-starter-kit.esm.js.map\n"],"sourceRoot":"webpack:///"}