{"version":3,"sources":["./src/modules/components/input-copy/examples/1/index.ts","./src/modules/components/input-copy/examples/1/index.html","./src/modules/components/input-copy/input-copy.component.ts","./src/modules/components/input-copy/input-copy.template.html","./src/modules/components/input-copy/input-copy.module.ts"],"names":[],"mappings":"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","file":"components-input-copy-input-copy-module.js","sourcesContent":["import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: `tui-input-copy-example-1`,\n    templateUrl: `./index.html`,\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputCopyExample1 {\n    readonly testForm = new FormGroup({\n        testValue: new FormControl(``, Validators.required),\n    });\n}\n","<form\n    class=\"b-form\"\n    [formGroup]=\"testForm\"\n>\n    <tui-input-copy\n        formControlName=\"testValue\"\n        tuiTextfieldSize=\"s\"\n    >\n        Value\n        <input\n            tuiTextfield\n            placeholder=\"Placeholder\"\n        />\n    </tui-input-copy>\n\n    <tui-input-copy\n        formControlName=\"testValue\"\n        tuiTextfieldSize=\"m\"\n        class=\"tui-space_vertical-4\"\n    >\n        Value\n    </tui-input-copy>\n\n    <tui-input-copy formControlName=\"testValue\">Value</tui-input-copy>\n</form>\n","import {Component, forwardRef, ViewChild} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {TuiDocExample} from '@taiga-ui/addon-doc';\nimport {TuiAutofillFieldName} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nimport {AbstractExampleTuiControl} from '../abstract/control';\nimport {ABSTRACT_PROPS_ACCESSOR} from '../abstract/inherited-documentation/abstract-props-accessor';\n\n@Component({\n    selector: `example-input-copy`,\n    templateUrl: `./input-copy.template.html`,\n    changeDetection,\n    providers: [\n        {\n            provide: ABSTRACT_PROPS_ACCESSOR,\n            useExisting: forwardRef(() => ExampleTuiInputCopyComponent),\n        },\n    ],\n})\nexport class ExampleTuiInputCopyComponent extends AbstractExampleTuiControl {\n    @ViewChild(`customTemplate`)\n    customTemplate: PolymorpheusContent = ``;\n\n    readonly example1: TuiDocExample = {\n        TypeScript: import(`!!raw-loader!./examples/1/index.ts`),\n        HTML: import(`!!raw-loader!./examples/1/index.html`),\n    };\n\n    readonly exampleModule = import(`!!raw-loader!./examples/import/import-module.md`);\n    readonly exampleHtml = import(`!!raw-loader!./examples/import/insert-template.md`);\n    readonly exampleForm = import(`!!raw-loader!./examples/import/declare-form.md`);\n\n    readonly control = new FormControl(``, Validators.required);\n\n    readonly maxLengthVariants: readonly number[] = [10];\n\n    readonly autocompleteVariants: TuiAutofillFieldName[] = [\n        `off`,\n        `cc-name`,\n        `cc-number`,\n        `cc-exp-month`,\n        `cc-exp-year`,\n        `cc-type`,\n        `given-name`,\n        `additional-name`,\n        `family-name`,\n        `username`,\n        `email`,\n        `street-address`,\n        `postal-code`,\n        `country-name`,\n    ];\n\n    readonly autocomplete: TuiAutofillFieldName | '' = ``;\n\n    readonly maxLength = null;\n\n    readonly successMessageVariants = [`Copied`, `Template`];\n\n    successMessage = this.successMessageVariants[0];\n\n    messageDirection = this.hintDirectionVariants[0];\n    messageMode = this.hintModeVariants[0];\n\n    get notificationTemplate(): PolymorpheusContent {\n        return this.successMessage === `Template`\n            ? this.customTemplate\n            : this.successMessage;\n    }\n}\n","<tui-doc-page\n    header=\"InputCopy\"\n    package=\"KIT\"\n    type=\"components\"\n>\n    <ng-template pageTab>\n        <p i18n>InputCopy alows user to copy a text of textfield</p>\n\n        <tui-doc-example\n            id=\"example-size\"\n            i18n-heading\n            heading=\"sizes\"\n            [content]=\"example1\"\n        >\n            <tui-notification class=\"tui-space_bottom-4 b-form\">\n                If you need to set some attributes or listen to events on native\n                <code>input</code>\n                , you can put it inside with\n                <code>Textfield</code>\n                directive as shown below\n            </tui-notification>\n            <tui-input-copy-example-1></tui-input-copy-example-1>\n        </tui-doc-example>\n    </ng-template>\n\n    <ng-template pageTab>\n        <tui-doc-demo>\n            <tui-input-copy\n                [formControl]=\"control\"\n                [focusable]=\"focusable\"\n                [tuiTextfieldAutocomplete]=\"autocomplete\"\n                [tuiTextfieldExampleText]=\"exampleText\"\n                [tuiTextfieldLabelOutside]=\"labelOutside\"\n                [tuiTextfieldSize]=\"size\"\n                [tuiTextfieldMaxLength]=\"maxLength\"\n                [tuiTextfieldCleaner]=\"cleaner\"\n                [successMessage]=\"notificationTemplate\"\n                [messageDirection]=\"hintDirection\"\n                [messageMode]=\"hintMode\"\n                [readOnly]=\"readOnly\"\n                [pseudoInvalid]=\"pseudoInvalid\"\n                [pseudoFocused]=\"pseudoFocused\"\n                [pseudoHovered]=\"pseudoHovered\"\n            >\n                Type a text\n            </tui-input-copy>\n        </tui-doc-demo>\n        <tui-doc-documentation>\n            <ng-template\n                i18n\n                documentationPropertyName=\"\"\n                documentationPropertyType=\"boolean\"\n                [(documentationPropertyValue)]=\"disabled\"\n            >\n                Disabled state (use\n                <code>formControl.disable()</code>\n                )\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"successMessage\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"PolymorpheusContent\"\n                [documentationPropertyValues]=\"successMessageVariants\"\n                [(documentationPropertyValue)]=\"successMessage\"\n            >\n                Tooltip message after successfull copy\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"messageDirection\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiDirection\"\n                [documentationPropertyValues]=\"hintDirectionVariants\"\n                [(documentationPropertyValue)]=\"messageDirection\"\n            >\n                Message tooltip direction\n            </ng-template>\n            <ng-template\n                i18n\n                documentationPropertyName=\"messageMode\"\n                documentationPropertyMode=\"input\"\n                documentationPropertyType=\"TuiHintModeT | null\"\n                [documentationPropertyValues]=\"hintModeVariants\"\n                [(documentationPropertyValue)]=\"messageMode\"\n            >\n                Message tooltip mode\n            </ng-template>\n        </tui-doc-documentation>\n        <inherited-documentation></inherited-documentation>\n    </ng-template>\n    <ng-template #customTemplate>\n        <i>Some custom content</i>\n        , that says that content is copied\n    </ng-template>\n\n    <ng-template pageTab>\n        <ol class=\"b-demo-steps\">\n            <li>\n                <p i18n>\n                    Import\n                    <code>TuiInputCopyModule</code>\n                    into a module where you want to use our component\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.module.ts\"\n                    [code]=\"exampleModule\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>\n                    Declare a form (\n                    <code>FormGroup</code>\n                    ) or a control (\n                    <code>FormControl</code>\n                    ) in your component:\n                </p>\n\n                <tui-doc-code\n                    filename=\"myComponent.component.ts\"\n                    [code]=\"exampleForm\"\n                ></tui-doc-code>\n            </li>\n\n            <li>\n                <p i18n>Add to the template:</p>\n\n                <tui-doc-code\n                    filename=\"myComponent.template.html\"\n                    [code]=\"exampleHtml\"\n                ></tui-doc-code>\n            </li>\n        </ol>\n    </ng-template>\n</tui-doc-page>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {generateRoutes, TuiAddonDocModule} from '@taiga-ui/addon-doc';\nimport {TuiNotificationModule, TuiTextfieldControllerModule} from '@taiga-ui/core';\nimport {TuiInputCopyModule} from '@taiga-ui/kit';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {InheritedDocumentationModule} from '../abstract/inherited-documentation/inherited-documentation.module';\nimport {TuiInputCopyExample1} from './examples/1';\nimport {ExampleTuiInputCopyComponent} from './input-copy.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        TuiInputCopyModule,\n        InheritedDocumentationModule,\n        PolymorpheusModule,\n        TuiTextfieldControllerModule,\n        TuiNotificationModule,\n        TuiAddonDocModule,\n        RouterModule.forChild(generateRoutes(ExampleTuiInputCopyComponent)),\n    ],\n    declarations: [ExampleTuiInputCopyComponent, TuiInputCopyExample1],\n    exports: [ExampleTuiInputCopyComponent],\n})\nexport class ExampleTuiInputCopyModule {}\n"],"sourceRoot":"webpack:///"}